{"ast":null,"code":"import _defineProperty from \"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\userEntity\\\\form.jsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { Fieldset } from \"primereact/fieldset\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Button } from \"primereact/button\";\nimport { Toast } from \"primereact/toast\";\nimport { Password } from 'primereact/password';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport withAuth from \"../../components/withAuth\";\nimport \"primeflex/primeflex.css\";\nimport { UserEntityDataService } from \"../../services/UserEntityDataService\";\nimport { AccessProfileDataService } from \"../../services/AccessProfileDataService\";\n\nfunction UserEntityForm(props) {\n  _s();\n\n  var _this = this;\n\n  var userEntitySelectedRedux = useSelector(function (state) {\n    return state.userEntitySelectedReducer.userEntitySelected;\n  });\n\n  var _useState = useState(null),\n      selectedLocalData = _useState[0],\n      setSelectedLocalData = _useState[1];\n\n  var _useState2 = useState([]),\n      comboBoxAccessProfiles = _useState2[0],\n      setComboBoxAccessProfiles = _useState2[1];\n\n  var _useState3 = useState([]),\n      selectedAccessProfilesList = _useState3[0],\n      setSelectedAccessProfileList = _useState3[1];\n\n  var toast = useRef(null);\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _useForm = useForm({\n    mode: 'onChange'\n  }),\n      control = _useForm.control,\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      setValue = _useForm.setValue,\n      errors = _useForm.errors,\n      getValues = _useForm.getValues;\n\n  var onSubmit = function onSubmit(data) {\n    var bcrypt = require('bcryptjs');\n\n    var salt = bcrypt.genSaltSync(10);\n    var hash = bcrypt.hashSync(data.password, salt);\n    console.log(data);\n  };\n\n  useEffect(function () {\n    AccessProfileDataService._comboBoxAccessProfiles().then(function (response) {\n      if (userEntitySelectedRedux) {\n        setValue(\"name\", userEntitySelectedRedux.name);\n        setValue(\"email\", userEntitySelectedRedux.email);\n        setValue(\"password\", userEntitySelectedRedux.password);\n        setSelectedAccessProfileList(userEntitySelectedRedux.accessProfileList);\n        var comboBoxAccessProfileAux = [];\n        response.data.forEach(function (ap) {\n          var object = userEntitySelectedRedux.accessProfileList.find(function (apAux) {\n            return apAux.value === ap.value;\n          });\n\n          if (!object) {\n            comboBoxAccessProfileAux.push(ap);\n          }\n        });\n        setComboBoxAccessProfiles(comboBoxAccessProfileAux);\n\n        if (comboBoxAccessProfileAux.length > 0) {\n          setValue(\"accessProfile\", comboBoxAccessProfileAux[0].value);\n        }\n      } else {\n        setComboBoxAccessProfiles(response.data);\n\n        if (response.data.length > 0) {\n          setValue(\"accessProfile\", response.data[0].value);\n        }\n      }\n    });\n  }, [userEntitySelectedRedux]); // useEffect(() => {\n  //     if (userEntitySelectedRedux) {\n  //         setValue(\"name\", userEntitySelectedRedux.name);\n  //         setValue(\"email\", userEntitySelectedRedux.email);\n  //         setValue(\"password\", userEntitySelectedRedux.password);\n  //         setSelectedAccessProfileList(userEntitySelectedRedux.accessProfileList);\n  //         let comboBoxAccessProfileAux = [...comboBoxAccessProfiles];\n  //         userEntitySelectedRedux.accessProfileList.forEach(ap => {\n  //             comboBoxAccessProfileAux.filter(item => item.value === ap.value);\n  //         });\n  //         console.log(comboBoxAccessProfileAux);\n  //         setValue(\"accessProfile\", comboBoxAccessProfileAux);\n  //         setComboBoxAccessProfiles(comboBoxAccessProfileAux);\n  //     }\n  // }, [userEntitySelectedRedux]);\n\n  function _save() {\n    if (!selectedLocalData.id) {\n      UserEntityDataService._post(selectedLocalData).then(function (response) {\n        toast.current.show({\n          severity: \"success\",\n          summary: \"Sucesso\",\n          detail: \"Registro criado com sucesso!\",\n          life: 3000\n        });\n        setTimeout(function () {\n          console.log(\"EXECUTADO POST\");\n          router.push(\"/userEntity\");\n        }, 3000);\n      });\n    } else {\n      UserEntityDataService._put(selectedLocalData).then(function (response) {\n        toast.current.show({\n          severity: \"success\",\n          summary: \"Sucesso\",\n          detail: \"Registro alterado com sucesso!\",\n          life: 3000\n        });\n        setTimeout(function () {\n          console.log(\"EXECUTADO PUT\");\n          router.push(\"/userEntity\");\n        }, 3000);\n      });\n    }\n  }\n\n  var addAccessProfile = function addAccessProfile() {\n    var selectedAccessProfilesListAux = selectedAccessProfilesList;\n    var ap = comboBoxAccessProfiles.find(function (item) {\n      return item.value === getValues(\"accessProfile\");\n    });\n    selectedAccessProfilesListAux.push(ap);\n    var comboBoxAccessProfileAux = comboBoxAccessProfiles.filter(function (item) {\n      return item.value !== getValues(\"accessProfile\");\n    }); //atualiza combobox das funcionalidade deixando apenas a funcionalidades não adicionadas no combobox\n\n    setComboBoxAccessProfiles(comboBoxAccessProfileAux); //atualiza a funcionalidade selecionada após a atualização do array de funcioalidades\n\n    if (comboBoxAccessProfileAux && comboBoxAccessProfileAux.length > 0) {\n      setValue(\"accessProfile\", comboBoxAccessProfileAux[0].value);\n    } //atualiza a tabela com os dados da funcionalidade e as permissões da mesma\n\n\n    setSelectedAccessProfileList(selectedAccessProfilesListAux);\n  };\n\n  var removeAccessProfile = function removeAccessProfile(rowData) {\n    var selectedAccessProfilesListAux = selectedAccessProfilesList.filter(function (item) {\n      return item.value !== rowData.value;\n    });\n    setSelectedAccessProfileList(selectedAccessProfilesListAux);\n    var comboBoxAccessProfileAux = comboBoxAccessProfiles;\n    comboBoxAccessProfileAux.push(rowData);\n    setComboBoxAccessProfiles(comboBoxAccessProfileAux);\n    setValue(\"accessProfile\", comboBoxAccessProfileAux[0].value);\n  };\n\n  function idButtonRemoveListGenerate(rowData) {\n    return \"buttonRemoveFromList\" + rowData.value;\n  }\n\n  var actionBodyTemplate = function actionBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        id: idButtonRemoveListGenerate(rowData),\n        icon: \"pi pi-trash\",\n        className: \"p-button-rounded p-button-warning\",\n        onClick: function onClick() {\n          return removeAccessProfile(rowData);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        ref: toast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n        style: {\n          marginTop: \"15px\"\n        },\n        legend: \"Cadastro de Usu\\xE1rios\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Nome: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            defaultValue: \"\",\n            render: function render(_ref) {\n              var _ref$field = _ref.field,\n                  _onChange = _ref$field.onChange,\n                  value = _ref$field.value;\n              return /*#__PURE__*/_jsxDEV(InputText, {\n                id: \"name\",\n                name: \"name\",\n                placeholder: \"Nome\",\n                onChange: function onChange(value) {\n                  return _onChange(value);\n                },\n                value: value,\n                className: \"inputfield w-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"E-mail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"email\",\n            control: control,\n            defaultValue: \"\",\n            render: function render(_ref2) {\n              var field = _ref2.field;\n              return /*#__PURE__*/_jsxDEV(InputText, _objectSpread(_objectSpread({}, field), {}, {\n                id: \"email\",\n                name: \"email\",\n                placeholder: \"E-mail\",\n                className: \"inputfield w-full\"\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"password\",\n            control: control,\n            defaultValue: \"\",\n            render: function render(_ref3) {\n              var field = _ref3.field;\n              return /*#__PURE__*/_jsxDEV(Password, _objectSpread(_objectSpread({}, field), {}, {\n                id: \"password\",\n                name: \"password\",\n                placeholder: \"Senha\",\n                toggleMask: true,\n                autoComplete: \"new-password\",\n                weakLabel: \"Fraca\",\n                mediumLabel: \"M\\xE9dia\",\n                strongLabel: \"Forte\",\n                promptLabel: \"Por favor entre com a senha\",\n                className: \"inputfield w-full\"\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formgrid grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"accessProfiles\",\n              children: \"Perfis de Acesso:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"accessProfile\",\n              control: control,\n              defaultValue: undefined,\n              render: function render(_ref4) {\n                var field = _ref4.field;\n                return /*#__PURE__*/_jsxDEV(Dropdown, _objectSpread(_objectSpread({}, field), {}, {\n                  id: \"accessProfile\",\n                  name: \"accessProfile\",\n                  options: comboBoxAccessProfiles,\n                  className: \"inputfield w-full\",\n                  emptyMessage: \"Nenhum Perfil Dispon\\xEDvel\"\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 37\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field col-12 md:col-6\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              id: \"buttonAddList\",\n              label: \"Adicionar\",\n              onClick: addAccessProfile,\n              disabled: comboBoxAccessProfiles.length < 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            scrollHeight: \"300px\",\n            scrollable: true,\n            value: selectedAccessProfilesList,\n            responsiveLayout: \"scroll\",\n            children: [/*#__PURE__*/_jsxDEV(Column, {\n              header: \"Selecionado\",\n              selectionMode: \"single\",\n              headerStyle: {\n                width: \"3em\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"label\",\n              header: \"Perfil de Acesso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              body: actionBodyTemplate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/userEntity\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            id: \"buttonBack\",\n            style: {\n              marginRight: \"15px\"\n            },\n            label: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          id: \"buttonSave\",\n          label: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(UserEntityForm, \"pqDLE0pUYiEw42E1/9S0dSfAhRM=\", false, function () {\n  return [useSelector, useRouter, useDispatch, useForm];\n});\n\n_c = UserEntityForm;\nexport default _c2 = withAuth(UserEntityForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserEntityForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/userEntity/form.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","useForm","Controller","Link","useRouter","Fieldset","InputText","Checkbox","Button","Toast","Password","Dropdown","DataTable","Column","withAuth","UserEntityDataService","AccessProfileDataService","UserEntityForm","props","userEntitySelectedRedux","state","userEntitySelectedReducer","userEntitySelected","selectedLocalData","setSelectedLocalData","comboBoxAccessProfiles","setComboBoxAccessProfiles","selectedAccessProfilesList","setSelectedAccessProfileList","toast","router","dispatch","mode","control","register","handleSubmit","setValue","errors","getValues","onSubmit","data","bcrypt","require","salt","genSaltSync","hash","hashSync","password","console","log","_comboBoxAccessProfiles","then","response","name","email","accessProfileList","comboBoxAccessProfileAux","forEach","ap","object","find","apAux","value","push","length","_save","id","_post","current","show","severity","summary","detail","life","setTimeout","_put","addAccessProfile","selectedAccessProfilesListAux","item","filter","removeAccessProfile","rowData","idButtonRemoveListGenerate","actionBodyTemplate","marginTop","field","onChange","undefined","width","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Link from \"next/link\"\r\nimport { useRouter } from \"next/router\"\r\n\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Checkbox } from \"primereact/checkbox\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { Password } from 'primereact/password';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\n\r\n\r\nimport withAuth from \"../../components/withAuth\";\r\n\r\nimport \"primeflex/primeflex.css\";\r\n\r\nimport { UserEntityDataService } from \"../../services/UserEntityDataService\";\r\nimport { AccessProfileDataService } from \"../../services/AccessProfileDataService\";\r\n\r\n\r\n\r\n\r\nfunction UserEntityForm(props) {\r\n\r\n    const userEntitySelectedRedux = useSelector((state) => state.userEntitySelectedReducer.userEntitySelected);\r\n\r\n    const [selectedLocalData, setSelectedLocalData] = useState(null);\r\n\r\n    const [comboBoxAccessProfiles, setComboBoxAccessProfiles] = useState([]);\r\n    const [selectedAccessProfilesList, setSelectedAccessProfileList] = useState([]);\r\n\r\n\r\n    const toast = useRef(null);\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n\r\n    const { control, register, handleSubmit, setValue, errors, getValues } = useForm({ mode: 'onChange' });\r\n\r\n    const onSubmit = data => {\r\n        const bcrypt = require('bcryptjs');\r\n        const salt = bcrypt.genSaltSync(10);\r\n        const hash = bcrypt.hashSync(data.password, salt);\r\n        console.log(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        AccessProfileDataService._comboBoxAccessProfiles().then(response => {\r\n            if (userEntitySelectedRedux) {\r\n                setValue(\"name\", userEntitySelectedRedux.name);\r\n                setValue(\"email\", userEntitySelectedRedux.email);\r\n                setValue(\"password\", userEntitySelectedRedux.password);\r\n                setSelectedAccessProfileList(userEntitySelectedRedux.accessProfileList);\r\n                let comboBoxAccessProfileAux = [];\r\n                response.data.forEach(ap => {\r\n                    const object = userEntitySelectedRedux.accessProfileList.find(apAux => apAux.value === ap.value);\r\n                    if (!object) {\r\n                        comboBoxAccessProfileAux.push(ap);\r\n                    }\r\n                });\r\n                setComboBoxAccessProfiles(comboBoxAccessProfileAux);\r\n                if(comboBoxAccessProfileAux.length > 0){\r\n                    setValue(\"accessProfile\", comboBoxAccessProfileAux[0].value);\r\n                }\r\n            } else {\r\n                setComboBoxAccessProfiles(response.data);\r\n                if(response.data.length > 0){\r\n                    setValue(\"accessProfile\", response.data[0].value);\r\n                }\r\n                \r\n            }\r\n        })\r\n    }, [userEntitySelectedRedux]);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if (userEntitySelectedRedux) {\r\n    //         setValue(\"name\", userEntitySelectedRedux.name);\r\n    //         setValue(\"email\", userEntitySelectedRedux.email);\r\n    //         setValue(\"password\", userEntitySelectedRedux.password);\r\n    //         setSelectedAccessProfileList(userEntitySelectedRedux.accessProfileList);\r\n    //         let comboBoxAccessProfileAux = [...comboBoxAccessProfiles];\r\n    //         userEntitySelectedRedux.accessProfileList.forEach(ap => {\r\n    //             comboBoxAccessProfileAux.filter(item => item.value === ap.value);\r\n    //         });\r\n    //         console.log(comboBoxAccessProfileAux);\r\n    //         setValue(\"accessProfile\", comboBoxAccessProfileAux);\r\n    //         setComboBoxAccessProfiles(comboBoxAccessProfileAux);\r\n    //     }\r\n    // }, [userEntitySelectedRedux]);\r\n\r\n    function _save() {\r\n\r\n        if (!selectedLocalData.id) {\r\n            UserEntityDataService._post(selectedLocalData).then(response => {\r\n                toast.current.show({ severity: \"success\", summary: \"Sucesso\", detail: \"Registro criado com sucesso!\", life: 3000 });\r\n                setTimeout(() => {\r\n                    console.log(\"EXECUTADO POST\");\r\n                    router.push(\"/userEntity\");\r\n                }, 3000);\r\n            })\r\n        } else {\r\n            UserEntityDataService._put(selectedLocalData).then(response => {\r\n                toast.current.show({ severity: \"success\", summary: \"Sucesso\", detail: \"Registro alterado com sucesso!\", life: 3000 });\r\n                setTimeout(() => {\r\n                    console.log(\"EXECUTADO PUT\");\r\n                    router.push(\"/userEntity\");\r\n                }, 3000);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    const addAccessProfile = () => {\r\n        let selectedAccessProfilesListAux = selectedAccessProfilesList;\r\n        const ap = comboBoxAccessProfiles.find(item => item.value === getValues(\"accessProfile\"));\r\n        selectedAccessProfilesListAux.push(ap);\r\n        let comboBoxAccessProfileAux = comboBoxAccessProfiles.filter(item => item.value !== getValues(\"accessProfile\"));\r\n\r\n        //atualiza combobox das funcionalidade deixando apenas a funcionalidades não adicionadas no combobox\r\n        setComboBoxAccessProfiles(comboBoxAccessProfileAux);\r\n        //atualiza a funcionalidade selecionada após a atualização do array de funcioalidades\r\n        if (comboBoxAccessProfileAux && comboBoxAccessProfileAux.length > 0) {\r\n            setValue(\"accessProfile\", comboBoxAccessProfileAux[0].value);\r\n        }\r\n        //atualiza a tabela com os dados da funcionalidade e as permissões da mesma\r\n        setSelectedAccessProfileList(selectedAccessProfilesListAux);\r\n    }\r\n\r\n    const removeAccessProfile = (rowData) => {\r\n        let selectedAccessProfilesListAux = selectedAccessProfilesList.filter(function (item) { return item.value !== rowData.value });\r\n        setSelectedAccessProfileList(selectedAccessProfilesListAux);\r\n\r\n        let comboBoxAccessProfileAux = comboBoxAccessProfiles;\r\n        comboBoxAccessProfileAux.push(rowData);\r\n        setComboBoxAccessProfiles(comboBoxAccessProfileAux);\r\n        setValue(\"accessProfile\", comboBoxAccessProfileAux[0].value);\r\n    }\r\n\r\n    function idButtonRemoveListGenerate(rowData) {\r\n        return \"buttonRemoveFromList\" + rowData.value;\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <Button type=\"button\" id={idButtonRemoveListGenerate(rowData)} icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => removeAccessProfile(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n                <Toast ref={toast} />\r\n                <Fieldset style={{ marginTop: \"15px\" }} legend=\"Cadastro de Usuários\">\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome: </label>\r\n                        <Controller\r\n                            name=\"name\"\r\n                            control={control}\r\n                            defaultValue={\"\"}\r\n                            render={({ field: { onChange, value } }) =>\r\n                                <InputText\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Nome\"\r\n                                    onChange={value => onChange(value)}\r\n                                    value={value}\r\n                                    className=\"inputfield w-full\"\r\n                                />}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"email\">E-mail:</label>\r\n                        <Controller\r\n                            name=\"email\"\r\n                            control={control}\r\n                            defaultValue={\"\"}\r\n                            render={({ field }) =>\r\n                                <InputText\r\n                                    {...field}\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"E-mail\"\r\n                                    className=\"inputfield w-full\"\r\n                                />}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <Controller\r\n                            name=\"password\"\r\n                            control={control}\r\n                            defaultValue={\"\"}\r\n                            render={({ field }) =>\r\n                                <Password\r\n                                    {...field}\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Senha\"\r\n                                    toggleMask\r\n                                    autoComplete=\"new-password\"\r\n                                    weakLabel=\"Fraca\"\r\n                                    mediumLabel=\"Média\"\r\n                                    strongLabel=\"Forte\"\r\n                                    promptLabel=\"Por favor entre com a senha\"\r\n                                    className=\"inputfield w-full\"\r\n                                />}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"formgrid grid\">\r\n                        <div className=\"field col-12\">\r\n                            <label htmlFor=\"accessProfiles\">Perfis de Acesso:</label>\r\n                            <Controller\r\n                                name=\"accessProfile\"\r\n                                control={control}\r\n                                defaultValue={undefined}\r\n                                render={({ field }) =>\r\n                                    <Dropdown\r\n                                        {...field}\r\n                                        id=\"accessProfile\"\r\n                                        name=\"accessProfile\"\r\n                                        options={comboBoxAccessProfiles}\r\n                                        className=\"inputfield w-full\"\r\n                                        emptyMessage=\"Nenhum Perfil Disponível\"\r\n                                    />}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-12 md:col-6\">\r\n                            <Button type=\"button\" id=\"buttonAddList\" label=\"Adicionar\" onClick={addAccessProfile} disabled={comboBoxAccessProfiles.length < 1} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <DataTable\r\n                            scrollHeight=\"300px\"\r\n                            scrollable\r\n                            value={selectedAccessProfilesList}\r\n                            responsiveLayout=\"scroll\">\r\n                            <Column header=\"Selecionado\" selectionMode=\"single\" headerStyle={{ width: \"3em\" }}></Column>\r\n                            <Column field=\"label\" header=\"Perfil de Acesso\"></Column>\r\n                            <Column body={actionBodyTemplate}></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <Link href=\"/userEntity\">\r\n                        <Button type=\"button\" id=\"buttonBack\" style={{ marginRight: \"15px\" }} label=\"Voltar\" />\r\n                    </Link>\r\n\r\n                    <Button type=\"submit\" id=\"buttonSave\" label=\"Salvar\" />\r\n\r\n                </Fieldset>\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default withAuth(UserEntityForm);"]},"metadata":{},"sourceType":"module"}