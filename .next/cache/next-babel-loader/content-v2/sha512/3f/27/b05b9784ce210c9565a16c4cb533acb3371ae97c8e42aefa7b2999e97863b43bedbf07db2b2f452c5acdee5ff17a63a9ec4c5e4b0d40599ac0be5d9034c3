{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\anime\\\\form.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { Fieldset } from 'primereact/fieldset';\nimport { InputText } from 'primereact/inputtext';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport withAuth from '../../components/withAuth';\nimport 'primeflex/primeflex.css';\nimport { AnimeDataService } from '../../services/AnimeDataService';\n\nfunction AnimeForm(props) {\n  const {\n    0: animeSelected,\n    1: setAnimeSelected\n  } = useState(useSelector(state => state.loadSelectedDataReducer.animeSelected));\n  const {\n    0: nome,\n    1: setNome\n  } = useState(animeSelected ? animeSelected.nome : null);\n  const {\n    0: possuiManga,\n    1: setPossuiManga\n  } = useState(animeSelected ? animeSelected.possuiManga : false);\n  const {\n    0: temporada,\n    1: setTemporada\n  } = useState(animeSelected ? animeSelected.temporada : null);\n  const toast = useRef(null);\n  const router = useRouter();\n\n  function showMessage() {\n    router.push('/anime');\n  }\n\n  function _save() {\n    const anime = {\n      idAnime: animeSelected.idAnime,\n      nome: nome,\n      possuiManga: possuiManga,\n      temporada: Number(temporada)\n    };\n    console.log(anime); // if(!anime.idAnime){\n    //     AnimeDataService._post(anime).then(response => {\n    //         toast.current.show({severity:'success', summary: 'Sucesso', detail:'Registro criado com sucesso!', life: 3000}); \n    //         setTimeout(() => {\n    //             console.log('EXECUTADO POST');\n    //             router.push('/anime');\n    //     }, 3000);\n    //     })\n    // } else {\n    //     AnimeDataService._put(anime).then(response => {\n    //         toast.current.show({severity:'success', summary: 'Sucesso', detail:'Registro alterado com sucesso!', life: 3000});\n    //         setTimeout(() => {\n    //             console.log('EXECUTADO PUT');\n    //             router.push('/anime');\n    //         }, 3000);\n    //     })\n    // }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n      legend: \"Anime Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nome\",\n            className: \"p-col-12 p-md-2\",\n            children: \"Nome: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-10\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"nome\",\n              type: \"text\",\n              value: nome,\n              onChange: e => setNome(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"temporada\",\n            className: \"p-col-12 p-md-2\",\n            children: \"Temporada:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-10\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"temporada\",\n              type: \"text\",\n              value: temporada,\n              onChange: e => setTemporada(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field-checkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              inputId: \"possuiManga\",\n              onChange: e => setPossuiManga(e.checked),\n              checked: possuiManga\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"possuiManga\",\n              children: \"Possui mang\\xE1 ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"back-button\",\n          style: {\n            marginRight: '15px'\n          },\n          label: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Salvar\",\n        onClick: () => _save()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default withAuth(AnimeForm);","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/anime/form.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Link","useRouter","Fieldset","InputText","Checkbox","Button","Toast","withAuth","AnimeDataService","AnimeForm","props","animeSelected","setAnimeSelected","state","loadSelectedDataReducer","nome","setNome","possuiManga","setPossuiManga","temporada","setTemporada","toast","router","showMessage","push","_save","anime","idAnime","Number","console","log","e","target","value","checked","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef  } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\n\r\nimport { Fieldset } from 'primereact/fieldset';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\n\r\n\r\nimport withAuth from '../../components/withAuth';\r\n\r\nimport 'primeflex/primeflex.css';\r\n\r\nimport { AnimeDataService } from '../../services/AnimeDataService';\r\n\r\n\r\n\r\nfunction AnimeForm(props) {\r\n\r\n    const [animeSelected, setAnimeSelected] = useState(useSelector((state) => state.loadSelectedDataReducer.animeSelected));\r\n\r\n    const [nome, setNome] = useState(animeSelected ? animeSelected.nome: null);\r\n\r\n    const [possuiManga, setPossuiManga] = useState(animeSelected ? animeSelected.possuiManga : false);\r\n\r\n    const [temporada, setTemporada] = useState(animeSelected ? animeSelected.temporada : null);\r\n\r\n    const toast = useRef(null);\r\n\r\n    const router = useRouter();\r\n\r\n    function showMessage() {\r\n        router.push('/anime')\r\n    }\r\n\r\n\r\n    function _save() {\r\n        const anime = {idAnime: animeSelected.idAnime, nome: nome, possuiManga: possuiManga, temporada: Number(temporada)};\r\n        console.log(anime);\r\n        // if(!anime.idAnime){\r\n        //     AnimeDataService._post(anime).then(response => {\r\n        //         toast.current.show({severity:'success', summary: 'Sucesso', detail:'Registro criado com sucesso!', life: 3000}); \r\n        //         setTimeout(() => {\r\n        //             console.log('EXECUTADO POST');\r\n        //             router.push('/anime');\r\n        //     }, 3000);\r\n        //     })\r\n        // } else {\r\n        //     AnimeDataService._put(anime).then(response => {\r\n        //         toast.current.show({severity:'success', summary: 'Sucesso', detail:'Registro alterado com sucesso!', life: 3000});\r\n        //         setTimeout(() => {\r\n        //             console.log('EXECUTADO PUT');\r\n        //             router.push('/anime');\r\n        //         }, 3000);\r\n                \r\n        //     })\r\n        // }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Toast ref={toast} />\r\n            <Fieldset legend=\"Anime Form\">\r\n                \r\n                <div className=\"p-fluid\">\r\n                    <div className=\"p-field p-grid\">\r\n                        <label htmlFor=\"nome\" className=\"p-col-12 p-md-2\">Nome: </label>\r\n                        <div className=\"p-col-12 p-md-10\">\r\n                            <InputText id=\"nome\" type=\"text\" value={nome} onChange={(e) => setNome(e.target.value)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-field p-grid\">\r\n                        <label htmlFor=\"temporada\" className=\"p-col-12 p-md-2\">Temporada:</label>\r\n                        <div className=\"p-col-12 p-md-10\">\r\n                            <InputText id=\"temporada\" type=\"text\" value={temporada} onChange={(e) => setTemporada(e.target.value)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-field-checkbox\">\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"possuiManga\" onChange={e => setPossuiManga(e.checked)} checked={possuiManga} />\r\n                            <label htmlFor=\"possuiManga\">Possui mangá ?</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n               \r\n                <Link href=\"/anime\">\r\n                    <Button id='back-button' style={{marginRight: '15px'}} label=\"Voltar\" />\r\n                </Link>\r\n\r\n                <Button label=\"Salvar\" onClick={() => _save()}/>\r\n                \r\n            </Fieldset>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default withAuth(AnimeForm);"]},"metadata":{},"sourceType":"module"}