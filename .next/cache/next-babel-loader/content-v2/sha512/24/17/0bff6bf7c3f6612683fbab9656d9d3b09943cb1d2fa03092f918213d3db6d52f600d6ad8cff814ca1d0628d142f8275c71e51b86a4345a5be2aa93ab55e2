{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Login from '../pages/login';\nimport Anime from '../pages/anime';\nimport { LoginDataService } from '../services/LoginDataService';\nimport { path } from 'd3';\nexport default function Index(props) {\n  _s();\n\n  var baseUrl = \"http://localhost:3000\";\n  var router = useRouter();\n  useEffect(function () {\n    var pathname = router.pathname;\n    console.log(pathname);\n\n    if (!LoginDataService.isLogged() && pathname !== '/' || !LoginDataService.isLogged() && path !== '/login') {}\n\n    console.log(LoginDataService.isLogged());\n\n    if (!LoginDataService.isLogged()) {\n      console.log('não logado');\n      router.push(baseUrl + '/login');\n    } else {\n      console.log('logado');\n      router.push(baseUrl + '/anime');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Index, \"vQduR7x+OPXj6PSmJyFnf+hU7bg=\", false, function () {\n  return [useRouter];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/index.js"],"names":["React","useState","useRef","useEffect","useRouter","Login","Anime","LoginDataService","path","Index","props","baseUrl","router","pathname","console","log","isLogged","push"],"mappings":";;;;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,IAAT,QAAqB,IAArB;AAEA,eAAe,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,MAAMC,OAAO,0BAAb;AACA,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AAAA,QACLU,QADK,GACOD,MADP,CACLC,QADK;AAEZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAG,CAACN,gBAAgB,CAACS,QAAjB,EAAD,IAAgCH,QAAQ,KAAK,GAA7C,IACH,CAACN,gBAAgB,CAACS,QAAjB,EAAD,IAAgCR,IAAI,KAAK,QADzC,EACkD,CAEjD;;AACDM,IAAAA,OAAO,CAACC,GAAR,CAAYR,gBAAgB,CAACS,QAAjB,EAAZ;;AACA,QAAG,CAACT,gBAAgB,CAACS,QAAjB,EAAJ,EAAiC;AAC7BF,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAH,MAAAA,MAAM,CAACK,IAAP,CAAYN,OAAO,GAAC,QAApB;AACH,KAHD,MAGO;AACHG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAH,MAAAA,MAAM,CAACK,IAAP,CAAYN,OAAO,GAAC,QAApB;AACH;AACJ,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACI,qCADJ;AAIH;;GA1BuBF,K;UAGLL,S;;;KAHKK,K","sourcesContent":["\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { useRouter } from 'next/router'\r\n\r\nimport Login from '../pages/login'\r\nimport Anime from '../pages/anime'\r\n\r\nimport { LoginDataService } from '../services/LoginDataService';\r\nimport { path } from 'd3';\r\n\r\nexport default function Index (props) {\r\n\r\n    const baseUrl = `http://localhost:3000`;\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        const {pathname} = router;\r\n        console.log(pathname);\r\n        if(!LoginDataService.isLogged() && pathname !== '/' || \r\n        !LoginDataService.isLogged() && path !== '/login'){\r\n\r\n        }\r\n        console.log(LoginDataService.isLogged());\r\n        if(!LoginDataService.isLogged()) {\r\n            console.log('não logado');\r\n            router.push(baseUrl+'/login')\r\n        } else {\r\n            console.log('logado');\r\n            router.push(baseUrl+'/anime')\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}