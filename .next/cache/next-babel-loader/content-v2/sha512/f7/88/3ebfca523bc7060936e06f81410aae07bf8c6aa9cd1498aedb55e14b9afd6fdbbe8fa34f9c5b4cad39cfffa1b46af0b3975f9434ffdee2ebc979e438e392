{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\anime\\\\index.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Link from 'next/link';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Fieldset } from 'primereact/fieldset';\nimport { AnimeDataService } from '../../services/AnimeDataService';\nimport withAuth from '../../components/withAuth';\nimport { loadSelectedDataAction } from '../../store/actions/anime';\n\nfunction Anime(props) {\n  const {\n    0: listaAnimes,\n    1: setListaAnimes\n  } = useState([]);\n  const {\n    0: animeSelecionado,\n    1: setAnimeSelecionado\n  } = useState({});\n  const toast = useRef(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    return () => {\n      console.log('Foi desmontado');\n      setListaAnimes(null);\n      setAnimeSelecionado(null);\n    };\n  }, []);\n  useEffect(() => {\n    listarAnimes();\n  }, [listaAnimes]);\n\n  function listarAnimes() {\n    AnimeDataService.listarAnimes().then(response => {\n      console.log(response.data);\n\n      try {\n        setListaAnimes(response.data.animes);\n      } catch (error) {\n        console.log(response.data);\n      }\n    });\n  } // function listarAnimesPorId(idAnime){\n  //     AnimeDataService.listarAnimesPorId(idAnime).then(response => {\n  //         setAnimeSelecionado(response.data);\n  //     })\n  // }\n\n\n  const novo = () => {\n    setAnimeSelecionado(null);\n    dispatch(loadSelectedDataAction(null));\n  };\n\n  const editar = rowData => {\n    console.log(rowData);\n    setAnimeSelecionado(rowData);\n    dispatch(loadSelectedDataAction(rowData));\n  };\n\n  const _delete = rowData => {\n    AnimeDataService._delete(rowData.idAnime).then(response => {\n      toast.current.show({\n        severity: 'success',\n        summary: 'Sucesso',\n        detail: 'Anime ' + rowData.nome + ' excluído com sucesso!',\n        life: 3000\n      });\n    });\n  };\n\n  const actionBodyTemplate = rowData => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime/form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: '10px'\n          },\n          icon: \"pi pi-pencil\",\n          className: \"p-button-rounded p-button-success p-mr-2\",\n          onClick: () => editar(rowData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"pi pi-trash\",\n        className: \"p-button-rounded p-button-warning\",\n        onClick: () => _delete(rowData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n\n  const possuiManga = atributte => {\n    if (atributte) {\n      return 'Possui Mangá';\n    }\n\n    return 'Não Possui Mangá';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n      legend: \"Anime\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime/form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"new-button\",\n          label: \"Novo\",\n          onClick: () => novo({})\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        header: \"Animes Cadastrados\",\n        value: listaAnimes,\n        selectionMode: \"single\",\n        selection: animeSelecionado,\n        onSelectionChange: e => {\n          setAnimeSelecionado(e.value);\n        },\n        dataKey: \"idAnime\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"nome\",\n          header: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"temporada\",\n          header: \"Temporada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: e => possuiManga(e.possuiManga),\n          header: \"Possui mang\\xE1 ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          body: actionBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"back-button\",\n          label: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default withAuth(Anime);","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/anime/index.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Link","Toast","Button","DataTable","Column","Fieldset","AnimeDataService","withAuth","loadSelectedDataAction","Anime","props","listaAnimes","setListaAnimes","animeSelecionado","setAnimeSelecionado","toast","dispatch","console","log","listarAnimes","then","response","data","animes","error","novo","editar","rowData","_delete","idAnime","current","show","severity","summary","detail","nome","life","actionBodyTemplate","marginRight","possuiManga","atributte","e","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Link from 'next/link'\r\n\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Fieldset } from 'primereact/fieldset';\r\n\r\nimport { AnimeDataService } from '../../services/AnimeDataService';\r\nimport withAuth from '../../components/withAuth';\r\nimport { loadSelectedDataAction } from '../../store/actions/anime';\r\n\r\n\r\nfunction Anime(props) {\r\n\r\n    const [listaAnimes, setListaAnimes] = useState([]);\r\n    const [animeSelecionado, setAnimeSelecionado] = useState({});\r\n\r\n    const toast = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      return () => {\r\n        console.log('Foi desmontado');\r\n        setListaAnimes(null);\r\n        setAnimeSelecionado(null);\r\n      };\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n        listarAnimes();\r\n    }, [listaAnimes])\r\n\r\n    function listarAnimes(){\r\n        AnimeDataService.listarAnimes().then(response => {\r\n            console.log(response.data);\r\n            try {\r\n                setListaAnimes(response.data.animes);\r\n            } catch (error) {\r\n                console.log(response.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    // function listarAnimesPorId(idAnime){\r\n    //     AnimeDataService.listarAnimesPorId(idAnime).then(response => {\r\n    //         setAnimeSelecionado(response.data);\r\n    //     })\r\n    // }\r\n\r\n    const novo = () => {\r\n        setAnimeSelecionado(null);\r\n        dispatch(loadSelectedDataAction(null));\r\n    }\r\n\r\n    const editar = (rowData) => {\r\n        console.log(rowData);\r\n        setAnimeSelecionado(rowData);\r\n        dispatch(loadSelectedDataAction(rowData));\r\n    }\r\n\r\n    const _delete = (rowData) => {\r\n        AnimeDataService._delete(rowData.idAnime).then(response => {\r\n        toast.current.show({severity:'success', summary: 'Sucesso', detail:'Anime ' + rowData.nome + ' excluído com sucesso!', life: 3000});\r\n        })\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n            <Link href=\"/anime/form\">\r\n                <Button style={{marginRight: '10px'}} icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => editar(rowData)} />\r\n            </Link>\r\n\r\n            <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => _delete(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    const possuiManga = (atributte) => {\r\n        if(atributte){\r\n            return 'Possui Mangá';\r\n        } return 'Não Possui Mangá';\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Toast ref={toast} />\r\n            <Fieldset legend=\"Anime\">\r\n              \r\n                <Link href=\"/anime/form\">\r\n                    <Button id='new-button' label=\"Novo\" onClick={() => novo({})} />\r\n                </Link>\r\n\r\n                <DataTable \r\n                    header=\"Animes Cadastrados\" \r\n                    value={listaAnimes}\r\n                    selectionMode=\"single\"\r\n                    selection={animeSelecionado}\r\n                    onSelectionChange={e => {setAnimeSelecionado(e.value)}}\r\n                    dataKey=\"idAnime\">\r\n                    <Column field=\"nome\" header=\"Nome\"></Column>\r\n                    <Column field=\"temporada\" header=\"Temporada\"></Column>\r\n                    <Column field={e => possuiManga(e.possuiManga)} header=\"Possui mangá ?\"></Column>\r\n                    <Column body={actionBodyTemplate}></Column>\r\n                </DataTable>\r\n             \r\n                <Link href=\"/\">\r\n                    <Button id='back-button' label=\"Voltar\" />\r\n                </Link>\r\n           \r\n            </Fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withAuth(Anime);"]},"metadata":{},"sourceType":"module"}