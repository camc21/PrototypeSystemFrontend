{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { LOAD_ANIME_LIST } from \"../../actions\";\nconst initialState = {\n  content: undefined,\n  empty: undefined,\n  first: undefined,\n  last: undefined,\n  number: undefined,\n  numberOfElements: undefined,\n  size: undefined,\n  totalElements: undefined,\n  totalPages: undefined\n};\n\nconst listAnimeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_ANIME_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        paginatorAnime: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default listAnimeReducer;","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/store/reducers/anime/listAnimeReducer.jsx"],"names":["LOAD_ANIME_LIST","initialState","content","undefined","empty","first","last","number","numberOfElements","size","totalElements","totalPages","listAnimeReducer","state","action","type","paginatorAnime","payload"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,eAAhC;AAGA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAEC,SAAX;AAAsBC,EAAAA,KAAK,EAAED,SAA7B;AAAwCE,EAAAA,KAAK,EAAEF,SAA/C;AAA0DG,EAAAA,IAAI,EAAEH,SAAhE;AAA2EI,EAAAA,MAAM,EAAEJ,SAAnF;AAA8FK,EAAAA,gBAAgB,EAAEL,SAAhH;AAA2HM,EAAAA,IAAI,EAAEN,SAAjI;AAA4IO,EAAAA,aAAa,EAAEP,SAA3J;AAAsKQ,EAAAA,UAAU,EAAER;AAAlL,CAArB;;AAGA,MAAMS,gBAAgB,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAEzD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKf,eAAL;AACI,6CACKa,KADL;AAEEG,QAAAA,cAAc,EAAEF,MAAM,CAACG;AAFzB;;AAKJ;AACE,aAAOJ,KAAP;AATJ;AAWD,CAbD;;AAeA,eAAeD,gBAAf","sourcesContent":["import { LOAD_ANIME_LIST } from \"../../actions\";\r\n\r\n\r\nconst initialState = { content: undefined, empty: undefined, first: undefined, last: undefined, number: undefined, numberOfElements: undefined, size: undefined, totalElements: undefined, totalPages: undefined }\r\n\r\n\r\nconst listAnimeReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case LOAD_ANIME_LIST:\r\n        return {\r\n          ...state,\r\n          paginatorAnime: action.payload\r\n        }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listAnimeReducer;"]},"metadata":{},"sourceType":"module"}