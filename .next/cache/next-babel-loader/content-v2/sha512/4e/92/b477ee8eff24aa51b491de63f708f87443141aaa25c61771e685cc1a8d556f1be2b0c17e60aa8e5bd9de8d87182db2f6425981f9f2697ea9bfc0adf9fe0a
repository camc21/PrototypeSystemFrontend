{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\login\\\\index.jsx\";\n//imports api\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useForm, Controller } from \"react-hook-form\"; //imports styles\n\nimport styles from '../../styles/login.module.css'; //imports bibliotecas\n\nimport { InputText } from 'primereact/inputtext';\nimport { Password } from 'primereact/password';\nimport { Button } from 'primereact/button';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Alert } from 'reactstrap';\nimport { Toast } from \"primereact/toast\"; //imports services\n\nimport { LoginDataService } from '../../services/LoginDataService'; //actions\n\nimport { showButtonLoginAction } from '../../store/actions/login_logout';\nimport { localStorageManager } from '@chakra-ui/color-mode';\n\nfunction Login(props) {\n  const dispatch = useDispatch();\n  const toast = useRef(null);\n  const router = useRouter();\n  const {\n    0: login,\n    1: setLogin\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: loadingCredentials,\n    1: setLoadingCredentials\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  useEffect(() => {\n    if (router.asPath === '/login' && localStorage.getItem('accessToken') !== null) {\n      router.push('/');\n    }\n  }, []);\n\n  function handleInputEmailChange(e) {\n    setValue('email', e.target.value);\n  }\n\n  function handleInputPasswordChange(e) {\n    setValue('password', e.target.value);\n  }\n\n  const {\n    control,\n    register,\n    handleSubmit,\n    setValue,\n    errors,\n    getValues\n  } = useForm({\n    mode: 'onChange'\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n    setLoadingCredentials(true);\n\n    if (data.email !== \"\" && data.password !== \"\") {\n      LoginDataService.logIn(data.email, data.password).then(response => {\n        if (response.data.code > 300) {\n          toast.current.show({\n            severity: \"warn\",\n            summary: \"Aviso\",\n            detail: response.data.message,\n            life: 3000\n          });\n          setVisible(true);\n          setLoadingCredentials(false);\n        } else {\n          setVisible(false);\n          localStorage.setItem('accessToken', 'Bearer ' + response.data.token);\n          setLoadingCredentials(false);\n          dispatch(showButtonLoginAction(false));\n          router.push('/');\n        }\n      });\n    } else {\n      toast.current.show({\n        severity: \"warn\",\n        summary: \"Aviso\",\n        detail: \"Preencha os campos, E-mail e Senha\",\n        life: 3000\n      });\n      setLoadingCredentials(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.layout_login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        ref: toast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.layout_login_no_messages,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.box_login,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"email\",\n            defaultValue: undefined,\n            rules: {\n              required: true,\n              maxLength: 50\n            },\n            render: ({\n              onBlur,\n              onChange,\n              value\n            }) => /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"email\",\n              name: \"email\",\n              onChange: e => handleInputEmailChange(e),\n              value: value,\n              placeholder: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"password\",\n            defaultValue: undefined,\n            rules: {\n              required: true,\n              maxLength: 50\n            },\n            render: ({\n              onBlur,\n              onChange,\n              value\n            }) => /*#__PURE__*/_jsxDEV(Password // style={{ width: '100%', borderColor: errors.nome ? 'red' : '' }}\n            , {\n              id: \"password\",\n              name: \"password\",\n              onChange: e => handleInputPasswordChange(e),\n              value: value,\n              placeholder: \"Senha\",\n              toggleMask: true,\n              weakLabel: \"Fraca\",\n              mediumLabel: \"M\\xE9dia\",\n              strongLabel: \"Forte\",\n              promptLabel: \"Por favor entre com a senha\",\n              autoComplete: \"new-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            label: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), loadingCredentials && /*#__PURE__*/_jsxDEV(ProgressSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Login;","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/login/index.jsx"],"names":["React","useState","useEffect","useRef","useRouter","useSelector","useDispatch","useForm","Controller","styles","InputText","Password","Button","ProgressSpinner","Alert","Toast","LoginDataService","showButtonLoginAction","localStorageManager","Login","props","dispatch","toast","router","login","setLogin","password","setPassword","loadingCredentials","setLoadingCredentials","visible","setVisible","asPath","localStorage","getItem","push","handleInputEmailChange","e","setValue","target","value","handleInputPasswordChange","control","register","handleSubmit","errors","getValues","mode","onSubmit","data","console","log","email","logIn","then","response","code","current","show","severity","summary","detail","message","life","setItem","token","layout_login","layout_login_no_messages","box_login","undefined","required","maxLength","onBlur","onChange"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,+BAAnB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,iCAAjC,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,kCAAtC;AACA,SAASC,mBAAT,QAAoC,uBAApC;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAElB,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,KAAK,GAAGnB,MAAM,CAAC,IAAD,CAApB;AACA,QAAMoB,MAAM,GAAGnB,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACoB,KAAD;AAAA,OAAQC;AAAR,MAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACyB,QAAD;AAAA,OAAWC;AAAX,MAA0B1B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAAC2B,kBAAD;AAAA,OAAqBC;AAArB,MAA8C5B,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM;AAAA,OAAC6B,OAAD;AAAA,OAAUC;AAAV,MAAwB9B,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,MAAM,CAACS,MAAP,KAAkB,QAAlB,IAA8BC,YAAY,CAACC,OAAb,CAAqB,aAArB,MAAwC,IAA1E,EAAgF;AAC5EX,MAAAA,MAAM,CAACY,IAAP,CAAY,GAAZ;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAC/BC,IAAAA,QAAQ,CAAC,OAAD,EAAUD,CAAC,CAACE,MAAF,CAASC,KAAnB,CAAR;AACH;;AAED,WAASC,yBAAT,CAAmCJ,CAAnC,EAAsC;AAClCC,IAAAA,QAAQ,CAAC,UAAD,EAAaD,CAAC,CAACE,MAAF,CAASC,KAAtB,CAAR;AACH;;AAED,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,YAArB;AAAmCN,IAAAA,QAAnC;AAA6CO,IAAAA,MAA7C;AAAqDC,IAAAA;AAArD,MAAmEvC,OAAO,CAAC;AAAEwC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhF;;AAEA,QAAMC,QAAQ,GAAGC,IAAI,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACApB,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAIoB,IAAI,CAACG,KAAL,KAAe,EAAf,IAAqBH,IAAI,CAACvB,QAAL,KAAkB,EAA3C,EAA+C;AAC3CV,MAAAA,gBAAgB,CAACqC,KAAjB,CAAuBJ,IAAI,CAACG,KAA5B,EAAmCH,IAAI,CAACvB,QAAxC,EAAkD4B,IAAlD,CAAuDC,QAAQ,IAAI;AAC/D,YAAIA,QAAQ,CAACN,IAAT,CAAcO,IAAd,GAAqB,GAAzB,EAA8B;AAC1BlC,UAAAA,KAAK,CAACmC,OAAN,CAAcC,IAAd,CAAmB;AAAEC,YAAAA,QAAQ,EAAE,MAAZ;AAAoBC,YAAAA,OAAO,EAAE,OAA7B;AAAsCC,YAAAA,MAAM,EAAEN,QAAQ,CAACN,IAAT,CAAca,OAA5D;AAAqEC,YAAAA,IAAI,EAAE;AAA3E,WAAnB;AACAhC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,UAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,SAJD,MAIO;AACHE,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,UAAAA,YAAY,CAAC+B,OAAb,CAAqB,aAArB,EAAoC,YAAYT,QAAQ,CAACN,IAAT,CAAcgB,KAA9D;AACApC,UAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAR,UAAAA,QAAQ,CAACJ,qBAAqB,CAAC,KAAD,CAAtB,CAAR;AACAM,UAAAA,MAAM,CAACY,IAAP,CAAY,GAAZ;AACH;AACJ,OAZD;AAaH,KAdD,MAcO;AACHb,MAAAA,KAAK,CAACmC,OAAN,CAAcC,IAAd,CAAmB;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,OAAO,EAAE,OAA7B;AAAsCC,QAAAA,MAAM,EAAE,oCAA9C;AAAoFE,QAAAA,IAAI,EAAE;AAA1F,OAAnB;AACAlC,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH;AACJ,GArBD;;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAACyD,YAAvB;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEtB,YAAY,CAACI,QAAD,CAA5B;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAE1B;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEb,MAAM,CAAC0D,wBAAvB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAE1D,MAAM,CAAC2D,SAAvB;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AACI,YAAA,OAAO,EAAE1B,OADb;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,YAAY,EAAE2B,SAHlB;AAII,YAAA,KAAK,EAAE;AACHC,cAAAA,QAAQ,EAAE,IADP;AACaC,cAAAA,SAAS,EAAE;AADxB,aAJX;AAOI,YAAA,MAAM,EAAE,CAAC;AAAEC,cAAAA,MAAF;AAAUC,cAAAA,QAAV;AAAoBjC,cAAAA;AAApB,aAAD,kBACJ,QAAC,SAAD;AACI,cAAA,EAAE,EAAC,OADP;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,QAAQ,EAAGH,CAAD,IAAOD,sBAAsB,CAACC,CAAD,CAH3C;AAII,cAAA,KAAK,EAAEG,KAJX;AAKI,cAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBJ,eAqBI,QAAC,UAAD;AACI,YAAA,OAAO,EAAEE,OADb;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,YAAY,EAAE2B,SAHlB;AAII,YAAA,KAAK,EAAE;AACHC,cAAAA,QAAQ,EAAE,IADP;AACaC,cAAAA,SAAS,EAAE;AADxB,aAJX;AAOI,YAAA,MAAM,EAAE,CAAC;AAAEC,cAAAA,MAAF;AAAUC,cAAAA,QAAV;AAAoBjC,cAAAA;AAApB,aAAD,kBACJ,QAAC,QAAD,CACI;AADJ;AAEI,cAAA,EAAE,EAAC,UAFP;AAGI,cAAA,IAAI,EAAC,UAHT;AAII,cAAA,QAAQ,EAAGH,CAAD,IAAOI,yBAAyB,CAACJ,CAAD,CAJ9C;AAKI,cAAA,KAAK,EAAEG,KALX;AAMI,cAAA,WAAW,EAAC,OANhB;AAOI,cAAA,UAAU,MAPd;AAQI,cAAA,SAAS,EAAC,OARd;AASI,cAAA,WAAW,EAAC,UAThB;AAUI,cAAA,WAAW,EAAC,OAVhB;AAWI,cAAA,WAAW,EAAC,6BAXhB;AAYI,cAAA,YAAY,EAAC;AAZjB;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,kBArBJ,eA6CI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBA7CJ,EA8CKZ,kBAAkB,iBACf,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,kBA/CR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2DH;;AAED,eAAgBT,KAAhB","sourcesContent":["//imports api\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useRouter } from 'next/router'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\n//imports styles\r\nimport styles from '../../styles/login.module.css'\r\n\r\n//imports bibliotecas\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { Button } from 'primereact/button';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Alert } from 'reactstrap';\r\nimport { Toast } from \"primereact/toast\";\r\n\r\n//imports services\r\nimport { LoginDataService } from '../../services/LoginDataService';\r\n\r\n//actions\r\nimport { showButtonLoginAction } from '../../store/actions/login_logout';\r\nimport { localStorageManager } from '@chakra-ui/color-mode';\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useRef(null);\r\n    const router = useRouter()\r\n\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loadingCredentials, setLoadingCredentials] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (router.asPath === '/login' && localStorage.getItem('accessToken') !== null) {\r\n            router.push('/');\r\n        }\r\n    }, [])\r\n\r\n    function handleInputEmailChange(e) {\r\n        setValue('email', e.target.value);\r\n    }\r\n\r\n    function handleInputPasswordChange(e) {\r\n        setValue('password', e.target.value);\r\n    }\r\n\r\n    const { control, register, handleSubmit, setValue, errors, getValues } = useForm({ mode: 'onChange' });\r\n\r\n    const onSubmit = data => {\r\n        console.log(data);\r\n        setLoadingCredentials(true);\r\n        if (data.email !== \"\" && data.password !== \"\") {\r\n            LoginDataService.logIn(data.email, data.password).then(response => {\r\n                if (response.data.code > 300) {\r\n                    toast.current.show({ severity: \"warn\", summary: \"Aviso\", detail: response.data.message, life: 3000 });\r\n                    setVisible(true);\r\n                    setLoadingCredentials(false);\r\n                } else {\r\n                    setVisible(false);\r\n                    localStorage.setItem('accessToken', 'Bearer ' + response.data.token);\r\n                    setLoadingCredentials(false);\r\n                    dispatch(showButtonLoginAction(false));\r\n                    router.push('/');\r\n                }\r\n            });\r\n        } else {\r\n            toast.current.show({ severity: \"warn\", summary: \"Aviso\", detail: \"Preencha os campos, E-mail e Senha\", life: 3000 });\r\n            setLoadingCredentials(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.layout_login}>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Toast ref={toast} />\r\n                <div className={styles.layout_login_no_messages}>\r\n                    <div className={styles.box_login}>\r\n                        <h5>E-mail</h5>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"email\"\r\n                            defaultValue={undefined}\r\n                            rules={{\r\n                                required: true, maxLength: 50\r\n                            }}\r\n                            render={({ onBlur, onChange, value }) => (\r\n                                <InputText\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    onChange={(e) => handleInputEmailChange(e)}\r\n                                    value={value}\r\n                                    placeholder=\"E-mail\"\r\n                                />\r\n                            )}\r\n                        />\r\n\r\n                        <h5>Senha</h5>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"password\"\r\n                            defaultValue={undefined}\r\n                            rules={{\r\n                                required: true, maxLength: 50\r\n                            }}\r\n                            render={({ onBlur, onChange, value }) => (\r\n                                <Password\r\n                                    // style={{ width: '100%', borderColor: errors.nome ? 'red' : '' }}\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={(e) => handleInputPasswordChange(e)}\r\n                                    value={value}\r\n                                    placeholder=\"Senha\"\r\n                                    toggleMask\r\n                                    weakLabel=\"Fraca\"\r\n                                    mediumLabel=\"Média\"\r\n                                    strongLabel=\"Forte\"\r\n                                    promptLabel=\"Por favor entre com a senha\"\r\n                                    autoComplete=\"new-password\"\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Button type=\"submit\" label=\"Entrar\" />\r\n                        {loadingCredentials &&\r\n                            <ProgressSpinner />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (Login)"]},"metadata":{},"sourceType":"module"}