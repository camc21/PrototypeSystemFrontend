{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\userEntity\\\\form.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { Fieldset } from \"primereact/fieldset\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Button } from \"primereact/button\";\nimport { Toast } from \"primereact/toast\";\nimport { Password } from 'primereact/password';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport withAuth from \"../../components/withAuth\";\nimport \"primeflex/primeflex.css\";\nimport { UserEntityDataService } from \"../../services/UserEntityDataService\";\nimport { AccessProfileDataService } from \"../../services/AccessProfileDataService\";\nimport { loadUserEntitySelectedAction } from \"../../store/actions/userEntity\";\n\nfunction UserEntityForm(props) {\n  const {\n    0: userEntitySelected,\n    1: setUserEntitySelected\n  } = useState(useSelector(state => state.userEntitySelectedReducer.userEntitySelected));\n  const {\n    0: comboBoxAccessProfiles,\n    1: setComboBoxAccessProfiles\n  } = useState([]);\n  const {\n    0: selectedComboBoxAccessProfile,\n    1: setSelectedComboBoxAccessProfile\n  } = useState(null);\n  const {\n    0: selectedAccessProfilesList,\n    1: setSelectedAccessProfileList\n  } = useState([]);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const toast = useRef(null);\n  const router = useRouter();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    AccessProfileDataService._comboBoxAccessProfiles().then(response => {\n      setComboBoxAccessProfiles(response.data);\n      setValue(\"accessProfile\", response.data[0].value);\n    });\n  }, []);\n\n  function _save() {\n    if (!userEntitySelected.id) {\n      UserEntityDataService._post(userEntitySelected).then(response => {\n        toast.current.show({\n          severity: \"success\",\n          summary: \"Sucesso\",\n          detail: \"Registro criado com sucesso!\",\n          life: 3000\n        });\n        setTimeout(() => {\n          console.log(\"EXECUTADO POST\");\n          router.push(\"/userEntity\");\n        }, 3000);\n      });\n    } else {\n      UserEntityDataService._put(userEntitySelected).then(response => {\n        toast.current.show({\n          severity: \"success\",\n          summary: \"Sucesso\",\n          detail: \"Registro alterado com sucesso!\",\n          life: 3000\n        });\n        setTimeout(() => {\n          console.log(\"EXECUTADO PUT\");\n          router.push(\"/userEntity\");\n        }, 3000);\n      });\n    }\n  }\n\n  function onChangeName(e) {\n    let userEntityAux = _objectSpread({}, userEntitySelected);\n\n    userEntityAux.name = e.target.value;\n    setUserEntitySelected(userEntityAux);\n  }\n\n  function onChangeEmail(e) {\n    let userEntityAux = _objectSpread({}, userEntitySelected);\n\n    userEntityAux.email = e.target.value;\n    setUserEntitySelected(userEntityAux);\n  }\n\n  function onChangeLogin(e) {\n    let userEntityAux = _objectSpread({}, userEntitySelected);\n\n    userEntityAux.login = e.target.value;\n    setUserEntitySelected(userEntityAux);\n  }\n\n  function onChangePassword(e) {\n    let userEntityAux = _objectSpread({}, userEntitySelected);\n\n    userEntityAux.password = e.target.value;\n    setUserEntitySelected(userEntityAux);\n  }\n\n  const removeAccessProfile = rowData => {\n    let selectedAccessProfilesListAux = selectedAccessProfilesList.filter(function (item) {\n      return item.id !== rowData.id;\n    });\n    setSelectedAccessProfileList(selectedAccessProfilesListAux);\n    let comboBoxAccessProfilesAux = comboBoxAccessProfiles;\n    comboBoxAccessProfilesAux.push({\n      value: rowData.id,\n      label: rowData.name\n    });\n    setComboBoxAccessProfiles(comboBoxAccessProfilesAux);\n    setSelectedComboBoxAccessProfile(comboBoxAccessProfilesAux[0]);\n  };\n\n  const addAccessProfile = () => {\n    let selectedAccessProfilesListAux = selectedAccessProfilesList;\n    selectedAccessProfilesListAux.push({\n      id: selectedComboBoxAccessProfile.value,\n      name: selectedComboBoxAccessProfile.label\n    });\n    let comboBoxAccessProfileAux = comboBoxAccessProfiles.filter(item => item.label !== selectedComboBoxAccessProfile.label); //atualiza combobox das funcionalidade deixando apenas a funcionalidades não adicionadas no combobox\n\n    setComboBoxAccessProfiles(comboBoxAccessProfileAux); //atualiza a funcionalidade selecionada após a atualização do array de funcioalidades\n\n    setSelectedComboBoxAccessProfile(comboBoxAccessProfileAux[0]); //atualiza a tabela com os dados da funcionalidade e as permissões da mesma\n\n    setSelectedAccessProfileList(selectedAccessProfilesListAux);\n  };\n\n  const actionBodyTemplate = rowData => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"pi pi-trash\",\n        className: \"p-button-rounded p-button-warning\",\n        onClick: () => removeAccessProfile(rowData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  function handleInputNameChange(e) {\n    setValue('name', e.target.value);\n  }\n\n  function handleInputEmailChange(e) {\n    setValue('email', e.target.value);\n  }\n\n  function handleInputLoginChange(e) {\n    setValue('login', e.target.value);\n  }\n\n  function handleInputPasswordChange(e) {\n    setValue('password', e.target.value);\n  }\n\n  function handleAccessProfileComboBox(e) {\n    console.log(e);\n    const index = comboBoxAccessProfiles.map(function (item) {\n      return item.value;\n    }).indexOf(e);\n\n    if (index >= 0) {\n      setSelectedComboBoxAccessProfile(comboBoxAccessProfiles[index]);\n      setValue('accessProfile', comboBoxAccessProfiles[index].value);\n    }\n  }\n\n  const {\n    control,\n    register,\n    handleSubmit,\n    setValue,\n    errors,\n    getValues\n  } = useForm({\n    mode: 'onChange'\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        ref: toast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n        style: {\n          marginTop: \"15px\"\n        },\n        legend: \"Cadastro de Usu\\xE1rios\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Nome: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"name\",\n            defaultValue: undefined,\n            rules: {\n              required: true,\n              maxLength: 50\n            },\n            render: ({\n              onBlur,\n              onChange,\n              value\n            }) => /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"name\",\n              name: \"name\",\n              onChange: e => handleInputNameChange(e),\n              value: value,\n              placeholder: \"Nome\",\n              className: \"inputfield w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"E-mail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"email\",\n            defaultValue: undefined,\n            rules: {\n              required: true,\n              maxLength: 50\n            },\n            render: ({\n              onBlur,\n              onChange,\n              value\n            }) => /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"email\",\n              name: \"email\",\n              onChange: e => handleInputEmailChange(e),\n              value: value,\n              placeholder: \"E-mail\",\n              className: \"inputfield w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"login\",\n            children: \"Login:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"login\",\n            control: control,\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(InputText, _objectSpread({}, field), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"password\",\n            control: control,\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(Password, _objectSpread(_objectSpread({}, field), {}, {\n              id: \"password\",\n              name: \"password\",\n              placeholder: \"Senha\",\n              className: \"inputfield w-full\",\n              toggleMask: true,\n              autoComplete: \"new-password\",\n              weakLabel: \"Fraca\",\n              mediumLabel: \"M\\xE9dia\",\n              strongLabel: \"Forte\",\n              promptLabel: \"Por favor entre com a senha\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formgrid grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"accessProfiles\",\n              children: \"Perfis de Acesso:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"accessProfile\",\n              control: control,\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(Dropdown, _objectSpread(_objectSpread({}, field), {}, {\n                options: comboBoxAccessProfiles\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field col-12 md:col-6\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              id: \"back-button\",\n              label: \"Adicionar\",\n              onClick: addAccessProfile,\n              disabled: comboBoxAccessProfiles.length < 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            scrollHeight: \"300px\",\n            scrollable: true,\n            value: selectedAccessProfilesList,\n            responsiveLayout: \"scroll\",\n            children: [/*#__PURE__*/_jsxDEV(Column, {\n              header: \"Selecionado\",\n              selectionMode: \"single\",\n              headerStyle: {\n                width: \"3em\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"name\",\n              header: \"Funcionalidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              body: actionBodyTemplate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/userEntity\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"back-button\",\n            style: {\n              marginRight: \"15px\"\n            },\n            label: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          label: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\nexport default withAuth(UserEntityForm);","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/userEntity/form.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","useForm","Controller","Link","useRouter","Fieldset","InputText","Checkbox","Button","Toast","Password","Dropdown","DataTable","Column","withAuth","UserEntityDataService","AccessProfileDataService","loadUserEntitySelectedAction","UserEntityForm","props","userEntitySelected","setUserEntitySelected","state","userEntitySelectedReducer","comboBoxAccessProfiles","setComboBoxAccessProfiles","selectedComboBoxAccessProfile","setSelectedComboBoxAccessProfile","selectedAccessProfilesList","setSelectedAccessProfileList","password","setPassword","toast","router","dispatch","_comboBoxAccessProfiles","then","response","data","setValue","value","_save","id","_post","current","show","severity","summary","detail","life","setTimeout","console","log","push","_put","onChangeName","e","userEntityAux","name","target","onChangeEmail","email","onChangeLogin","login","onChangePassword","removeAccessProfile","rowData","selectedAccessProfilesListAux","filter","item","comboBoxAccessProfilesAux","label","addAccessProfile","comboBoxAccessProfileAux","actionBodyTemplate","handleInputNameChange","handleInputEmailChange","handleInputLoginChange","handleInputPasswordChange","handleAccessProfileComboBox","index","map","indexOf","control","register","handleSubmit","errors","getValues","mode","onSubmit","marginTop","undefined","required","maxLength","onBlur","onChange","field","length","width","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Link from \"next/link\"\r\nimport { useRouter } from \"next/router\"\r\n\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Checkbox } from \"primereact/checkbox\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { Password } from 'primereact/password';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\n\r\n\r\nimport withAuth from \"../../components/withAuth\";\r\n\r\nimport \"primeflex/primeflex.css\";\r\n\r\nimport { UserEntityDataService } from \"../../services/UserEntityDataService\";\r\nimport { AccessProfileDataService } from \"../../services/AccessProfileDataService\";\r\n\r\nimport { loadUserEntitySelectedAction } from \"../../store/actions/userEntity\";\r\n\r\n\r\n\r\nfunction UserEntityForm(props) {\r\n\r\n    const [userEntitySelected, setUserEntitySelected] = useState(useSelector((state) => state.userEntitySelectedReducer.userEntitySelected));\r\n\r\n    const [comboBoxAccessProfiles, setComboBoxAccessProfiles] = useState([]);\r\n    const [selectedComboBoxAccessProfile, setSelectedComboBoxAccessProfile] = useState(null);\r\n    const [selectedAccessProfilesList, setSelectedAccessProfileList] = useState([]);\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n\r\n    const toast = useRef(null);\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        AccessProfileDataService._comboBoxAccessProfiles().then(response => {\r\n            setComboBoxAccessProfiles(response.data);\r\n            setValue(\"accessProfile\", response.data[0].value);\r\n        })\r\n    }, []);\r\n\r\n    function _save() {\r\n\r\n        if (!userEntitySelected.id) {\r\n            UserEntityDataService._post(userEntitySelected).then(response => {\r\n                toast.current.show({ severity: \"success\", summary: \"Sucesso\", detail: \"Registro criado com sucesso!\", life: 3000 });\r\n                setTimeout(() => {\r\n                    console.log(\"EXECUTADO POST\");\r\n                    router.push(\"/userEntity\");\r\n                }, 3000);\r\n            })\r\n        } else {\r\n            UserEntityDataService._put(userEntitySelected).then(response => {\r\n                toast.current.show({ severity: \"success\", summary: \"Sucesso\", detail: \"Registro alterado com sucesso!\", life: 3000 });\r\n                setTimeout(() => {\r\n                    console.log(\"EXECUTADO PUT\");\r\n                    router.push(\"/userEntity\");\r\n                }, 3000);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    function onChangeName(e) {\r\n        let userEntityAux = { ...userEntitySelected };\r\n        userEntityAux.name = e.target.value;\r\n        setUserEntitySelected(userEntityAux);\r\n    }\r\n\r\n    function onChangeEmail(e) {\r\n        let userEntityAux = { ...userEntitySelected };\r\n        userEntityAux.email = e.target.value;\r\n        setUserEntitySelected(userEntityAux);\r\n    }\r\n\r\n    function onChangeLogin(e) {\r\n        let userEntityAux = { ...userEntitySelected };\r\n        userEntityAux.login = e.target.value;\r\n        setUserEntitySelected(userEntityAux);\r\n    }\r\n\r\n    function onChangePassword(e) {\r\n        let userEntityAux = { ...userEntitySelected };\r\n        userEntityAux.password = e.target.value;\r\n        setUserEntitySelected(userEntityAux);\r\n    }\r\n\r\n    const removeAccessProfile = (rowData) => {\r\n        let selectedAccessProfilesListAux = selectedAccessProfilesList.filter(function (item) { return item.id !== rowData.id });\r\n        setSelectedAccessProfileList(selectedAccessProfilesListAux);\r\n\r\n        let comboBoxAccessProfilesAux = comboBoxAccessProfiles;\r\n        comboBoxAccessProfilesAux.push({ value: rowData.id, label: rowData.name });\r\n        setComboBoxAccessProfiles(comboBoxAccessProfilesAux);\r\n        setSelectedComboBoxAccessProfile(comboBoxAccessProfilesAux[0]);\r\n    }\r\n\r\n    const addAccessProfile = () => {\r\n        let selectedAccessProfilesListAux = selectedAccessProfilesList;\r\n        selectedAccessProfilesListAux.push({ id: selectedComboBoxAccessProfile.value, name: selectedComboBoxAccessProfile.label });\r\n        let comboBoxAccessProfileAux = comboBoxAccessProfiles.filter(item => item.label !== selectedComboBoxAccessProfile.label);\r\n\r\n        //atualiza combobox das funcionalidade deixando apenas a funcionalidades não adicionadas no combobox\r\n        setComboBoxAccessProfiles(comboBoxAccessProfileAux);\r\n        //atualiza a funcionalidade selecionada após a atualização do array de funcioalidades\r\n        setSelectedComboBoxAccessProfile(comboBoxAccessProfileAux[0]);\r\n        //atualiza a tabela com os dados da funcionalidade e as permissões da mesma\r\n        setSelectedAccessProfileList(selectedAccessProfilesListAux);\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => removeAccessProfile(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    function handleInputNameChange(e) {\r\n        setValue('name', e.target.value);\r\n    }\r\n\r\n    function handleInputEmailChange(e) {\r\n        setValue('email', e.target.value);\r\n    }\r\n\r\n    function handleInputLoginChange(e) {\r\n        setValue('login', e.target.value);\r\n    }\r\n\r\n    function handleInputPasswordChange(e) {\r\n        setValue('password', e.target.value);\r\n    }\r\n\r\n    function handleAccessProfileComboBox(e) {\r\n        console.log(e);\r\n        const index = comboBoxAccessProfiles.map(function (item) { return item.value }).indexOf(e);\r\n        if (index >= 0) {\r\n            setSelectedComboBoxAccessProfile(comboBoxAccessProfiles[index]);\r\n            setValue('accessProfile', comboBoxAccessProfiles[index].value);\r\n        }\r\n    }\r\n\r\n    const { control, register, handleSubmit, setValue, errors, getValues } = useForm({ mode: 'onChange' });\r\n\r\n    const onSubmit = data => {\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n                <Toast ref={toast} />\r\n                <Fieldset style={{ marginTop: \"15px\" }} legend=\"Cadastro de Usuários\">\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome: </label>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"name\"\r\n                            defaultValue={undefined}\r\n                            rules={{\r\n                                required: true, maxLength: 50\r\n                            }}\r\n                            render={({ onBlur, onChange, value }) => (\r\n                                <InputText\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    onChange={(e) => handleInputNameChange(e)}\r\n                                    value={value}\r\n                                    placeholder=\"Nome\"\r\n                                    className=\"inputfield w-full\"\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"email\">E-mail:</label>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"email\"\r\n                            defaultValue={undefined}\r\n                            rules={{\r\n                                required: true, maxLength: 50\r\n                            }}\r\n                            render={({ onBlur, onChange, value }) => (\r\n                                <InputText\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    onChange={(e) => handleInputEmailChange(e)}\r\n                                    value={value}\r\n                                    placeholder=\"E-mail\"\r\n                                    className=\"inputfield w-full\"\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"login\">Login:</label>\r\n                        <Controller\r\n                            name=\"login\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <InputText\r\n                                    {...field}\r\n                                  \r\n                                />}\r\n                        />\r\n                        {/* <Controller\r\n                            control={control}\r\n                            name=\"login\"\r\n                            defaultValue={undefined}\r\n                            rules={{\r\n                                required: true, maxLength: 50\r\n                            }}\r\n                            render={({ onBlur, onChange, value }) => (\r\n                                <InputText\r\n                                    id=\"login\"\r\n                                    name=\"login\"\r\n                                    onChange={(e) => handleInputLoginChange(e)}\r\n                                    value={value}\r\n                                    placeholder=\"Login\"\r\n                                    className=\"inputfield w-full\"\r\n                                />\r\n                            )}\r\n                        /> */}\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <Controller\r\n                            name=\"password\"\r\n                            control={control}\r\n                            render={({ field }) =>\r\n                                <Password\r\n                                    {...field}\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Senha\"\r\n                                    className=\"inputfield w-full\"\r\n                                    toggleMask\r\n                                    autoComplete=\"new-password\"\r\n                                    weakLabel=\"Fraca\"\r\n                                    mediumLabel=\"Média\"\r\n                                    strongLabel=\"Forte\"\r\n                                    promptLabel=\"Por favor entre com a senha\"\r\n                                />}\r\n                        />\r\n                        {/* <Controller\r\n                            control={control}\r\n                            name=\"password\"\r\n                            defaultValue={undefined}\r\n                            rules={{\r\n                                required: true, maxLength: 50\r\n                            }}\r\n                            render={({ onBlur, onChange, value }) => (\r\n                                <Password\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    onChange={(e) => handleInputPasswordChange(e)}\r\n                                    value={value}\r\n                                    placeholder=\"Senha\"\r\n                                    className=\"inputfield w-full\"\r\n                                    toggleMask\r\n                                    autoComplete=\"new-password\"\r\n                                    weakLabel=\"Fraca\"\r\n                                    mediumLabel=\"Média\"\r\n                                    strongLabel=\"Forte\"\r\n                                    promptLabel=\"Por favor entre com a senha\"\r\n                                />\r\n                            )}\r\n                        /> */}\r\n                    </div>\r\n\r\n                    <div className=\"formgrid grid\">\r\n                        <div className=\"field col-12\">\r\n                            <label htmlFor=\"accessProfiles\">Perfis de Acesso:</label>\r\n                            {/* <Dropdown emptyMessage=\"Nenhum Perfil de Acesso Disponível\" className=\"inputfield w-full\" optionValue=\"value\" optionLabel=\"label\" options={comboBoxAccessProfiles} value={selectedComboBoxAccessProfile && selectedComboBoxAccessProfile.value} onChange={(e) => handleAccessProfileComboBox(e.target.value)} /> */}\r\n                            <Controller\r\n                                name=\"accessProfile\"\r\n                                control={control}\r\n                                render={({ field }) =>\r\n                                    <Dropdown\r\n                                        {...field}\r\n                                        options={comboBoxAccessProfiles}\r\n                                    />}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-12 md:col-6\">\r\n                            <Button id=\"back-button\" label=\"Adicionar\" onClick={addAccessProfile} disabled={comboBoxAccessProfiles.length < 1} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <DataTable\r\n                            scrollHeight=\"300px\"\r\n                            scrollable\r\n                            value={selectedAccessProfilesList}\r\n                            responsiveLayout=\"scroll\">\r\n                            <Column header=\"Selecionado\" selectionMode=\"single\" headerStyle={{ width: \"3em\" }}></Column>\r\n                            <Column field=\"name\" header=\"Funcionalidade\"></Column>\r\n                            <Column body={actionBodyTemplate}></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <Link href=\"/userEntity\">\r\n                        <Button id=\"back-button\" style={{ marginRight: \"15px\" }} label=\"Voltar\" />\r\n                    </Link>\r\n\r\n                    <Button type=\"submit\" label=\"Salvar\" />\r\n\r\n                </Fieldset>\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default withAuth(UserEntityForm);"]},"metadata":{},"sourceType":"module"}