{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\login\\\\index.jsx\";\n//imports api\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSelector, useDispatch } from \"react-redux\"; //imports styles\n\nimport styles from '../../styles/login.module.css'; //imports bibliotecas\n\nimport { InputText } from 'primereact/inputtext';\nimport { Password } from 'primereact/password';\nimport { Button } from 'primereact/button';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Alert } from 'reactstrap';\nimport { Toast } from \"primereact/toast\"; //imports services\n\nimport { LoginDataService } from '../../services/LoginDataService'; //actions\n\nimport { showButtonLoginAction } from '../../store/actions/login_logout';\nimport { localStorageManager } from '@chakra-ui/color-mode';\n\nfunction Login(props) {\n  const dispatch = useDispatch();\n  const toast = useRef(null);\n  const router = useRouter();\n  const {\n    0: login,\n    1: setLogin\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: loadingCredentials,\n    1: setLoadingCredentials\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: dadosErroLogin,\n    1: setDadosErroLogin\n  } = useState({});\n  useEffect(() => {\n    if (router.asPath === '/login' && localStorage.getItem('accessToken') !== null) {\n      router.push('/');\n    }\n  }, []);\n\n  const logIn = () => {\n    setLoadingCredentials(true);\n\n    if (login && password) {\n      LoginDataService.logIn(login, password).then(response => {\n        if (response.data.code > 300) {\n          setDadosErroLogin(response.data);\n          setVisible(true);\n          setLoadingCredentials(false);\n        } else {\n          setVisible(false);\n          localStorage.setItem('accessToken', 'Bearer ' + response.data.token);\n          setLoadingCredentials(false);\n          dispatch(showButtonLoginAction(false));\n          router.push('/');\n        }\n      });\n    } else {\n      toast.current.show({\n        severity: \"success\",\n        summary: \"Sucesso\",\n        detail: \"Registro criado com sucesso!\",\n        life: 3000\n      });\n    }\n  };\n\n  const onDismiss = () => setVisible(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.layout_login,\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.box_messages,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"danger\",\n        isOpen: visible,\n        toggle: onDismiss,\n        children: dadosErroLogin.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.layout_login_no_messages,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box_login,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          value: login,\n          onChange: e => setLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Password, {\n          className: styles.password,\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          toggleMask: true,\n          autoComplete: \"new-password\",\n          weakLabel: \"Fraca\",\n          mediumLabel: \"M\\xE9dia\",\n          strongLabel: \"Forte\",\n          promptLabel: \"Por favor entre com a senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Login\",\n          onClick: logIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), loadingCredentials && /*#__PURE__*/_jsxDEV(ProgressSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Login;","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/login/index.jsx"],"names":["React","useState","useEffect","useRef","useRouter","useSelector","useDispatch","styles","InputText","Password","Button","ProgressSpinner","Alert","Toast","LoginDataService","showButtonLoginAction","localStorageManager","Login","props","dispatch","toast","router","login","setLogin","password","setPassword","loadingCredentials","setLoadingCredentials","visible","setVisible","dadosErroLogin","setDadosErroLogin","asPath","localStorage","getItem","push","logIn","then","response","data","code","setItem","token","current","show","severity","summary","detail","life","onDismiss","layout_login","box_messages","message","layout_login_no_messages","box_login","e","target","value"],"mappings":"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","sourcesContent":["//imports api\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useRouter } from 'next/router'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n//imports styles\r\nimport styles from '../../styles/login.module.css'\r\n\r\n//imports bibliotecas\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { Button } from 'primereact/button';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Alert } from 'reactstrap';\r\nimport { Toast } from \"primereact/toast\";\r\n\r\n//imports services\r\nimport { LoginDataService } from '../../services/LoginDataService';\r\n\r\n//actions\r\nimport { showButtonLoginAction } from '../../store/actions/login_logout';\r\nimport { localStorageManager } from '@chakra-ui/color-mode';\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useRef(null);\r\n    const router = useRouter()\r\n\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loadingCredentials, setLoadingCredentials] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n    const [dadosErroLogin, setDadosErroLogin] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (router.asPath === '/login' && localStorage.getItem('accessToken') !== null) {\r\n            router.push('/');\r\n        }\r\n    }, [])\r\n\r\n    const logIn = () => {\r\n        setLoadingCredentials(true);\r\n        if (login && password) {\r\n            LoginDataService.logIn(login, password).then(response => {\r\n                if (response.data.code > 300) {\r\n                    setDadosErroLogin(response.data);\r\n                    setVisible(true);\r\n                    setLoadingCredentials(false);\r\n                } else {\r\n                    setVisible(false);\r\n                    localStorage.setItem('accessToken', 'Bearer ' + response.data.token);\r\n                    setLoadingCredentials(false);\r\n                    dispatch(showButtonLoginAction(false));\r\n                    router.push('/');\r\n                }\r\n            });\r\n        } else {\r\n            toast.current.show({ severity: \"success\", summary: \"Sucesso\", detail: \"Registro criado com sucesso!\", life: 3000 });\r\n        }\r\n\r\n    }\r\n\r\n    const onDismiss = () => setVisible(false);\r\n\r\n    return (\r\n        <div className={styles.layout_login}>\r\n            <Toast ref={toast} />\r\n\r\n            <div className={styles.box_messages}>\r\n                <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>\r\n                    {dadosErroLogin.message}\r\n                </Alert>\r\n            </div>\r\n            <div className={styles.layout_login_no_messages}>\r\n                <div className={styles.box_login}>\r\n                    <h5>Login</h5>\r\n\r\n                    <InputText value={login} onChange={(e) => setLogin(e.target.value)} />\r\n\r\n                    <h5>Senha</h5>\r\n                    <Password\r\n                        className={styles.password}\r\n                        value={password} onChange={(e) => setPassword(e.target.value)}\r\n                        toggleMask\r\n                        autoComplete=\"new-password\"\r\n                        weakLabel=\"Fraca\"\r\n                        mediumLabel=\"Média\"\r\n                        strongLabel=\"Forte\"\r\n                        promptLabel=\"Por favor entre com a senha\"\r\n                    />\r\n\r\n                    <Button label=\"Login\" onClick={logIn} />\r\n                    {loadingCredentials &&\r\n                        <ProgressSpinner />\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (Login)"]},"metadata":{},"sourceType":"module"}