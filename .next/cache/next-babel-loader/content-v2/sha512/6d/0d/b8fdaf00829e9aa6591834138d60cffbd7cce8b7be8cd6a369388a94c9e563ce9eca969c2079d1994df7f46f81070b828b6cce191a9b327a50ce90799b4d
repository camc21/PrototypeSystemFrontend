{"ast":null,"code":"import _defineProperty from \"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _extends from \"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\components\\\\withPrivateRoute.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Router from 'next/router';\nvar login = '/login?redirected=true'; // Define your login route address.\n\n/**\r\n * Check user authentication and authorization\r\n * It depends on you and your auth service provider.\r\n * @returns {{auth: null}}\r\n */\n\nvar checkUserAuthentication = function checkUserAuthentication() {\n  console.log('checkUserAuthentication');\n  return {\n    auth: {\n      isAdmin: true\n    }\n  }; // change null to { isAdmin: true } for test it.\n};\n\nexport default (function (WrappedComponent) {\n  console.log('WrappedComponent');\n\n  var hocComponent = function hocComponent(_ref) {\n    var props = _extends({}, _ref);\n\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 44\n    }, _this);\n  }; // hocComponent.getInitialProps = async (context) => {\n  //     console.log(context);\n  //     console.log('getInitialProps');\n  //     const userAuth = await checkUserAuthentication();\n  //     console.log('Entrei aqui na validação');\n  //     // Are you an authorized user or not?\n  //     if (!userAuth?.auth) {\n  //         console.log('if 1');\n  //     // Handle server-side and client-side rendering.\n  //     if (context.res) {\n  //             console.log('if 2');\n  //         console.log();\n  //         context.res?.writeHead(302, {\n  //         Location: login,\n  //         });\n  //         context.res?.end();\n  //     } else {\n  //         console.log('else 1');\n  //         Router.replace(login);\n  //     }\n  //     } else if (WrappedComponent.getInitialProps) {\n  //     console.log('else 2');\n  //     const wrappedProps = await WrappedComponent.getInitialProps({...context, auth: userAuth});\n  //     return { ...wrappedProps, userAuth };\n  //     }\n  //     console.log('return { userAuth };')\n  //     return { userAuth };\n  // };\n\n\n  console.log('hocComponent');\n  return hocComponent;\n});","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/components/withPrivateRoute.jsx"],"names":["React","Router","login","checkUserAuthentication","console","log","auth","isAdmin","WrappedComponent","hocComponent","props"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAMC,KAAK,GAAG,wBAAd,C,CAAwC;;AAExC;AACA;AACA;AACA;AACA;;AACA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAAR,GAAP,CAFkC,CAEE;AACvC,CAHD;;AAKA,gBAAe,UAAAC,gBAAgB,EAAI;AAC/BJ,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,MAAMI,YAAY,GAAG,SAAfA,YAAe;AAAA,QAAMC,KAAN;;AAAA,wBAAkB,QAAC,gBAAD,oBAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA,aAAlB;AAAA,GAArB,CAF+B,CAI/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAOI,YAAP;AACH,CAlCD","sourcesContent":["import React from 'react';\r\nimport Router from 'next/router';\r\n\r\nconst login = '/login?redirected=true'; // Define your login route address.\r\n\r\n/**\r\n * Check user authentication and authorization\r\n * It depends on you and your auth service provider.\r\n * @returns {{auth: null}}\r\n */\r\nconst checkUserAuthentication = () => {\r\n    console.log('checkUserAuthentication');\r\n    return { auth: { isAdmin: true } }; // change null to { isAdmin: true } for test it.\r\n};\r\n\r\nexport default WrappedComponent => {\r\n    console.log('WrappedComponent');\r\n    const hocComponent = ({ ...props }) => <WrappedComponent {...props} />;\r\n\r\n    // hocComponent.getInitialProps = async (context) => {\r\n    //     console.log(context);\r\n    //     console.log('getInitialProps');\r\n    //     const userAuth = await checkUserAuthentication();\r\n    //     console.log('Entrei aqui na validação');\r\n    //     // Are you an authorized user or not?\r\n    //     if (!userAuth?.auth) {\r\n    //         console.log('if 1');\r\n    //     // Handle server-side and client-side rendering.\r\n    //     if (context.res) {\r\n    //             console.log('if 2');\r\n    //         console.log();\r\n    //         context.res?.writeHead(302, {\r\n    //         Location: login,\r\n    //         });\r\n    //         context.res?.end();\r\n    //     } else {\r\n    //         console.log('else 1');\r\n    //         Router.replace(login);\r\n    //     }\r\n    //     } else if (WrappedComponent.getInitialProps) {\r\n    //     console.log('else 2');\r\n    //     const wrappedProps = await WrappedComponent.getInitialProps({...context, auth: userAuth});\r\n    //     return { ...wrappedProps, userAuth };\r\n    //     }\r\n    //     console.log('return { userAuth };')\r\n    //     return { userAuth };\r\n    // };\r\n    console.log('hocComponent')\r\n    return hocComponent;\r\n};"]},"metadata":{},"sourceType":"module"}