{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\anime\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Link from 'next/link';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Fieldset } from 'primereact/fieldset';\nimport { AnimeDataService } from '../../services/AnimeDataService';\nimport withAuth from '../../components/withAuth';\nimport { loadSelectedDataAction } from '../../store/actions/anime';\n\nfunction Anime(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      listaAnimes = _useState[0],\n      setListaAnimes = _useState[1];\n\n  var _useState2 = useState({}),\n      animeSelecionado = _useState2[0],\n      setAnimeSelecionado = _useState2[1];\n\n  var toast = useRef(null);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    return function () {\n      console.log('Foi desmontado');\n      setListaAnimes(null);\n      setAnimeSelecionado(null);\n    };\n  }, []);\n  useEffect(function () {\n    listarAnimes();\n  }, []);\n  useEffect(function () {\n    console.log(\"Lista alterada\");\n    listarAnimes();\n  }, [listaAnimes]);\n\n  function listarAnimes() {\n    AnimeDataService.listarAnimes().then(function (response) {\n      setListaAnimes(response.data.animes);\n    })[\"catch\"](function (error) {\n      console.log(error.response.data);\n      toast.current.show({\n        severity: 'warn',\n        summary: 'Aviso',\n        detail: error.response.data.message,\n        life: 3000\n      });\n    });\n  }\n\n  var novo = function novo() {\n    setAnimeSelecionado(null);\n    dispatch(loadSelectedDataAction(null));\n  };\n\n  var editar = function editar(rowData) {\n    console.log(rowData);\n    setAnimeSelecionado(rowData);\n    dispatch(loadSelectedDataAction(rowData));\n  };\n\n  var _delete = function _delete(rowData) {\n    var index = listaAnimes.indexOf(rowData);\n\n    AnimeDataService._delete(rowData.id).then(function (response) {\n      toast.current.show({\n        severity: 'error',\n        summary: 'Erro',\n        detail: 'Anime ' + rowData.nome + ' excluído com sucesso!',\n        life: 3000\n      });\n      var listaAnimesAux = listaAnimes;\n      listaAnimesAux.splice(index, 1);\n      console.log(listaAnimesAux);\n      setListaAnimes(listaAnimesAux);\n    })[\"catch\"](function (error) {\n      console.log(error.response.data);\n      toast.current.show({\n        severity: 'warn',\n        summary: 'Aviso',\n        detail: error.response.data.message,\n        life: 3000\n      });\n    });\n  };\n\n  var actionBodyTemplate = function actionBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime/form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: '10px'\n          },\n          icon: \"pi pi-pencil\",\n          className: \"p-button-rounded p-button-success p-mr-2\",\n          onClick: function onClick() {\n            return editar(rowData);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"pi pi-trash\",\n        className: \"p-button-rounded p-button-warning\",\n        onClick: function onClick() {\n          return _delete(rowData);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var possuiManga = function possuiManga(atributte) {\n    if (atributte) {\n      return 'Possui Mangá';\n    }\n\n    return 'Não Possui Mangá';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n      legend: \"Anime\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime/form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"new-button\",\n          label: \"Novo\",\n          onClick: function onClick() {\n            return novo({});\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        header: \"Animes Cadastrados\",\n        value: listaAnimes,\n        selectionMode: \"single\",\n        selection: animeSelecionado,\n        onSelectionChange: function onSelectionChange(e) {\n          setAnimeSelecionado(e.value);\n        },\n        dataKey: \"id\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"nome\",\n          header: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"temporada\",\n          header: \"Temporada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: function field(e) {\n            return possuiManga(e.possuiManga);\n          },\n          header: \"Possui mang\\xE1 ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          body: actionBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"back-button\",\n          label: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Anime, \"eF2/OD9QDLFjmD6KQ7lBBAwhjzY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Anime;\nexport default _c2 = withAuth(Anime);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Anime\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/anime/index.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Link","Toast","Button","DataTable","Column","Fieldset","AnimeDataService","withAuth","loadSelectedDataAction","Anime","props","listaAnimes","setListaAnimes","animeSelecionado","setAnimeSelecionado","toast","dispatch","console","log","listarAnimes","then","response","data","animes","error","current","show","severity","summary","detail","message","life","novo","editar","rowData","_delete","index","indexOf","id","nome","listaAnimesAux","splice","actionBodyTemplate","marginRight","possuiManga","atributte","e","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Link from 'next/link'\r\n\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Fieldset } from 'primereact/fieldset';\r\n\r\nimport { AnimeDataService } from '../../services/AnimeDataService';\r\nimport withAuth from '../../components/withAuth';\r\nimport { loadSelectedDataAction } from '../../store/actions/anime';\r\n\r\n\r\nfunction Anime(props) {\r\n\r\n    const [listaAnimes, setListaAnimes] = useState([]);\r\n    const [animeSelecionado, setAnimeSelecionado] = useState({});\r\n\r\n    const toast = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log('Foi desmontado');\r\n            setListaAnimes(null);\r\n            setAnimeSelecionado(null);\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        listarAnimes();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(\"Lista alterada\");\r\n        listarAnimes();\r\n    }, [listaAnimes])\r\n    \r\n\r\n    function listarAnimes() {\r\n        AnimeDataService.listarAnimes().then(response => {\r\n        setListaAnimes(response.data.animes);\r\n        }).catch(error => {\r\n            console.log(error.response.data)\r\n            toast.current.show({ severity: 'warn', summary: 'Aviso', detail: error.response.data.message, life: 3000 });\r\n        })\r\n    }\r\n\r\n    const novo = () => {\r\n        setAnimeSelecionado(null);\r\n        dispatch(loadSelectedDataAction(null));\r\n    }\r\n\r\n    const editar = (rowData) => {\r\n        console.log(rowData);\r\n        setAnimeSelecionado(rowData);\r\n        dispatch(loadSelectedDataAction(rowData));\r\n    }\r\n\r\n    const _delete = (rowData) => {\r\n        const index = listaAnimes.indexOf(rowData);\r\n        AnimeDataService._delete(rowData.id).then(response => {\r\n            toast.current.show({ severity: 'error', summary: 'Erro', detail: 'Anime ' + rowData.nome + ' excluído com sucesso!', life: 3000 });\r\n            let listaAnimesAux = listaAnimes;\r\n            listaAnimesAux.splice(index, 1);\r\n            console.log(listaAnimesAux);\r\n            setListaAnimes(listaAnimesAux);\r\n        }).catch(error => {\r\n            console.log(error.response.data)\r\n            toast.current.show({ severity: 'warn', summary: 'Aviso', detail: error.response.data.message, life: 3000 });\r\n        })\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <Link href=\"/anime/form\">\r\n                    <Button style={{ marginRight: '10px' }} icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => editar(rowData)} />\r\n                </Link>\r\n\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => _delete(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    const possuiManga = (atributte) => {\r\n        if (atributte) {\r\n            return 'Possui Mangá';\r\n        } return 'Não Possui Mangá';\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={toast} />\r\n            <Fieldset legend=\"Anime\">\r\n\r\n                <Link href=\"/anime/form\">\r\n                    <Button id='new-button' label=\"Novo\" onClick={() => novo({})} />\r\n                </Link>\r\n\r\n                <DataTable\r\n                    header=\"Animes Cadastrados\"\r\n                    value={listaAnimes}\r\n                    selectionMode=\"single\"\r\n                    selection={animeSelecionado}\r\n                    onSelectionChange={e => { setAnimeSelecionado(e.value) }}\r\n                    dataKey=\"id\">\r\n                    <Column field=\"nome\" header=\"Nome\"></Column>\r\n                    <Column field=\"temporada\" header=\"Temporada\"></Column>\r\n                    <Column field={e => possuiManga(e.possuiManga)} header=\"Possui mangá ?\"></Column>\r\n                    <Column body={actionBodyTemplate}></Column>\r\n                </DataTable>\r\n\r\n                <Link href=\"/\">\r\n                    <Button id='back-button' label=\"Voltar\" />\r\n                </Link>\r\n\r\n            </Fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withAuth(Anime);"]},"metadata":{},"sourceType":"module"}