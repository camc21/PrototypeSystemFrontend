{"ast":null,"code":"import _defineProperty from \"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\components\\\\withAuth.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// HOC/withAuth.jsx\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\"; // import verifyToken from \"services/verifyToken\";\n\nvar withAuth = function withAuth(WrappedComponent) {\n  var _s = $RefreshSig$();\n\n  return _s(function (props) {\n    _s();\n\n    var Router = useRouter();\n\n    var _useState = useState(false),\n        verified = _useState[0],\n        setVerified = _useState[1];\n\n    var pathname = Router;\n    useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accessToken, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              accessToken = localStorage.getItem(\"accessToken\"); // if no accessToken was found,then we redirect to \"/\" page.\n\n              if (!accessToken) {\n                Router.replace(\"/\");\n              } else {\n                // we call the api that verifies the token.\n                data = {\n                  verified: localStorage.getItem('acessToken')\n                };\n                /*await verifyToken(accessToken);*/\n                // if token was verified we set the state.\n\n                if (data.verified) {\n                  setVerified(data.verified);\n                } else {\n                  // If the token was fraud we first remove it from localStorage and then redirect to \"/\"\n                  localStorage.removeItem(\"accessToken\");\n                  Router.replace(\"/\");\n                }\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })), []);\n\n    if (verified) {\n      console.log(pathname);\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, _this);\n    } else {\n      console.log(pathname);\n      return null;\n    }\n  }, \"irrnzWYVzfxH8jqgFP57yP7xP7c=\", false, function () {\n    return [useRouter];\n  });\n};\n\nexport default withAuth;","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/components/withAuth.jsx"],"names":["useRouter","useEffect","useState","withAuth","WrappedComponent","props","Router","verified","setVerified","pathname","accessToken","localStorage","getItem","replace","data","removeItem","console","log"],"mappings":";;;;;;;;;;;;AAAA;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CACA;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,gBAAD,EAAsB;AAAA;;AACrC,YAAO,UAACC,KAAD,EAAW;AAAA;;AAChB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;;AADgB,oBAEgBE,QAAQ,CAAC,KAAD,CAFxB;AAAA,QAETK,QAFS;AAAA,QAECC,WAFD;;AAIhB,QAAMC,QAAQ,GAAGH,MAAjB;AAEAL,IAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACFS,cAAAA,WADE,GACYC,YAAY,CAACC,OAAb,CAAqB,aAArB,CADZ,EAER;;AACA,kBAAI,CAACF,WAAL,EAAkB;AAChBJ,gBAAAA,MAAM,CAACO,OAAP,CAAe,GAAf;AACD,eAFD,MAEO;AACL;AACMC,gBAAAA,IAFD,GAEQ;AAACP,kBAAAA,QAAQ,EAAEI,YAAY,CAACC,OAAb,CAAqB,YAArB;AAAX,iBAFR;AAEwD;AAC7D;;AACA,oBAAIE,IAAI,CAACP,QAAT,EAAmB;AACjBC,kBAAAA,WAAW,CAACM,IAAI,CAACP,QAAN,CAAX;AACD,iBAFD,MAEO;AACL;AACAI,kBAAAA,YAAY,CAACI,UAAb,CAAwB,aAAxB;AACAT,kBAAAA,MAAM,CAACO,OAAP,CAAe,GAAf;AACD;AACF;;AAhBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAiBN,EAjBM,CAAT;;AAmBA,QAAIN,QAAJ,EAAc;AACZS,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,0BAAO,QAAC,gBAAD,oBAAsBJ,KAAtB;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAHD,MAGO;AACLW,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,aAAO,IAAP;AACD;AACF,GAhCD;AAAA,YACiBT,SADjB;AAAA;AAiCD,CAlCD;;AAoCA,eAAeG,QAAf","sourcesContent":["// HOC/withAuth.jsx\r\nimport { useRouter } from \"next/router\";\r\nimport { useEffect, useState } from \"react\";\r\n// import verifyToken from \"services/verifyToken\";\r\n\r\nconst withAuth = (WrappedComponent) => {\r\n  return (props) => {\r\n    const Router = useRouter();\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const pathname = Router;\r\n\r\n    useEffect(async () => {\r\n      const accessToken = localStorage.getItem(\"accessToken\");\r\n      // if no accessToken was found,then we redirect to \"/\" page.\r\n      if (!accessToken) {\r\n        Router.replace(\"/\");\r\n      } else {\r\n        // we call the api that verifies the token.\r\n        const data = {verified: localStorage.getItem('acessToken')}; /*await verifyToken(accessToken);*/\r\n        // if token was verified we set the state.\r\n        if (data.verified) {\r\n          setVerified(data.verified);\r\n        } else {\r\n          // If the token was fraud we first remove it from localStorage and then redirect to \"/\"\r\n          localStorage.removeItem(\"accessToken\");\r\n          Router.replace(\"/\");\r\n        }\r\n      }\r\n    }, []);\r\n\r\n    if (verified) {\r\n      console.log(pathname);\r\n      return <WrappedComponent {...props} />;\r\n    } else {\r\n      console.log(pathname);\r\n      return null;\r\n    }\r\n  };\r\n};\r\n\r\nexport default withAuth;"]},"metadata":{},"sourceType":"module"}