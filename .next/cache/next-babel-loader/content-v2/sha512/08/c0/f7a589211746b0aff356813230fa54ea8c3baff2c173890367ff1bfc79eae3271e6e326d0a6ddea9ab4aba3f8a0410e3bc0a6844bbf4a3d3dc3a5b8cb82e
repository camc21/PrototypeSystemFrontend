{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { LOAD_SELECTED_DATA, LOAD_ANIME_LIST } from \"../../actions\";\nconst initialStatePaginator = {\n  content: null,\n  empty: null,\n  first: null,\n  last: null,\n  number: null,\n  numberOfElements: null,\n  size: null,\n  totalElements: null,\n  totalPages: null\n};\nconst initialStateAnimeSelected = {\n  id: null,\n  nome: null,\n  temporada: null,\n  possuiManga: null\n};\n\nconst reducer = action => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case LOAD_SELECTED_DATA:\n      if (action.payload) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          animeSelected: action.payload\n        });\n      }\n\n      return initialStateAnimeSelected;\n\n    case LOAD_ANIME_LIST:\n      if (action.payload) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          paginator: action.payload\n        });\n      }\n\n      return initialStatePaginator;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/store/reducers/anime/index.jsx"],"names":["HYDRATE","LOAD_SELECTED_DATA","LOAD_ANIME_LIST","initialStatePaginator","content","empty","first","last","number","numberOfElements","size","totalElements","totalPages","initialStateAnimeSelected","id","nome","temporada","possuiManga","reducer","action","type","state","payload","animeSelected","paginator"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,eAApD;AAEA,MAAMC,qBAAqB,GAAG;AAACC,EAAAA,OAAO,EAAE,IAAV;AAAgBC,EAAAA,KAAK,EAAE,IAAvB;AAA6BC,EAAAA,KAAK,EAAE,IAApC;AAA0CC,EAAAA,IAAI,EAAE,IAAhD;AAAsDC,EAAAA,MAAM,EAAE,IAA9D;AAAoEC,EAAAA,gBAAgB,EAAE,IAAtF;AAA4FC,EAAAA,IAAI,EAAE,IAAlG;AAAwGC,EAAAA,aAAa,EAAE,IAAvH;AAA6HC,EAAAA,UAAU,EAAE;AAAzI,CAA9B;AACA,MAAMC,yBAAyB,GAAG;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE,IAAlB;AAAwBC,EAAAA,SAAS,EAAE,IAAnC;AAAyCC,EAAAA,WAAW,EAAE;AAAtD,CAAlC;;AAEA,MAAMC,OAAO,GAAIC,MAAD,IAAY;AAE1B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKpB,OAAL;AACE,6CAAYqB,KAAZ,GAAsBF,MAAM,CAACG,OAA7B;;AACF,SAAKrB,kBAAL;AACE,UAAGkB,MAAM,CAACG,OAAV,EAAkB;AAChB,+CACKD,KADL;AAEEE,UAAAA,aAAa,EAAEJ,MAAM,CAACG;AAFxB;AAID;;AACD,aAAOT,yBAAP;;AAEF,SAAKX,eAAL;AACE,UAAGiB,MAAM,CAACG,OAAV,EAAkB;AAChB,+CACKD,KADL;AAEEG,UAAAA,SAAS,EAAEL,MAAM,CAACG;AAFpB;AAID;;AACD,aAAOnB,qBAAP;;AACF;AACE,aAAOkB,KAAP;AArBJ;AAuBD,CAzBD;;AA2BA,eAAeH,OAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport { LOAD_SELECTED_DATA, LOAD_ANIME_LIST } from \"../../actions\";\r\n\r\nconst initialStatePaginator = {content: null, empty: null, first: null, last: null, number: null, numberOfElements: null, size: null, totalElements: null, totalPages: null};\r\nconst initialStateAnimeSelected = { id: null, nome: null, temporada: null, possuiManga: null }\r\n\r\nconst reducer = (action) => {\r\n\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      return { ...state, ...action.payload };\r\n    case LOAD_SELECTED_DATA:\r\n      if(action.payload){\r\n        return {\r\n          ...state,\r\n          animeSelected: action.payload\r\n        }\r\n      }\r\n      return initialStateAnimeSelected\r\n      \r\n    case LOAD_ANIME_LIST:\r\n      if(action.payload){\r\n        return {\r\n          ...state,\r\n          paginator: action.payload\r\n        }\r\n      }\r\n      return initialStatePaginator\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}