{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { SHOW_BUTTON_LOGIN_LOGOUT } from \"../../actions\";\nconst initialState = {\n  showLoginLogout: true\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    // case HYDRATE:\n    //   return { ...state, ...action.payload.showLoginlogout };\n    case SHOW_BUTTON_LOGIN_LOGOUT:\n      console.log(state.showLoginlogout);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showLoginlogout: state.showLoginlogout\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/store/reducers/login_logout/index.jsx"],"names":["HYDRATE","SHOW_BUTTON_LOGIN_LOGOUT","initialState","showLoginLogout","reducer","state","action","type","console","log","showLoginlogout"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,wBAAT,QAAyC,eAAzC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE;AADE,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA;AACA,SAAKN,wBAAL;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,eAAlB;AACA,6CACKL,KADL;AAEEK,QAAAA,eAAe,EAAEL,KAAK,CAACK;AAFzB;;AAIJ;AACE,aAAOL,KAAP;AAVJ;AAYD,CAbD;;AAeA,eAAeD,OAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport { SHOW_BUTTON_LOGIN_LOGOUT } from \"../../actions\";\r\n\r\nconst initialState = {\r\n  showLoginLogout: true,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // case HYDRATE:\r\n    //   return { ...state, ...action.payload.showLoginlogout };\r\n    case SHOW_BUTTON_LOGIN_LOGOUT:\r\n        console.log(state.showLoginlogout);\r\n        return {\r\n          ...state,\r\n          showLoginlogout: state.showLoginlogout\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}