{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { LOAD_USER_ENTITY_SELECTED, LOAD_USUARIO_LIST } from \"../../actions\";\nconst initialState = {\n  id: undefined,\n  nome: \"\",\n  temporada: 0,\n  possuiManga: false\n};\n\nconst userEntitySelectedReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_USUARIO_SELECTED:\n      if (action.payload) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userEntitySelected: action.payload\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userEntitySelected: initialState\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default userEntitySelectedReducer;","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/store/reducers/userEntity/userEntitySelectedReducer.jsx"],"names":["LOAD_USER_ENTITY_SELECTED","LOAD_USUARIO_LIST","initialState","id","undefined","nome","temporada","possuiManga","userEntitySelectedReducer","state","action","type","LOAD_USUARIO_SELECTED","payload","userEntitySelected"],"mappings":";;;;;;AAAA,SAASA,yBAAT,EAAoCC,iBAApC,QAA6D,eAA7D;AAGA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,EAAE,EAAEC,SAAN;AAAiBC,EAAAA,IAAI,EAAE,EAAvB;AAA2BC,EAAAA,SAAS,EAAE,CAAtC;AAAyCC,EAAAA,WAAW,EAAE;AAAtD,CAArB;;AAIA,MAAMC,yBAAyB,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAElE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKC,qBAAL;AACE,UAAGF,MAAM,CAACG,OAAV,EAAkB;AAChB,+CACKJ,KADL;AAEEK,UAAAA,kBAAkB,EAAEJ,MAAM,CAACG;AAF7B;AAID,OALD,MAKO;AACL,+CACKJ,KADL;AAEEK,UAAAA,kBAAkB,EAAEZ;AAFtB;AAID;;AAEH;AACE,aAAOO,KAAP;AAhBJ;AAkBD,CApBD;;AAsBA,eAAeD,yBAAf","sourcesContent":["import { LOAD_USER_ENTITY_SELECTED, LOAD_USUARIO_LIST } from \"../../actions\";\r\n\r\n\r\nconst initialState = { id: undefined, nome: \"\", temporada: 0, possuiManga: false }\r\n\r\n\r\n\r\nconst userEntitySelectedReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case LOAD_USUARIO_SELECTED:\r\n      if(action.payload){\r\n        return {\r\n          ...state,\r\n          userEntitySelected: action.payload\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          userEntitySelected: initialState\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userEntitySelectedReducer;"]},"metadata":{},"sourceType":"module"}