{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\login\\\\index.jsx\";\n//imports api\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSelector, useDispatch } from \"react-redux\"; //imports styles\n\nimport styles from '../../styles/login.module.css'; //imports bibliotecas\n\nimport { InputText } from 'primereact/inputtext';\nimport { Password } from 'primereact/password';\nimport { Button } from 'primereact/button';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Alert } from 'reactstrap';\nimport { Toast } from \"primereact/toast\"; //imports services\n\nimport { LoginDataService } from '../../services/LoginDataService'; //actions\n\nimport { showButtonLoginAction } from '../../store/actions/login_logout';\nimport { localStorageManager } from '@chakra-ui/color-mode';\n\nfunction Login(props) {\n  const dispatch = useDispatch();\n  const toast = useRef(null);\n  const router = useRouter();\n  const {\n    0: login,\n    1: setLogin\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: loadingCredentials,\n    1: setLoadingCredentials\n  } = useState(false);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  useEffect(() => {\n    if (router.asPath === '/login' && localStorage.getItem('accessToken') !== null) {\n      router.push('/');\n    }\n  }, []);\n\n  const logIn = () => {\n    setLoadingCredentials(true);\n\n    if (login !== \"\" && password !== \"\") {\n      console.log(\"passou do if\");\n      LoginDataService.logIn(login, password).then(response => {\n        console.log(response.data);\n\n        if (response.data.code > 300) {\n          toast.current.show({\n            severity: \"warn\",\n            summary: \"Aviso\",\n            detail: response.data.message,\n            life: 3000\n          });\n          setVisible(true);\n          setLoadingCredentials(false);\n        } else {\n          setVisible(false);\n          localStorage.setItem('accessToken', 'Bearer ' + response.data.token);\n          setLoadingCredentials(false);\n          dispatch(showButtonLoginAction(false));\n          router.push('/');\n        }\n      });\n    } else {\n      toast.current.show({\n        severity: \"warn\",\n        summary: \"Aviso\",\n        detail: \"Preencha os campos, Login e Senha\",\n        life: 3000\n      });\n      setLoadingCredentials(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.layout_login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        ref: toast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.layout_login_no_messages,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.box_login,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputText, {\n            value: login,\n            onChange: e => setLogin(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Password, {\n            className: styles.password,\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            toggleMask: true,\n            autoComplete: \"new-password\",\n            weakLabel: \"Fraca\",\n            mediumLabel: \"M\\xE9dia\",\n            strongLabel: \"Forte\",\n            promptLabel: \"Por favor entre com a senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Login\",\n            onClick: logIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), loadingCredentials && /*#__PURE__*/_jsxDEV(ProgressSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Login;","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/login/index.jsx"],"names":["React","useState","useEffect","useRef","useRouter","useSelector","useDispatch","styles","InputText","Password","Button","ProgressSpinner","Alert","Toast","LoginDataService","showButtonLoginAction","localStorageManager","Login","props","dispatch","toast","router","login","setLogin","password","setPassword","loadingCredentials","setLoadingCredentials","visible","setVisible","asPath","localStorage","getItem","push","logIn","console","log","then","response","data","code","current","show","severity","summary","detail","message","life","setItem","token","layout_login","layout_login_no_messages","box_login","e","target","value"],"mappings":"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","sourcesContent":["//imports api\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useRouter } from 'next/router'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n//imports styles\r\nimport styles from '../../styles/login.module.css'\r\n\r\n//imports bibliotecas\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { Button } from 'primereact/button';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Alert } from 'reactstrap';\r\nimport { Toast } from \"primereact/toast\";\r\n\r\n//imports services\r\nimport { LoginDataService } from '../../services/LoginDataService';\r\n\r\n//actions\r\nimport { showButtonLoginAction } from '../../store/actions/login_logout';\r\nimport { localStorageManager } from '@chakra-ui/color-mode';\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useRef(null);\r\n    const router = useRouter()\r\n\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loadingCredentials, setLoadingCredentials] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (router.asPath === '/login' && localStorage.getItem('accessToken') !== null) {\r\n            router.push('/');\r\n        }\r\n    }, [])\r\n\r\n    const logIn = () => {\r\n        setLoadingCredentials(true);\r\n        if (login !== \"\" && password !== \"\") {\r\n            console.log(\"passou do if\");\r\n            LoginDataService.logIn(login, password).then(response => {\r\n                console.log(response.data);\r\n                if (response.data.code > 300) {\r\n                    toast.current.show({ severity: \"warn\", summary: \"Aviso\", detail: response.data.message, life: 3000 });\r\n                    setVisible(true);\r\n                    setLoadingCredentials(false);\r\n                } else {\r\n                    setVisible(false);\r\n                    localStorage.setItem('accessToken', 'Bearer ' + response.data.token);\r\n                    setLoadingCredentials(false);\r\n                    dispatch(showButtonLoginAction(false));\r\n                    router.push('/');\r\n                }\r\n            });\r\n        } else {\r\n            toast.current.show({ severity: \"warn\", summary: \"Aviso\", detail: \"Preencha os campos, Login e Senha\", life: 3000 });\r\n            setLoadingCredentials(false);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={styles.layout_login}>\r\n            <form autoComplete=\"off\">\r\n                <Toast ref={toast} />\r\n                <div className={styles.layout_login_no_messages}>\r\n                    <div className={styles.box_login}>\r\n                        <h5>Login</h5>\r\n\r\n                        <InputText value={login} onChange={(e) => setLogin(e.target.value)} />\r\n\r\n                        <h5>Senha</h5>\r\n                        <Password\r\n                            className={styles.password}\r\n                            value={password} onChange={(e) => setPassword(e.target.value)}\r\n                            toggleMask\r\n                            autoComplete=\"new-password\"\r\n                            weakLabel=\"Fraca\"\r\n                            mediumLabel=\"Média\"\r\n                            strongLabel=\"Forte\"\r\n                            promptLabel=\"Por favor entre com a senha\"\r\n                        />\r\n\r\n                        <Button label=\"Login\" onClick={logIn} />\r\n                        {loadingCredentials &&\r\n                            <ProgressSpinner />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (Login)"]},"metadata":{},"sourceType":"module"}