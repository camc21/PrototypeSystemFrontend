{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\login\\\\index.jsx\",\n    _s = $RefreshSig$();\n\n//imports api\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { useSelector, useDispatch } from \"react-redux\"; //imports styles\n\nimport styles from '../../styles/login.module.css'; //imports bibliotecas\n\nimport { InputText } from 'primereact/inputtext';\nimport { Password } from 'primereact/password';\nimport { Button } from 'primereact/button';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Alert } from 'reactstrap';\nimport { Toast } from \"primereact/toast\"; //imports services\n\nimport { LoginDataService } from '../../services/LoginDataService'; //actions\n\nimport { showButtonLoginAction } from '../../store/actions/login_logout';\nimport { localStorageManager } from '@chakra-ui/color-mode';\n\nfunction Login(props) {\n  _s();\n\n  var dispatch = useDispatch();\n  var toast = useRef(null);\n  var router = useRouter();\n\n  var _useState = useState(''),\n      login = _useState[0],\n      setLogin = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      loadingCredentials = _useState3[0],\n      setLoadingCredentials = _useState3[1];\n\n  var _useState4 = useState(false),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState({}),\n      dadosErroLogin = _useState5[0],\n      setDadosErroLogin = _useState5[1];\n\n  useEffect(function () {\n    if (router.asPath === '/login' && localStorage.getItem('accessToken') !== null) {\n      router.push('/');\n    }\n  }, []);\n\n  var logIn = function logIn() {\n    setLoadingCredentials(true);\n\n    if (login && password) {\n      LoginDataService.logIn(login, password).then(function (response) {\n        if (response.data.code >= 300) {\n          setDadosErroLogin(response.data);\n          toast.current.show({\n            severity: \"warn\",\n            summary: \"Aviso\",\n            detail: response.data.message,\n            life: 3000\n          });\n          setVisible(true);\n          setLoadingCredentials(false);\n          toast.current.show({\n            severity: \"warn\",\n            summary: \"Aviso\",\n            detail: \"Preencha os campos, Login e Senha\",\n            life: 3000\n          });\n        } else {\n          setVisible(false);\n          localStorage.setItem('accessToken', 'Bearer ' + response.data.token);\n          setLoadingCredentials(false);\n          dispatch(showButtonLoginAction(false));\n          router.push('/');\n        }\n      });\n    } else {\n      toast.current.show({\n        severity: \"warn\",\n        summary: \"Aviso\",\n        detail: \"Preencha os campos, Login e Senha\",\n        life: 3000\n      });\n      setLoadingCredentials(false);\n    }\n  }; // const onDismiss = () => setVisible(false);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.layout_login,\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.layout_login_no_messages,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.box_login,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          value: login,\n          onChange: function onChange(e) {\n            return setLogin(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Password, {\n          className: styles.password,\n          value: password,\n          onChange: function onChange(e) {\n            return setPassword(e.target.value);\n          },\n          toggleMask: true,\n          autoComplete: \"new-password\",\n          weakLabel: \"Fraca\",\n          mediumLabel: \"M\\xE9dia\",\n          strongLabel: \"Forte\",\n          promptLabel: \"Por favor entre com a senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Login\",\n          onClick: logIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), loadingCredentials && /*#__PURE__*/_jsxDEV(ProgressSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"Z/zVb67PfI+ILfs/q5z/B6ORzmY=\", false, function () {\n  return [useDispatch, useRouter];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/login/index.jsx"],"names":["React","useState","useEffect","useRef","useRouter","useSelector","useDispatch","styles","InputText","Password","Button","ProgressSpinner","Alert","Toast","LoginDataService","showButtonLoginAction","localStorageManager","Login","props","dispatch","toast","router","login","setLogin","password","setPassword","loadingCredentials","setLoadingCredentials","visible","setVisible","dadosErroLogin","setDadosErroLogin","asPath","localStorage","getItem","push","logIn","then","response","data","code","current","show","severity","summary","detail","message","life","setItem","token","layout_login","layout_login_no_messages","box_login","e","target","value"],"mappings":"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","sourcesContent":["//imports api\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useRouter } from 'next/router'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n//imports styles\r\nimport styles from '../../styles/login.module.css'\r\n\r\n//imports bibliotecas\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Password } from 'primereact/password';\r\nimport { Button } from 'primereact/button';\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { Alert } from 'reactstrap';\r\nimport { Toast } from \"primereact/toast\";\r\n\r\n//imports services\r\nimport { LoginDataService } from '../../services/LoginDataService';\r\n\r\n//actions\r\nimport { showButtonLoginAction } from '../../store/actions/login_logout';\r\nimport { localStorageManager } from '@chakra-ui/color-mode';\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const toast = useRef(null);\r\n    const router = useRouter()\r\n\r\n    const [login, setLogin] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loadingCredentials, setLoadingCredentials] = useState(false);\r\n    const [visible, setVisible] = useState(false);\r\n    const [dadosErroLogin, setDadosErroLogin] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (router.asPath === '/login' && localStorage.getItem('accessToken') !== null) {\r\n            router.push('/');\r\n        }\r\n    }, [])\r\n\r\n    const logIn = () => {\r\n        setLoadingCredentials(true);\r\n        if (login && password) {\r\n            LoginDataService.logIn(login, password).then(response => {\r\n                if (response.data.code >= 300) {\r\n                    setDadosErroLogin(response.data);\r\n                    toast.current.show({ severity: \"warn\", summary: \"Aviso\", detail: response.data.message, life: 3000 });\r\n                    setVisible(true);\r\n                    setLoadingCredentials(false);\r\n                    toast.current.show({ severity: \"warn\", summary: \"Aviso\", detail: \"Preencha os campos, Login e Senha\", life: 3000 });\r\n                } else {\r\n                    setVisible(false);\r\n                    localStorage.setItem('accessToken', 'Bearer ' + response.data.token);\r\n                    setLoadingCredentials(false);\r\n                    dispatch(showButtonLoginAction(false));\r\n                    router.push('/');\r\n                }\r\n            });\r\n        } else {\r\n            toast.current.show({ severity: \"warn\", summary: \"Aviso\", detail: \"Preencha os campos, Login e Senha\", life: 3000 });\r\n            setLoadingCredentials(false);\r\n        }\r\n\r\n    }\r\n\r\n    // const onDismiss = () => setVisible(false);\r\n\r\n    return (\r\n        <div className={styles.layout_login}>\r\n            <Toast ref={toast} />\r\n\r\n            {/* <div className={styles.box_messages}>\r\n                <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>\r\n                    {dadosErroLogin.message}\r\n                </Alert>\r\n            </div> */}\r\n            <div className={styles.layout_login_no_messages}>\r\n                <div className={styles.box_login}>\r\n                    <h5>Login</h5>\r\n\r\n                    <InputText value={login} onChange={(e) => setLogin(e.target.value)} />\r\n\r\n                    <h5>Senha</h5>\r\n                    <Password\r\n                        className={styles.password}\r\n                        value={password} onChange={(e) => setPassword(e.target.value)}\r\n                        toggleMask\r\n                        autoComplete=\"new-password\"\r\n                        weakLabel=\"Fraca\"\r\n                        mediumLabel=\"Média\"\r\n                        strongLabel=\"Forte\"\r\n                        promptLabel=\"Por favor entre com a senha\"\r\n                    />\r\n\r\n                    <Button label=\"Login\" onClick={logIn} />\r\n                    {loadingCredentials &&\r\n                        <ProgressSpinner />\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default (Login)"]},"metadata":{},"sourceType":"module"}