{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport Login from '../pages/login';\nimport Anime from '../pages/anime';\nimport { LoginDataService } from '../services/LoginDataService';\n\nconst Index = () => {\n  useEffect(() => {\n    if (!LoginDataService.isLogged) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Anime, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    }\n  }, []);\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/index.js"],"names":["React","useState","useRef","useEffect","Login","Anime","LoginDataService","Index","isLogged"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhBJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACG,gBAAgB,CAACE,QAArB,EAA8B;AAC1B,0BACI;AAAA,+BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAKH,KAND,MAMO;AACH,0BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ,GAZQ,EAYN,EAZM,CAAT;AAaH,CAfD;;AAiBA,eAAeD,KAAf","sourcesContent":["\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport Login from '../pages/login'\r\nimport Anime from '../pages/anime'\r\n\r\nimport { LoginDataService } from '../services/LoginDataService';\r\n\r\nconst Index = () => {\r\n\r\n    useEffect(() => {\r\n        if(!LoginDataService.isLogged){\r\n            return(\r\n                <>\r\n                    <Login />\r\n                </>\r\n            )\r\n        } else {\r\n            return(\r\n                <Anime />\r\n            )\r\n        }\r\n    }, []);\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}