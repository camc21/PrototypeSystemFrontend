{"ast":null,"code":"import axios from \"axios\";\nimport { useRouter } from 'next/router';\nconst baseUrl = `http://localhost:8081`;\nexport const LoginDataService = {\n  logIn,\n  logOut,\n  isLogged\n};\n\nconst logIn = (username, password) => {\n  let data = {\n    username,\n    password\n  };\n  return axios.post(baseUrl + '/auth/signin', data, {});\n};\n\nconst logOut = () => {\n  const router = useRouter();\n  localStorage.removeItem('accessToken');\n  router.push('/');\n};\n\nconst isLogged = () => {\n  if (localStorage.getItem('accessToken')) {\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/services/LoginDataService.jsx"],"names":["axios","useRouter","baseUrl","LoginDataService","logIn","logOut","isLogged","username","password","data","post","router","localStorage","removeItem","push","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,OAAO,GAAI,uBAAjB;AAEE,OAAO,MAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,KAD8B;AAE9BC,EAAAA,MAF8B;AAG9BC,EAAAA;AAH8B,CAAzB;;AAMP,MAAMF,KAAK,GAAG,CAACG,QAAD,EAAWC,QAAX,KAAwB;AAClC,MAAIC,IAAI,GAAG;AAACF,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAX;AACF,SAAOR,KAAK,CAACU,IAAN,CAAWR,OAAO,GAAC,cAAnB,EAAmCO,IAAnC,EAAyC,EAAzC,CAAP;AACD,CAHD;;AAKA,MAAMJ,MAAM,GAAG,MAAM;AACnB,QAAMM,MAAM,GAAGV,SAAS,EAAxB;AACAW,EAAAA,YAAY,CAACC,UAAb,CAAwB,aAAxB;AACAF,EAAAA,MAAM,CAACG,IAAP,CAAY,GAAZ;AACD,CAJD;;AAMA,MAAMR,QAAQ,GAAG,MAAM;AACrB,MAAGM,YAAY,CAACG,OAAb,CAAqB,aAArB,CAAH,EAAuC;AACrC,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CALD","sourcesContent":["import axios from \"axios\";\r\nimport { useRouter } from 'next/router'\r\n\r\nconst baseUrl = `http://localhost:8081`;\r\n\r\n  export const LoginDataService = {\r\n    logIn,\r\n    logOut,\r\n    isLogged,\r\n  };\r\n\r\n  const logIn = (username, password) => {\r\n      let data = {username, password}\r\n    return axios.post(baseUrl+'/auth/signin', data, {})\r\n  }\r\n\r\n  const logOut = () => {\r\n    const router = useRouter();\r\n    localStorage.removeItem('accessToken');\r\n    router.push('/')\r\n  }\r\n\r\n  const isLogged = () => {\r\n    if(localStorage.getItem('accessToken')){\r\n      return true;\r\n    }\r\n    return false;\r\n  }"]},"metadata":{},"sourceType":"module"}