{"ast":null,"code":"var _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\n\nvar _classCallCheck = require(\"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\components\\\\navbar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar NavBar = /*#__PURE__*/function (_React$Component) {\n  \"use strict\";\n\n  _inherits(NavBar, _React$Component);\n\n  var _super = _createSuper(NavBar);\n\n  function NavBar(props) {\n    var _this;\n\n    _classCallCheck(this, NavBar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      sideBar: false\n    };\n    _this.handleSidebar = _this.handleSidebar.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NavBar, [{\n    key: \"handleSidebar\",\n    value: function handleSidebar() {\n      this.setState({\n        sideBar: !this.state.sideBar\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"header\", {\n          className: \"header\",\n          children: /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"div\", {\n            className: \"navContainer\",\n            children: [/*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"span\", {\n              className: \"logo\",\n              style: {\n                color: \"#fff\",\n                fontStyle: \"italic\",\n                fontWeight: \"400\"\n              },\n              children: \"React Navigation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"nav\", {\n              children: /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"ul\", {\n                className: \"mainNav\",\n                style: this.state.sideBar ? {\n                  transform: \"translateX(0)\"\n                } : null,\n                children: [/*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"a\", {\n                    className: \"mainNavLink\",\n                    href: \"#\",\n                    children: \"Dummy 1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"a\", {\n                    className: \"mainNavLink\",\n                    href: \"#\",\n                    children: \"Dummy 2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"a\", {\n                    className: \"mainNavLink\",\n                    href: \"#\",\n                    children: \"Dummy 4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"button\", {\n              onClick: this.handleSidebar,\n              className: \"navToggle \".concat(this.state.sideBar ? \"open\" : null),\n              children: [/*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"div\", {\n              onClick: this.handleSidebar.bind(this),\n              className: \"overlay \".concat(this.state.sideBar ? \"open\" : \"\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(\"div\", {\n          className: \"wrapper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return NavBar;\n}(React.Component);\n\nReactDOM.render( /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(NavBar, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/components/navbar.js"],"names":["NavBar","props","state","sideBar","handleSidebar","bind","setState","color","fontStyle","fontWeight","transform","React","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;IAAMA,M;;;;;;;AACJ,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAE;AADA,KAAX;AAIA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AANgB;AAOjB;;;;oCAEc;AACb,WAAKC,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAG,CAAC,KAAKD,KAAL,CAAWC;AADV,OAAd;AAGD;;;6BAEO;AACN,0BACE;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAuB,cAAA,KAAK,EAAE;AAACI,gBAAAA,KAAK,EAAC,MAAP;AAAiBC,gBAAAA,SAAS,EAAC,QAA3B;AAAsCC,gBAAAA,UAAU,EAAC;AAAjD,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCACE;AACE,gBAAA,SAAS,EAAC,SADZ;AAEE,gBAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,OAAX,GAAqB;AAAEO,kBAAAA,SAAS,EAAE;AAAb,iBAArB,GAAsD,IAF/D;AAAA,wCAIE;AAAA,yCACE;AAAG,oBAAA,SAAS,EAAC,aAAb;AAA2B,oBAAA,IAAI,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAJF,eASE;AAAA,yCACE;AAAG,oBAAA,SAAS,EAAC,aAAb;AAA2B,oBAAA,IAAI,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBATF,eAcE;AAAA,yCACE;AAAG,oBAAA,SAAS,EAAC,aAAb;AAA2B,oBAAA,IAAI,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAwBE;AACE,cAAA,OAAO,EAAI,KAAKN,aADlB;AAEE,cAAA,SAAS,sBAAe,KAAKF,KAAL,CAAWC,OAAX,GAAqB,MAArB,GAA8B,IAA7C,CAFX;AAAA,sCAGE;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBF,eA+BE;AACE,cAAA,OAAO,EAAE,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CADX;AAEE,cAAA,SAAS,oBAAa,KAAKH,KAAL,CAAWC,OAAX,GAAqB,MAArB,GAA8B,EAA3C;AAFX;AAAA;AAAA;AAAA;AAAA,oBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAuCE;AAAK,UAAA,SAAS,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA4CD;;;;EA7DkBQ,KAAK,CAACC,S;;AAsE3BC,QAAQ,CAACC,MAAT,eAAgB,2BAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EACgBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADhB","sourcesContent":["class NavBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      sideBar: false\r\n    }\r\n\r\n    this.handleSidebar = this.handleSidebar.bind(this);\r\n  }\r\n\r\n  handleSidebar(){\r\n    this.setState({\r\n      sideBar : !this.state.sideBar\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <header className=\"header\">\r\n          <div className=\"navContainer\">\r\n            <span className=\"logo\" style={{color:\"#fff\"  , fontStyle:\"italic\" , fontWeight:\"400\"}}>React Navigation</span>\r\n            <nav>\r\n              <ul\r\n                className=\"mainNav\"\r\n                style={this.state.sideBar ? { transform: \"translateX(0)\" } : null}\r\n                >\r\n                <li>\r\n                  <a className=\"mainNavLink\" href=\"#\">\r\n                    Dummy 1\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"mainNavLink\" href=\"#\">\r\n                    Dummy 2\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"mainNavLink\" href=\"#\">\r\n                    Dummy 4\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <button\r\n              onClick = {this.handleSidebar}\r\n              className={`navToggle ${this.state.sideBar ? \"open\" : null}`}>\r\n              <span />\r\n              <span />\r\n              <span />\r\n            </button>\r\n            <div\r\n              onClick={this.handleSidebar.bind(this)}\r\n              className={`overlay ${this.state.sideBar ? \"open\" : \"\"}`}\r\n              />\r\n          </div>\r\n        </header>\r\n        <div className =\"wrapper\"></div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(<NavBar/> ,\r\n                document.getElementById('root'));"]},"metadata":{},"sourceType":"script"}