{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\anime\\\\form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { Fieldset } from 'primereact/fieldset';\nimport { InputText } from 'primereact/inputtext';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport withAuth from '../../components/withAuth';\nimport 'primeflex/primeflex.css';\nimport { AnimeDataService } from '../../services/AnimeDataService';\n\nfunction AnimeForm(props) {\n  _s();\n\n  var animeSelectedRedux = useSelector(function (state) {\n    return state.animeReducer.animeSelected;\n  });\n\n  var _useState = useState({\n    nome: undefined,\n    possuiManga: false,\n    temporada: undefined\n  }),\n      anime = _useState[0],\n      setAnime = _useState[1];\n\n  var toast = useRef(null);\n  var router = useRouter();\n  useEffect(function () {\n    if (animeSelectedRedux) {\n      setAnime({\n        id: animeSelectedRedux.id,\n        nome: animeSelectedRedux.nome,\n        possuiManga: animeSelectedRedux.possuiManga,\n        temporada: animeSelectedRedux.temporada\n      });\n    }\n  }, []);\n\n  function _save() {\n    var anime = {\n      id: animeSelectedRedux.id,\n      nome: nome,\n      possuiManga: possuiManga,\n      temporada: Number(temporada)\n    };\n\n    if (!anime.id) {\n      AnimeDataService._post(anime).then(function (response) {\n        toast.current.show({\n          severity: 'success',\n          summary: 'Sucesso',\n          detail: 'Registro criado com sucesso!',\n          life: 3000\n        });\n        setTimeout(function () {\n          console.log('EXECUTADO POST');\n          router.push('/anime');\n        }, 3000);\n      });\n    } else {\n      AnimeDataService._put(anime).then(function (response) {\n        toast.current.show({\n          severity: 'success',\n          summary: 'Sucesso',\n          detail: 'Registro alterado com sucesso!',\n          life: 3000\n        });\n        setTimeout(function () {\n          console.log('EXECUTADO PUT');\n          router.push('/anime');\n        }, 3000);\n      });\n    }\n  }\n\n  function onChangeNome(nome) {\n    console.log(nome);\n    var animeAux = anime;\n    animeAux.nome = nome;\n    setAnime(anime);\n  }\n\n  function onChangeTemporada(temporada) {\n    var animeAux = anime;\n    animeAux.temporada = temporada;\n    setAnime(anime);\n  }\n\n  function onChangePossuiManga(possuiManga) {\n    var animeAux = anime;\n    animeAux.possuiManga = possuiManga;\n    setAnime(anime);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n      legend: \"Anime Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nome\",\n            className: \"p-col-12 p-md-2\",\n            children: \"Nome: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-10\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"nome\",\n              type: \"text\",\n              value: anime.nome,\n              onChange: function onChange(e) {\n                return onChangeNome(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"temporada\",\n            className: \"p-col-12 p-md-2\",\n            children: \"Temporada:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-10\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"temporada\",\n              type: \"text\",\n              value: anime.temporada,\n              onChange: function onChange(e) {\n                return onChangeTemporada(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field-checkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              inputId: \"possuiManga\",\n              onChange: function onChange(e) {\n                return onChangePossuiManga(e.checked);\n              },\n              checked: anime.possuiManga\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"possuiManga\",\n              children: \"Possui mang\\xE1 ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"back-button\",\n          style: {\n            marginRight: '15px'\n          },\n          label: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Salvar\",\n        onClick: function onClick() {\n          return _save();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AnimeForm, \"t5Lo8SgvJMLO8owoRHmNCaBBPaU=\", false, function () {\n  return [useSelector, useRouter];\n});\n\n_c = AnimeForm;\nexport default _c2 = withAuth(AnimeForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnimeForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/anime/form.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Link","useRouter","Fieldset","InputText","Checkbox","Button","Toast","withAuth","AnimeDataService","AnimeForm","props","animeSelectedRedux","state","animeReducer","animeSelected","nome","undefined","possuiManga","temporada","anime","setAnime","toast","router","id","_save","Number","_post","then","response","current","show","severity","summary","detail","life","setTimeout","console","log","push","_put","onChangeNome","animeAux","onChangeTemporada","onChangePossuiManga","e","target","value","checked","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\n\r\nimport { Fieldset } from 'primereact/fieldset';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\n\r\n\r\nimport withAuth from '../../components/withAuth';\r\n\r\nimport 'primeflex/primeflex.css';\r\n\r\nimport { AnimeDataService } from '../../services/AnimeDataService';\r\n\r\n\r\n\r\nfunction AnimeForm(props) {\r\n\r\n    const animeSelectedRedux = useSelector((state) => state.animeReducer.animeSelected);\r\n\r\n    const [anime, setAnime] = useState({nome:  undefined, possuiManga: false, temporada: undefined});\r\n\r\n    const toast = useRef(null);\r\n\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        if(animeSelectedRedux){\r\n            setAnime({id: animeSelectedRedux.id, nome:  animeSelectedRedux.nome, possuiManga: animeSelectedRedux.possuiManga, temporada: animeSelectedRedux.temporada});\r\n        }\r\n    }, [])\r\n    \r\n    \r\n\r\n    function _save() {\r\n        const anime = { id: animeSelectedRedux.id, nome: nome, possuiManga: possuiManga, temporada: Number(temporada) };\r\n        if (!anime.id) {\r\n            AnimeDataService._post(anime).then(response => {\r\n                toast.current.show({ severity: 'success', summary: 'Sucesso', detail: 'Registro criado com sucesso!', life: 3000 });\r\n                setTimeout(() => {\r\n                    console.log('EXECUTADO POST');\r\n                    router.push('/anime');\r\n                }, 3000);\r\n            })\r\n        } else {\r\n            AnimeDataService._put(anime).then(response => {\r\n                toast.current.show({ severity: 'success', summary: 'Sucesso', detail: 'Registro alterado com sucesso!', life: 3000 });\r\n                setTimeout(() => {\r\n                    console.log('EXECUTADO PUT');\r\n                    router.push('/anime');\r\n                }, 3000);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    function onChangeNome(nome){\r\n        console.log(nome);\r\n        let animeAux = anime;\r\n        animeAux.nome = nome;\r\n        setAnime(anime);\r\n    }\r\n\r\n    function onChangeTemporada(temporada){\r\n        let animeAux = anime;\r\n        animeAux.temporada = temporada;\r\n        setAnime(anime);\r\n    }\r\n\r\n    function onChangePossuiManga(possuiManga){\r\n        let animeAux = anime;\r\n        animeAux.possuiManga = possuiManga;\r\n        setAnime(anime);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={toast} />\r\n            <Fieldset legend=\"Anime Form\">\r\n\r\n                <div className=\"p-fluid\">\r\n                    <div className=\"p-field p-grid\">\r\n                        <label htmlFor=\"nome\" className=\"p-col-12 p-md-2\">Nome: </label>\r\n                        <div className=\"p-col-12 p-md-10\">\r\n                            <InputText id=\"nome\" type=\"text\" value={anime.nome} onChange={(e) => onChangeNome(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-field p-grid\">\r\n                        <label htmlFor=\"temporada\" className=\"p-col-12 p-md-2\">Temporada:</label>\r\n                        <div className=\"p-col-12 p-md-10\">\r\n                            <InputText id=\"temporada\" type=\"text\" value={anime.temporada} onChange={(e) => onChangeTemporada(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-field-checkbox\">\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"possuiManga\" onChange={e => onChangePossuiManga(e.checked)} checked={anime.possuiManga} />\r\n                            <label htmlFor=\"possuiManga\">Possui mangá ?</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <Link href=\"/anime\">\r\n                    <Button id='back-button' style={{ marginRight: '15px' }} label=\"Voltar\" />\r\n                </Link>\r\n\r\n                <Button label=\"Salvar\" onClick={() => _save()} />\r\n\r\n            </Fieldset>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default withAuth(AnimeForm);"]},"metadata":{},"sourceType":"module"}