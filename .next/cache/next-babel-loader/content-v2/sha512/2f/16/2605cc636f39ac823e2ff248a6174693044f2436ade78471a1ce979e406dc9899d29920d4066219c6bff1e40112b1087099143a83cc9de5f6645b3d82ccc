{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\anime\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Link from 'next/link';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Fieldset } from 'primereact/fieldset';\nimport { AnimeDataService } from '../../services/AnimeDataService';\nimport withAuth from '../../components/withAuth';\nimport { loadSelectedDataAction, loadAnimeListAction } from '../../store/actions/anime';\n\nfunction Anime(props) {\n  _s();\n\n  var _this = this;\n\n  var animeList = useSelector(function (state) {\n    return state.animeReducer.animeList;\n  });\n  var animeSelected = useSelector(function (state) {\n    return state.animeReducer.animeSelected;\n  });\n\n  var _useState = useState([]),\n      customers = _useState[0],\n      setCustomers = _useState[1];\n\n  var _useState2 = useState(0),\n      first = _useState2[0],\n      setfirst = _useState2[1];\n\n  var toast = useRef(null);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    return function () {\n      console.log('Foi desmontado');\n      dispatch(loadAnimeListAction(null));\n      dispatch(loadSelectedDataAction(null));\n    };\n  }, []);\n  useEffect(function () {\n    listarAnimes();\n  }, []);\n\n  function listarAnimes() {\n    AnimeDataService.listarAnimes().then(function (response) {\n      dispatch(loadAnimeListAction(response.data.animes));\n    })[\"catch\"](function (error) {\n      console.log(error.response.data);\n      toast.current.show({\n        severity: 'warn',\n        summary: 'Aviso',\n        detail: error.response.data.message,\n        life: 3000\n      });\n    });\n  }\n\n  var novo = function novo() {\n    dispatch(loadSelectedDataAction(null));\n  };\n\n  var editar = function editar(rowData) {\n    dispatch(loadSelectedDataAction(rowData));\n  };\n\n  var _delete = function _delete(rowData) {\n    var index = animeList.indexOf(rowData);\n\n    AnimeDataService._delete(rowData.id).then(function (response) {\n      toast.current.show({\n        severity: 'error',\n        summary: 'Erro',\n        detail: 'Anime ' + rowData.nome + ' excluído com sucesso!',\n        life: 3000\n      }); // let listaAnimesAux = animeList;\n      // listaAnimesAux.splice(index, 1);\n      // dispatch(loadAnimeListAction(listaAnimesAux));\n\n      listarAnimes();\n    })[\"catch\"](function (error) {\n      console.log(error.response.data);\n      toast.current.show({\n        severity: 'warn',\n        summary: 'Aviso',\n        detail: error.response.data.message,\n        life: 3000\n      });\n    });\n  };\n\n  var actionBodyTemplate = function actionBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime/form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: '10px'\n          },\n          icon: \"pi pi-pencil\",\n          className: \"p-button-rounded p-button-success p-mr-2\",\n          onClick: function onClick() {\n            return editar(rowData);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"pi pi-trash\",\n        className: \"p-button-rounded p-button-warning\",\n        onClick: function onClick() {\n          return _delete(rowData);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var possuiManga = function possuiManga(atributte) {\n    if (atributte) {\n      return 'Possui Mangá';\n    }\n\n    return 'Não Possui Mangá';\n  };\n\n  function onCustomPage2(e) {\n    this.setState({\n      first2: e.first,\n      rows2: e.rows\n    });\n  }\n\n  var template2 = {\n    layout: 'RowsPerPageDropdown CurrentPageReport PrevPageLink NextPageLink',\n    'RowsPerPageDropdown': function RowsPerPageDropdown(options) {\n      var dropdownOptions = [{\n        label: 10,\n        value: 10\n      }, {\n        label: 20,\n        value: 20\n      }, {\n        label: 50,\n        value: 50\n      }];\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mx-1\",\n          style: {\n            color: 'var(--text-color)',\n            userSelect: 'none'\n          },\n          children: \"Items per page: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          value: options.value,\n          options: dropdownOptions,\n          onChange: options.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, _this);\n    },\n    'CurrentPageReport': function CurrentPageReport(options) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'var(--text-color)',\n          userSelect: 'none',\n          width: '120px',\n          textAlign: 'center'\n        },\n        children: [options.first, \" - \", options.last, \" of \", options.totalRecords]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n      legend: \"Anime\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime/form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"new-button\",\n          label: \"Novo\",\n          onClick: function onClick() {\n            return novo({});\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        header: \"Animes Cadastrados\",\n        value: animeList,\n        selectionMode: \"single\",\n        selection: animeSelected,\n        onSelectionChange: function onSelectionChange(e) {\n          dispatch(loadSelectedDataAction(e.value));\n        },\n        dataKey: \"id\",\n        paginator: true,\n        paginatorTemplate: template2,\n        first: this.state.first2,\n        rows: this.state.rows2,\n        onPage: this.onCustomPage2,\n        paginatorClassName: \"justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"nome\",\n          header: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"temporada\",\n          header: \"Temporada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: function field(e) {\n            return possuiManga(e.possuiManga);\n          },\n          header: \"Possui mang\\xE1 ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          body: actionBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"back-button\",\n          label: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Anime, \"hZAI5UIW2ZY19+g5/uKcjbIKJd8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Anime;\nexport default _c2 = withAuth(Anime);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Anime\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/anime/index.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Link","Toast","Button","DataTable","Column","Fieldset","AnimeDataService","withAuth","loadSelectedDataAction","loadAnimeListAction","Anime","props","animeList","state","animeReducer","animeSelected","customers","setCustomers","first","setfirst","toast","dispatch","console","log","listarAnimes","then","response","data","animes","error","current","show","severity","summary","detail","message","life","novo","editar","rowData","_delete","index","indexOf","id","nome","actionBodyTemplate","marginRight","possuiManga","atributte","onCustomPage2","e","setState","first2","rows2","rows","template2","layout","options","dropdownOptions","label","value","color","userSelect","onChange","width","textAlign","last","totalRecords"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,sBAAT,EAAiCC,mBAAjC,QAA4D,2BAA5D;;AAGA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA;;AAElB,MAAMC,SAAS,GAAGd,WAAW,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACC,YAAN,CAAmBF,SAA9B;AAAA,GAAD,CAA7B;AACA,MAAMG,aAAa,GAAGjB,WAAW,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACC,YAAN,CAAmBC,aAA9B;AAAA,GAAD,CAAjC;;AAHkB,kBAMgBpB,QAAQ,CAAC,EAAD,CANxB;AAAA,MAMXqB,SANW;AAAA,MAMAC,YANA;;AAAA,mBAOQtB,QAAQ,CAAC,CAAD,CAPhB;AAAA,MAOXuB,KAPW;AAAA,MAOJC,QAPI;;AASlB,MAAMC,KAAK,GAAGvB,MAAM,CAAC,IAAD,CAApB;AAEA,MAAMwB,QAAQ,GAAGtB,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACZ,WAAO,YAAM;AACT0B,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAF,MAAAA,QAAQ,CAACZ,mBAAmB,CAAC,IAAD,CAApB,CAAR;AACAY,MAAAA,QAAQ,CAACb,sBAAsB,CAAC,IAAD,CAAvB,CAAR;AACH,KAJD;AAKH,GANQ,EAMN,EANM,CAAT;AASAZ,EAAAA,SAAS,CAAC,YAAM;AACZ4B,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,YAAT,GAAwB;AACpBlB,IAAAA,gBAAgB,CAACkB,YAAjB,GAAgCC,IAAhC,CAAqC,UAAAC,QAAQ,EAAI;AACjDL,MAAAA,QAAQ,CAACZ,mBAAmB,CAACiB,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAApB,CAAR;AACC,KAFD,WAES,UAAAC,KAAK,EAAI;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACH,QAAN,CAAeC,IAA3B;AACAP,MAAAA,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,OAAO,EAAE,OAA7B;AAAsCC,QAAAA,MAAM,EAAEL,KAAK,CAACH,QAAN,CAAeC,IAAf,CAAoBQ,OAAlE;AAA2EC,QAAAA,IAAI,EAAE;AAAjF,OAAnB;AACH,KALD;AAMH;;AAED,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfhB,IAAAA,QAAQ,CAACb,sBAAsB,CAAC,IAAD,CAAvB,CAAR;AACH,GAFD;;AAIA,MAAM8B,MAAM,GAAG,SAATA,MAAS,CAACC,OAAD,EAAa;AACxBlB,IAAAA,QAAQ,CAACb,sBAAsB,CAAC+B,OAAD,CAAvB,CAAR;AACH,GAFD;;AAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACD,OAAD,EAAa;AACzB,QAAME,KAAK,GAAG7B,SAAS,CAAC8B,OAAV,CAAkBH,OAAlB,CAAd;;AACAjC,IAAAA,gBAAgB,CAACkC,OAAjB,CAAyBD,OAAO,CAACI,EAAjC,EAAqClB,IAArC,CAA0C,UAAAC,QAAQ,EAAI;AAClDN,MAAAA,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB;AAAEC,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,OAAO,EAAE,MAA9B;AAAsCC,QAAAA,MAAM,EAAE,WAAWK,OAAO,CAACK,IAAnB,GAA0B,wBAAxE;AAAkGR,QAAAA,IAAI,EAAE;AAAxG,OAAnB,EADkD,CAElD;AACA;AACA;;AACAZ,MAAAA,YAAY;AACf,KAND,WAMS,UAAAK,KAAK,EAAI;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACH,QAAN,CAAeC,IAA3B;AACAP,MAAAA,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,OAAO,EAAE,OAA7B;AAAsCC,QAAAA,MAAM,EAAEL,KAAK,CAACH,QAAN,CAAeC,IAAf,CAAoBQ,OAAlE;AAA2EC,QAAAA,IAAI,EAAE;AAAjF,OAAnB;AACH,KATD;AAUH,GAZD;;AAcA,MAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAACN,OAAD,EAAa;AACpC,wBACI;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,aAAX;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAEO,YAAAA,WAAW,EAAE;AAAf,WAAf;AAAwC,UAAA,IAAI,EAAC,cAA7C;AAA4D,UAAA,SAAS,EAAC,0CAAtE;AAAiH,UAAA,OAAO,EAAE;AAAA,mBAAMR,MAAM,CAACC,OAAD,CAAZ;AAAA;AAA1H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ,eAKI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,aAAb;AAA2B,QAAA,SAAS,EAAC,mCAArC;AAAyE,QAAA,OAAO,EAAE;AAAA,iBAAMC,OAAO,CAACD,OAAD,CAAb;AAAA;AAAlF;AAAA;AAAA;AAAA;AAAA,eALJ;AAAA,oBADJ;AASH,GAVD;;AAYA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAe;AAC/B,QAAIA,SAAJ,EAAe;AACX,aAAO,cAAP;AACH;;AAAC,WAAO,kBAAP;AACL,GAJD;;AAMD,WAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACrB,SAAKC,QAAL,CAAc;AACVC,MAAAA,MAAM,EAAEF,CAAC,CAAChC,KADA;AAEVmC,MAAAA,KAAK,EAAEH,CAAC,CAACI;AAFC,KAAd;AAIH;;AAED,MAAMC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAE,iEADM;AAEd,2BAAuB,6BAACC,OAAD,EAAa;AAChC,UAAMC,eAAe,GAAG,CACpB;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OADoB,EAEpB;AAAED,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAFoB,EAGpB;AAAED,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAHoB,CAAxB;AAMA,0BACI,QAAC,KAAD,CAAO,QAAP;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,mBAAT;AAA8BC,YAAAA,UAAU,EAAE;AAA1C,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEL,OAAO,CAACG,KAAzB;AAAgC,UAAA,OAAO,EAAEF,eAAzC;AAA0D,UAAA,QAAQ,EAAED,OAAO,CAACM;AAA5E;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAMH,KAfa;AAgBd,yBAAqB,2BAACN,OAAD,EAAa;AAC9B,0BACI;AAAM,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE,mBAAT;AAA8BC,UAAAA,UAAU,EAAE,MAA1C;AAAkDE,UAAAA,KAAK,EAAE,OAAzD;AAAkEC,UAAAA,SAAS,EAAE;AAA7E,SAAb;AAAA,mBACKR,OAAO,CAACvC,KADb,SACuBuC,OAAO,CAACS,IAD/B,UACyCT,OAAO,CAACU,YADjD;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAKH;AAtBa,GAAlB;AAyBA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,GAAG,EAAE/C;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,MAAM,EAAC,OAAjB;AAAA,8BAEI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,aAAX;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,YAAX;AAAwB,UAAA,KAAK,EAAC,MAA9B;AAAqC,UAAA,OAAO,EAAE;AAAA,mBAAMiB,IAAI,CAAC,EAAD,CAAV;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,SAAD;AACI,QAAA,MAAM,EAAC,oBADX;AAEI,QAAA,KAAK,EAAEzB,SAFX;AAGI,QAAA,aAAa,EAAC,QAHlB;AAII,QAAA,SAAS,EAAEG,aAJf;AAKI,QAAA,iBAAiB,EAAE,2BAAAmC,CAAC,EAAI;AAAE7B,UAAAA,QAAQ,CAACb,sBAAsB,CAAC0C,CAAC,CAACU,KAAH,CAAvB,CAAR;AAA2C,SALzE;AAMI,QAAA,OAAO,EAAC,IANZ;AAOI,QAAA,SAAS,MAPb;AAQI,QAAA,iBAAiB,EAAEL,SARvB;AASI,QAAA,KAAK,EAAE,KAAK1C,KAAL,CAAWuC,MATtB;AAUI,QAAA,IAAI,EAAE,KAAKvC,KAAL,CAAWwC,KAVrB;AAWI,QAAA,MAAM,EAAE,KAAKJ,aAXjB;AAYI,QAAA,kBAAkB,EAAC,qBAZvB;AAAA,gCAcI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAqB,UAAA,MAAM,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAeI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,MAAM,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAgBI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,mBAAIH,WAAW,CAACG,CAAC,CAACH,WAAH,CAAf;AAAA,WAAhB;AAAgD,UAAA,MAAM,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAiBI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eA0BI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,aAAX;AAAyB,UAAA,KAAK,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAoCH;;GA/IQnC,K;UAEaZ,W,EACIA,W,EAQLC,W;;;KAXZW,K;AAiJT,qBAAeH,QAAQ,CAACG,KAAD,CAAvB","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Link from 'next/link'\r\n\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Fieldset } from 'primereact/fieldset';\r\n\r\nimport { AnimeDataService } from '../../services/AnimeDataService';\r\nimport withAuth from '../../components/withAuth';\r\nimport { loadSelectedDataAction, loadAnimeListAction } from '../../store/actions/anime';\r\n\r\n\r\nfunction Anime(props) {\r\n\r\n    const animeList = useSelector((state) => state.animeReducer.animeList);\r\n    const animeSelected = useSelector((state) => state.animeReducer.animeSelected)\r\n\r\n\r\n    const [customers, setCustomers] = useState([]);\r\n    const [first, setfirst] = useState(0);\r\n\r\n    const toast = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log('Foi desmontado');\r\n            dispatch(loadAnimeListAction(null));\r\n            dispatch(loadSelectedDataAction(null));\r\n        };\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        listarAnimes();\r\n    }, [])\r\n\r\n    function listarAnimes() {\r\n        AnimeDataService.listarAnimes().then(response => {\r\n        dispatch(loadAnimeListAction(response.data.animes));\r\n        }).catch(error => {\r\n            console.log(error.response.data)\r\n            toast.current.show({ severity: 'warn', summary: 'Aviso', detail: error.response.data.message, life: 3000 });\r\n        })\r\n    }\r\n\r\n    const novo = () => {\r\n        dispatch(loadSelectedDataAction(null));\r\n    }\r\n\r\n    const editar = (rowData) => {\r\n        dispatch(loadSelectedDataAction(rowData));\r\n    }\r\n\r\n    const _delete = (rowData) => {\r\n        const index = animeList.indexOf(rowData);\r\n        AnimeDataService._delete(rowData.id).then(response => {\r\n            toast.current.show({ severity: 'error', summary: 'Erro', detail: 'Anime ' + rowData.nome + ' excluído com sucesso!', life: 3000 });\r\n            // let listaAnimesAux = animeList;\r\n            // listaAnimesAux.splice(index, 1);\r\n            // dispatch(loadAnimeListAction(listaAnimesAux));\r\n            listarAnimes();\r\n        }).catch(error => {\r\n            console.log(error.response.data)\r\n            toast.current.show({ severity: 'warn', summary: 'Aviso', detail: error.response.data.message, life: 3000 });\r\n        })\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <Link href=\"/anime/form\">\r\n                    <Button style={{ marginRight: '10px' }} icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => editar(rowData)} />\r\n                </Link>\r\n\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => _delete(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    const possuiManga = (atributte) => {\r\n        if (atributte) {\r\n            return 'Possui Mangá';\r\n        } return 'Não Possui Mangá';\r\n    }\r\n\r\n   function onCustomPage2(e) {\r\n        this.setState({\r\n            first2: e.first,\r\n            rows2: e.rows\r\n        });\r\n    }\r\n\r\n    const template2 = {\r\n        layout: 'RowsPerPageDropdown CurrentPageReport PrevPageLink NextPageLink',\r\n        'RowsPerPageDropdown': (options) => {\r\n            const dropdownOptions = [\r\n                { label: 10, value: 10 },\r\n                { label: 20, value: 20 },\r\n                { label: 50, value: 50 }\r\n            ];\r\n\r\n            return (\r\n                <React.Fragment>\r\n                    <span className=\"mx-1\" style={{ color: 'var(--text-color)', userSelect: 'none' }}>Items per page: </span>\r\n                    <Dropdown value={options.value} options={dropdownOptions} onChange={options.onChange} />\r\n                </React.Fragment>\r\n            );\r\n        },\r\n        'CurrentPageReport': (options) => {\r\n            return (\r\n                <span style={{ color: 'var(--text-color)', userSelect: 'none', width: '120px', textAlign: 'center' }}>\r\n                    {options.first} - {options.last} of {options.totalRecords}\r\n                </span>\r\n            )\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={toast} />\r\n            <Fieldset legend=\"Anime\">\r\n\r\n                <Link href=\"/anime/form\">\r\n                    <Button id='new-button' label=\"Novo\" onClick={() => novo({})} />\r\n                </Link>\r\n\r\n                <DataTable\r\n                    header=\"Animes Cadastrados\"\r\n                    value={animeList}\r\n                    selectionMode=\"single\"\r\n                    selection={animeSelected}\r\n                    onSelectionChange={e => { dispatch(loadSelectedDataAction(e.value)) }}\r\n                    dataKey=\"id\"\r\n                    paginator \r\n                    paginatorTemplate={template2}\r\n                    first={this.state.first2} \r\n                    rows={this.state.rows2} \r\n                    onPage={this.onCustomPage2}\r\n                    paginatorClassName=\"justify-content-end\"\r\n                    >\r\n                    <Column field=\"nome\" header=\"Nome\"></Column>\r\n                    <Column field=\"temporada\" header=\"Temporada\"></Column>\r\n                    <Column field={e => possuiManga(e.possuiManga)} header=\"Possui mangá ?\"></Column>\r\n                    <Column body={actionBodyTemplate}></Column>\r\n                </DataTable>\r\n\r\n                <Link href=\"/\">\r\n                    <Button id='back-button' label=\"Voltar\" />\r\n                </Link>\r\n\r\n            </Fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withAuth(Anime);"]},"metadata":{},"sourceType":"module"}