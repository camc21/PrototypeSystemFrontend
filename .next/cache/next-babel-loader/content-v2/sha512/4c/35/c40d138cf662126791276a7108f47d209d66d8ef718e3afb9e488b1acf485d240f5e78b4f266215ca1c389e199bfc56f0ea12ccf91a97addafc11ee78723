{"ast":null,"code":"export async function GetServerSideProps(ctx) {\n  const isAuthenticated = req => {\n    var _req$headers;\n\n    if (!(req !== null && req !== void 0 && (_req$headers = req.headers) !== null && _req$headers !== void 0 && _req$headers.cookie)) {\n      return undefined;\n    }\n\n    const match = req.headers.cookie.split(';').find(item => item.trim().startsWith('token'));\n\n    if (!match) {\n      return undefined;\n    }\n\n    return match.split('=')[1];\n  };\n\n  if (!isAuthenticated(ctx.req)) {\n    ctx.res.writeHead(303, {\n      Location: '/login'\n    });\n    ctx.res.end();\n  }\n\n  return {\n    props: {}\n  };\n}","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/components/getServerSideProps.jsx"],"names":["GetServerSideProps","ctx","isAuthenticated","req","headers","cookie","undefined","match","split","find","item","trim","startsWith","res","writeHead","Location","end","props"],"mappings":"AAAA,OAAO,eAAeA,kBAAf,CAAkCC,GAAlC,EAAuC;AAC1C,QAAMC,eAAe,GAAIC,GAAD,IAAS;AAAA;;AAC/B,QAAI,EAACA,GAAD,aAACA,GAAD,+BAACA,GAAG,CAAEC,OAAN,yCAAC,aAAcC,MAAf,CAAJ,EAA2B;AACzB,aAAOC,SAAP;AACD;;AAED,UAAMC,KAAK,GAAGJ,GAAG,CAACC,OAAJ,CAAYC,MAAZ,CACXG,KADW,CACL,GADK,EAEXC,IAFW,CAELC,IAAD,IAAUA,IAAI,CAACC,IAAL,GAAYC,UAAZ,CAAuB,OAAvB,CAFJ,CAAd;;AAIA,QAAI,CAACL,KAAL,EAAY;AACV,aAAOD,SAAP;AACD;;AAED,WAAOC,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAP;AACD,GAdD;;AAgBA,MAAI,CAACN,eAAe,CAACD,GAAG,CAACE,GAAL,CAApB,EAA+B;AAC7BF,IAAAA,GAAG,CAACY,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AACAd,IAAAA,GAAG,CAACY,GAAJ,CAAQG,GAAR;AACD;;AAED,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD","sourcesContent":["export async function GetServerSideProps(ctx) {\r\n    const isAuthenticated = (req) => {\r\n      if (!req?.headers?.cookie) {\r\n        return undefined;\r\n      }\r\n  \r\n      const match = req.headers.cookie\r\n        .split(';')\r\n        .find((item) => item.trim().startsWith('token'));\r\n  \r\n      if (!match) {\r\n        return undefined;\r\n      }\r\n  \r\n      return match.split('=')[1];\r\n    };\r\n  \r\n    if (!isAuthenticated(ctx.req)) {\r\n      ctx.res.writeHead(303, { Location: '/login' });\r\n      ctx.res.end();\r\n    }\r\n  \r\n    return { props: {} };\r\n  }"]},"metadata":{},"sourceType":"module"}