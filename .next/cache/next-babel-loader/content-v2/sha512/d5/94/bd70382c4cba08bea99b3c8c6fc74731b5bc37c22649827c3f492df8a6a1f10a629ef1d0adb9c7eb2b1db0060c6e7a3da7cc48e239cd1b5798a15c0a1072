{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\anime\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Link from 'next/link';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Fieldset } from 'primereact/fieldset';\nimport { Ripple } from 'primereact/ripple';\nimport Select from 'react-select';\nimport { AnimeDataService } from '../../services/AnimeDataService';\nimport withAuth from '../../components/withAuth';\nimport { loadSelectedDataAction, loadAnimeListAction } from '../../store/actions/anime';\n\nfunction Anime(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(useSelector(function (state) {\n    return state.animeListReducer.animeDataPage;\n  })),\n      animeDataPage = _useState[0],\n      setAnimeDataPage = _useState[1];\n\n  var _useState2 = useState(useSelector(function (state) {\n    return state.animeSelectedReducer.animeSelected;\n  })),\n      animeSelected = _useState2[0],\n      setAnimeSelected = _useState2[1];\n\n  var _useState3 = useState([{\n    value: 10,\n    label: 10\n  }, {\n    value: 20,\n    label: 20\n  }, {\n    value: 50,\n    label: 50\n  }]),\n      itensPerPage = _useState3[0],\n      setItensPage = _useState3[1];\n\n  var _useState4 = useState(0),\n      first = _useState4[0],\n      setfirst = _useState4[1];\n\n  var _useState5 = useState(itensPerPage[0]),\n      rows = _useState5[0],\n      setRows = _useState5[1];\n\n  var _useState6 = useState(\"nome\"),\n      sortBy = _useState6[0],\n      setSortBy = _useState6[1];\n\n  var _useState7 = useState(0),\n      numberPage = _useState7[0],\n      setNumberPage = _useState7[1];\n\n  var toast = useRef(null);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    page(numberPage, rows.value, sortBy);\n  }, [rows, numberPage]);\n\n  function page(pageNo, pageSize, sortBy) {\n    AnimeDataService._page(1, pageSize, sortBy).then(function (response) {\n      console.log(response.data);\n      var responseAux = {\n        content: response.data.content,\n        empty: response.data.empty,\n        first: response.data.first,\n        last: response.data.last,\n        number: response.data.number,\n        numberOfElements: response.data.numberOfElements,\n        size: response.data.size,\n        totalElements: response.data.totalElements,\n        totalPages: response.data.totalPages\n      };\n      dispatch(loadAnimeListAction(responseAux));\n      setAnimeDataPage(responseAux);\n    })[\"catch\"](function (error) {\n      toast.current.show({\n        severity: 'warn',\n        summary: 'Aviso',\n        detail: error.response.data.message,\n        life: 3000\n      });\n    });\n  }\n\n  var novo = function novo() {\n    dispatch(loadSelectedDataAction(null));\n  };\n\n  var editar = function editar(rowData) {\n    dispatch(loadSelectedDataAction(rowData));\n    setAnimeSelected(rowData);\n  };\n\n  var _delete = function _delete(rowData) {\n    var index = paginator.content.indexOf(rowData);\n\n    AnimeDataService._delete(rowData.id).then(function (response) {\n      toast.current.show({\n        severity: 'error',\n        summary: 'Erro',\n        detail: 'Anime ' + rowData.nome + ' excluído com sucesso!',\n        life: 3000\n      });\n      list();\n    })[\"catch\"](function (error) {\n      toast.current.show({\n        severity: 'warn',\n        summary: 'Aviso',\n        detail: error.response.data.message,\n        life: 3000\n      });\n    });\n  };\n\n  var actionBodyTemplate = function actionBodyTemplate(rowData) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime/form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: '10px'\n          },\n          icon: \"pi pi-pencil\",\n          className: \"p-button-rounded p-button-success p-mr-2\",\n          onClick: function onClick() {\n            return editar(rowData);\n          },\n          disabled: !animeSelected || !animeSelected.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"pi pi-trash\",\n        className: \"p-button-rounded p-button-warning\",\n        onClick: function onClick() {\n          return _delete(rowData);\n        },\n        disabled: !animeSelected || !animeSelected.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var possuiManga = function possuiManga(atributte) {\n    if (atributte) {\n      return 'Possui Mangá';\n    }\n\n    return 'Não Possui Mangá';\n  };\n\n  function onCustomPage(e) {\n    setfirst(e.first);\n    setRows(e.rows);\n  }\n\n  function selectAnime(e) {\n    if (e.value) {\n      dispatch(loadSelectedDataAction(e.value));\n      setAnimeSelected(e.value);\n    } else {\n      dispatch(loadSelectedDataAction(null));\n      setAnimeSelected(null);\n    }\n  }\n\n  function handleItemPerPage(item) {\n    console.log(item);\n    var index = itensPerPage.indexOf(item);\n    console.log(index);\n\n    if (index >= 0) {\n      setRows(itensPerPage[index]);\n    }\n  }\n\n  function numberPageSum(numberPage) {\n    setNumberPage(numberPage--);\n  }\n\n  function numberPageMinus(numberPage) {\n    setNumberPage(numberPage++);\n  }\n\n  var template = {\n    layout: 'RowsPerPageDropdown CurrentPageReport PrevPageLink NextPageLink',\n    'RowsPerPageDropdown': function RowsPerPageDropdown() {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mx-1\",\n          style: {\n            color: 'var(--text-color)',\n            userSelect: 'none'\n          },\n          children: \"Items per page: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Select, {\n          options: itensPerPage,\n          value: rows,\n          onChange: function onChange(e) {\n            return handleItemPerPage(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, _this);\n    },\n    'CurrentPageReport': function CurrentPageReport() {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'var(--text-color)',\n          userSelect: 'none',\n          width: '120px',\n          textAlign: 'center'\n        },\n        children: [animeDataPage && animeDataPage.number, \" - \", animeDataPage && animeDataPage.numberOfElements, \" of \", animeDataPage && animeDataPage.totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, _this);\n    },\n    'PrevPageLink': function PrevPageLink() {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return numberPageSum(numberPage);\n        },\n        disabled: animeDataPage && animeDataPage.first,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"p-3\",\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Ripple, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, _this);\n    },\n    'NextPageLink': function NextPageLink() {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return numberPageSum(numberPage);\n        },\n        disabled: animeDataPage && animeDataPage.last,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"p-3\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Ripple, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, _this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n      legend: \"Anime\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime/form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"new-button\",\n          label: \"Novo\",\n          onClick: function onClick() {\n            return novo({});\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        scrollHeight: \"400px\",\n        scrollable: true,\n        header: \"Animes Cadastrados\",\n        value: animeDataPage && animeDataPage.content,\n        selection: animeSelected,\n        onSelectionChange: function onSelectionChange(e) {\n          return selectAnime(e);\n        },\n        dataKey: \"id\",\n        paginator: true,\n        paginatorTemplate: template,\n        first: first,\n        rows: rows.value // onPage={onCustomPage}\n        ,\n        paginatorClassName: \"justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          selectionMode: \"single\",\n          headerStyle: {\n            width: '3em'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"nome\",\n          header: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"temporada\",\n          header: \"Temporada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: function field(e) {\n            return possuiManga(e.possuiManga);\n          },\n          header: \"Possui mang\\xE1 ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          body: actionBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"back-button\",\n          label: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Anime, \"hsIa5UhK+QQ855r+/7IwEVmueEs=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Anime;\nexport default _c2 = withAuth(Anime);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Anime\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/anime/index.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Link","Toast","Button","DataTable","Column","Fieldset","Ripple","Select","AnimeDataService","withAuth","loadSelectedDataAction","loadAnimeListAction","Anime","props","state","animeListReducer","animeDataPage","setAnimeDataPage","animeSelectedReducer","animeSelected","setAnimeSelected","value","label","itensPerPage","setItensPage","first","setfirst","rows","setRows","sortBy","setSortBy","numberPage","setNumberPage","toast","dispatch","page","pageNo","pageSize","_page","then","response","console","log","data","responseAux","content","empty","last","number","numberOfElements","size","totalElements","totalPages","error","current","show","severity","summary","detail","message","life","novo","editar","rowData","_delete","index","paginator","indexOf","id","nome","list","actionBodyTemplate","marginRight","possuiManga","atributte","onCustomPage","e","selectAnime","handleItemPerPage","item","numberPageSum","numberPageMinus","template","layout","color","userSelect","width","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Link from 'next/link'\r\n\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Fieldset } from 'primereact/fieldset';\r\nimport { Ripple } from 'primereact/ripple';\r\nimport Select from 'react-select'\r\n\r\nimport { AnimeDataService } from '../../services/AnimeDataService';\r\nimport withAuth from '../../components/withAuth';\r\nimport { loadSelectedDataAction, loadAnimeListAction } from '../../store/actions/anime';\r\n\r\n\r\nfunction Anime(props) {\r\n\r\n    const [animeDataPage, setAnimeDataPage] = useState(useSelector((state) => state.animeListReducer.animeDataPage));\r\n\r\n    const [animeSelected, setAnimeSelected] = useState(useSelector((state) => state.animeSelectedReducer.animeSelected));\r\n\r\n    const [itensPerPage, setItensPage] = useState([\r\n        { value: 10, label: 10 },\r\n        { value: 20, label: 20 },\r\n        { value: 50, label: 50 }\r\n    ]);\r\n\r\n    const [first, setfirst] = useState(0);\r\n    const [rows, setRows] = useState(itensPerPage[0]);\r\n    const [sortBy, setSortBy] = useState(\"nome\");\r\n    const [numberPage, setNumberPage] = useState(0);\r\n\r\n    const toast = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        page(numberPage, rows.value, sortBy);\r\n    }, [rows, numberPage])\r\n\r\n    function page(pageNo, pageSize, sortBy) {\r\n        AnimeDataService._page(1, pageSize, sortBy).then(response => {\r\n            console.log(response.data);\r\n            const responseAux = {\r\n                content: response.data.content,\r\n                empty: response.data.empty,\r\n                first: response.data.first,\r\n                last: response.data.last,\r\n                number: response.data.number,\r\n                numberOfElements: response.data.numberOfElements,\r\n                size: response.data.size,\r\n                totalElements: response.data.totalElements,\r\n                totalPages: response.data.totalPages\r\n            }\r\n            dispatch(loadAnimeListAction(responseAux));\r\n            setAnimeDataPage(responseAux);\r\n        }).catch(error => {\r\n            toast.current.show({ severity: 'warn', summary: 'Aviso', detail: error.response.data.message, life: 3000 });\r\n        })\r\n    }\r\n\r\n    const novo = () => {\r\n        dispatch(loadSelectedDataAction(null));\r\n    }\r\n\r\n    const editar = (rowData) => {\r\n        dispatch(loadSelectedDataAction(rowData));\r\n        setAnimeSelected(rowData)\r\n    }\r\n\r\n    const _delete = (rowData) => {\r\n        const index = paginator.content.indexOf(rowData);\r\n        AnimeDataService._delete(rowData.id).then(response => {\r\n            toast.current.show({ severity: 'error', summary: 'Erro', detail: 'Anime ' + rowData.nome + ' excluído com sucesso!', life: 3000 });\r\n            list();\r\n        }).catch(error => {\r\n            toast.current.show({ severity: 'warn', summary: 'Aviso', detail: error.response.data.message, life: 3000 });\r\n        })\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <Link href=\"/anime/form\">\r\n                    <Button style={{ marginRight: '10px' }} icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => editar(rowData)} disabled={!animeSelected || !animeSelected.id} />\r\n                </Link>\r\n\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => _delete(rowData)} disabled={!animeSelected || !animeSelected.id} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    const possuiManga = (atributte) => {\r\n        if (atributte) {\r\n            return 'Possui Mangá';\r\n        } return 'Não Possui Mangá';\r\n    }\r\n\r\n    function onCustomPage(e) {\r\n        setfirst(e.first);\r\n        setRows(e.rows);\r\n    }\r\n\r\n    function selectAnime(e) {\r\n        if(e.value){\r\n            dispatch(loadSelectedDataAction(e.value))\r\n            setAnimeSelected(e.value)\r\n        }else {\r\n            dispatch(loadSelectedDataAction(null))\r\n            setAnimeSelected(null)\r\n        }\r\n        \r\n    }\r\n\r\n    function handleItemPerPage(item) {\r\n        console.log(item);\r\n        const index = itensPerPage.indexOf(item)\r\n        console.log(index);\r\n        if(index >= 0){\r\n            setRows(itensPerPage[index]);\r\n        }\r\n    }\r\n\r\n    function numberPageSum(numberPage) {\r\n        setNumberPage(numberPage--);\r\n    }\r\n\r\n    function numberPageMinus(numberPage) {\r\n        setNumberPage(numberPage++);\r\n    }\r\n\r\n\r\n    const template = {\r\n        layout: 'RowsPerPageDropdown CurrentPageReport PrevPageLink NextPageLink',\r\n        'RowsPerPageDropdown': () => {\r\n            return (\r\n                <React.Fragment>\r\n                    <span className=\"mx-1\" style={{ color: 'var(--text-color)', userSelect: 'none' }}>Items per page: </span>\r\n                    <Select options={itensPerPage} value={rows} onChange={(e) => handleItemPerPage(e) } />\r\n                </React.Fragment>\r\n            );\r\n        },\r\n        'CurrentPageReport': () => {\r\n            return (\r\n                <span style={{ color: 'var(--text-color)', userSelect: 'none', width: '120px', textAlign: 'center' }}>\r\n                    {animeDataPage && animeDataPage.number} - {animeDataPage && animeDataPage.numberOfElements} of {animeDataPage && animeDataPage.totalElements}\r\n                </span>\r\n            )\r\n        },\r\n        'PrevPageLink': () => {\r\n            return (\r\n                <button type=\"button\" onClick={() => numberPageSum(numberPage)} disabled={animeDataPage && animeDataPage.first}>\r\n                    <span className=\"p-3\">Previous</span>\r\n                    <Ripple />\r\n                </button>\r\n            )\r\n        },\r\n        'NextPageLink': () => {\r\n            return (\r\n                <button type=\"button\" onClick={() => numberPageSum(numberPage)} disabled={animeDataPage && animeDataPage.last}>\r\n                    <span className=\"p-3\">Next</span>\r\n                    <Ripple />\r\n                </button>\r\n            )\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={toast} />\r\n            <Fieldset legend=\"Anime\">\r\n\r\n                <Link href=\"/anime/form\">\r\n                    <Button id='new-button' label=\"Novo\" onClick={() => novo({})} />\r\n                </Link>\r\n            \r\n                <DataTable\r\n                    scrollHeight=\"400px\"\r\n                    scrollable \r\n                    header=\"Animes Cadastrados\"\r\n                    value={ animeDataPage && animeDataPage.content }\r\n                    selection={animeSelected}\r\n                    onSelectionChange={e => selectAnime(e)}\r\n                    dataKey=\"id\"\r\n                    paginator\r\n                    paginatorTemplate={template}\r\n                    first={first}\r\n                    rows={rows.value}\r\n                    // onPage={onCustomPage}\r\n                    paginatorClassName=\"justify-content-end\"\r\n                >\r\n                    <Column selectionMode=\"single\" headerStyle={{width: '3em'}}></Column>\r\n                    <Column field=\"nome\" header=\"Nome\"></Column>\r\n                    <Column field=\"temporada\" header=\"Temporada\"></Column>\r\n                    <Column field={e => possuiManga(e.possuiManga)} header=\"Possui mangá ?\"></Column>\r\n                    <Column body={actionBodyTemplate}></Column>\r\n                </DataTable>\r\n\r\n                <Link href=\"/\">\r\n                    <Button id='back-button' label=\"Voltar\" />\r\n                </Link>\r\n\r\n            </Fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withAuth(Anime);"]},"metadata":{},"sourceType":"module"}