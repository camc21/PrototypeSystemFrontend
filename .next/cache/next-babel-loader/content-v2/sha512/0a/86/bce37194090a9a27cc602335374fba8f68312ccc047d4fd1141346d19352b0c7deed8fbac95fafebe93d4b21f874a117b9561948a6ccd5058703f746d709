{"ast":null,"code":"import _defineProperty from \"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { LOAD_SELECTED_DATA, LOAD_ANIME_LIST } from \"../../actions\";\nvar initialStatePaginator = {\n  content: [],\n  empty: false,\n  first: false,\n  last: false,\n  number: 0,\n  numberOfElements: 0,\n  size: 0,\n  totalElements: 0,\n  totalPages: 0\n};\nvar initialStateAnimeSelected = {\n  id: null,\n  nome: \"\",\n  temporada: null,\n  possuiManga: null\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case LOAD_SELECTED_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        animeSelected: action.payload\n      });\n\n    case LOAD_ANIME_LIST:\n      if (action.payload) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          paginator: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/store/reducers/anime/index.jsx"],"names":["HYDRATE","LOAD_SELECTED_DATA","LOAD_ANIME_LIST","initialStatePaginator","content","empty","first","last","number","numberOfElements","size","totalElements","totalPages","initialStateAnimeSelected","id","nome","temporada","possuiManga","reducer","state","initialState","action","type","payload","animeSelected","paginator"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,eAApD;AAEA,IAAMC,qBAAqB,GAAG;AAACC,EAAAA,OAAO,EAAE,EAAV;AAAcC,EAAAA,KAAK,EAAE,KAArB;AAA4BC,EAAAA,KAAK,EAAE,KAAnC;AAA0CC,EAAAA,IAAI,EAAE,KAAhD;AAAuDC,EAAAA,MAAM,EAAE,CAA/D;AAAkEC,EAAAA,gBAAgB,EAAE,CAApF;AAAuFC,EAAAA,IAAI,EAAE,CAA7F;AAAgGC,EAAAA,aAAa,EAAE,CAA/G;AAAkHC,EAAAA,UAAU,EAAE;AAA9H,CAA9B;AACA,IAAMC,yBAAyB,GAAG;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE,EAAlB;AAAsBC,EAAAA,SAAS,EAAE,IAAjC;AAAuCC,EAAAA,WAAW,EAAE;AAApD,CAAlC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBC,YAAyB;AAAA,MAAXC,MAAW;;AAEhD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKtB,OAAL;AACE,6CAAYmB,KAAZ,GAAsBE,MAAM,CAACE,OAA7B;;AACF,SAAKtB,kBAAL;AACE,6CACKkB,KADL;AAEEK,QAAAA,aAAa,EAAEH,MAAM,CAACE;AAFxB;;AAIF,SAAKrB,eAAL;AACE,UAAGmB,MAAM,CAACE,OAAV,EAAkB;AAChB,+CACKJ,KADL;AAEEM,UAAAA,SAAS,EAAEJ,MAAM,CAACE;AAFpB;AAID;;AACH;AACE,aAAOJ,KAAP;AAhBJ;AAkBD,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport { LOAD_SELECTED_DATA, LOAD_ANIME_LIST } from \"../../actions\";\r\n\r\nconst initialStatePaginator = {content: [], empty: false, first: false, last: false, number: 0, numberOfElements: 0, size: 0, totalElements: 0, totalPages: 0};\r\nconst initialStateAnimeSelected = { id: null, nome: \"\", temporada: null, possuiManga: null }\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      return { ...state, ...action.payload };\r\n    case LOAD_SELECTED_DATA:\r\n      return {\r\n        ...state,\r\n        animeSelected: action.payload\r\n      }\r\n    case LOAD_ANIME_LIST:\r\n      if(action.payload){\r\n        return {\r\n          ...state,\r\n          paginator: action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}