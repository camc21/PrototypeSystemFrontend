{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/PROJETOS/PrototypeSystemFrontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\anime\\\\form.jsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Fieldset } from 'primereact/fieldset';\nimport { InputText } from 'primereact/inputtext';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Button } from 'primereact/button';\nimport { Toast } from 'primereact/toast';\nimport withAuth from '../../components/withAuth';\nimport 'primeflex/primeflex.css';\nimport { AnimeDataService } from '../../services/AnimeDataService';\n\nfunction AnimeForm(props) {\n  _s();\n\n  var _this = this;\n\n  var animeSelectedRedux = useSelector(function (state) {\n    return state.animeReducer.animeSelected;\n  });\n\n  var _useState = useState({\n    id: undefined,\n    nome: undefined,\n    possuiManga: false,\n    temporada: undefined\n  }),\n      anime = _useState[0],\n      setAnime = _useState[1];\n\n  var toast = useRef(null);\n  var router = useRouter();\n  useEffect(function () {\n    if (animeSelectedRedux) {\n      setAnime({\n        id: animeSelectedRedux.id,\n        nome: animeSelectedRedux.nome,\n        possuiManga: animeSelectedRedux.possuiManga,\n        temporada: animeSelectedRedux.temporada\n      });\n    }\n  }, []);\n\n  function _save() {\n    var anime = {\n      id: animeSelectedRedux.id,\n      nome: nome,\n      possuiManga: possuiManga,\n      temporada: Number(temporada)\n    };\n\n    if (!anime.id) {\n      AnimeDataService._post(anime).then(function (response) {\n        toast.current.show({\n          severity: 'success',\n          summary: 'Sucesso',\n          detail: 'Registro criado com sucesso!',\n          life: 3000\n        });\n        setTimeout(function () {\n          console.log('EXECUTADO POST');\n          router.push('/anime');\n        }, 3000);\n      });\n    } else {\n      AnimeDataService._put(anime).then(function (response) {\n        toast.current.show({\n          severity: 'success',\n          summary: 'Sucesso',\n          detail: 'Registro alterado com sucesso!',\n          life: 3000\n        });\n        setTimeout(function () {\n          console.log('EXECUTADO PUT');\n          router.push('/anime');\n        }, 3000);\n      });\n    }\n  }\n\n  function onChangeNome(nome) {\n    console.log(nome);\n\n    var animeAux = _objectSpread({}, anime);\n\n    animeAux.nome = nome;\n    setAnime(anime);\n  }\n\n  function onChangeTemporada(temporada) {\n    var animeAux = _objectSpread({}, anime);\n\n    animeAux.temporada = temporada;\n    setAnime(anime);\n  }\n\n  function onChangePossuiManga(possuiManga) {\n    var animeAux = _objectSpread({}, anime);\n\n    animeAux.possuiManga = possuiManga;\n    setAnime(anime);\n  }\n\n  var _useForm = useForm({\n    defaultValues: {\n      checkbox: false\n    }\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      reset = _useForm.reset;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n      legend: \"Anime Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nome\",\n          className: \"p-col-12 p-md-2\",\n          children: \"Nome: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"nome\",\n          control: control,\n          rules: {\n            required: false\n          },\n          render: function render(_ref) {\n            var field = _ref.field;\n            return /*#__PURE__*/_jsxDEV(InputText, _objectSpread({}, field), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 48\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"temporada\",\n          className: \"p-col-12 p-md-2\",\n          children: \"Temporada:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"temporada\",\n          control: control,\n          rules: {\n            required: false\n          },\n          render: function render(_ref2) {\n            var field = _ref2.field;\n            return /*#__PURE__*/_jsxDEV(InputText, _objectSpread({}, field), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 48\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"possuiManga\",\n          control: control,\n          rules: {\n            required: false\n          },\n          render: function render(_ref3) {\n            var field = _ref3.field;\n            return /*#__PURE__*/_jsxDEV(Checkbox, _objectSpread({}, field), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 48\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"possuiManga\",\n          children: \"Possui mang\\xE1 ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nome\",\n            className: \"p-col-12 p-md-2\",\n            children: \"Nome: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-10\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"nome\",\n              type: \"text\",\n              value: anime.nome,\n              onChange: function onChange(e) {\n                return onChangeNome(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field p-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"temporada\",\n            className: \"p-col-12 p-md-2\",\n            children: \"Temporada:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-col-12 p-md-10\",\n            children: /*#__PURE__*/_jsxDEV(InputText, {\n              id: \"temporada\",\n              type: \"text\",\n              value: anime.temporada,\n              onChange: function onChange(e) {\n                return onChangeTemporada(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-field-checkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-field-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              inputId: \"possuiManga\",\n              onChange: function onChange(e) {\n                return onChangePossuiManga(e.checked);\n              },\n              checked: anime.possuiManga\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"possuiManga\",\n              children: \"Possui mang\\xE1 ?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"back-button\",\n          style: {\n            marginRight: '15px'\n          },\n          label: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Salvar\",\n        onClick: function onClick() {\n          return _save();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AnimeForm, \"S/R8QsRVSC1F8PdNCTuCDU5QWwY=\", false, function () {\n  return [useSelector, useRouter, useForm];\n});\n\n_c = AnimeForm;\nexport default _c2 = withAuth(AnimeForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnimeForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/anime/form.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Link","useRouter","useForm","Controller","Fieldset","InputText","Checkbox","Button","Toast","withAuth","AnimeDataService","AnimeForm","props","animeSelectedRedux","state","animeReducer","animeSelected","id","undefined","nome","possuiManga","temporada","anime","setAnime","toast","router","_save","Number","_post","then","response","current","show","severity","summary","detail","life","setTimeout","console","log","push","_put","onChangeNome","animeAux","onChangeTemporada","onChangePossuiManga","defaultValues","checkbox","handleSubmit","control","reset","onSubmit","data","required","field","e","target","value","checked","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport { Fieldset } from 'primereact/fieldset';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Button } from 'primereact/button';\r\nimport { Toast } from 'primereact/toast';\r\n\r\n\r\nimport withAuth from '../../components/withAuth';\r\n\r\nimport 'primeflex/primeflex.css';\r\n\r\nimport { AnimeDataService } from '../../services/AnimeDataService';\r\n\r\n\r\n\r\nfunction AnimeForm(props) {\r\n\r\n    const animeSelectedRedux = useSelector((state) => state.animeReducer.animeSelected);\r\n\r\n    const [anime, setAnime] = useState({ id: undefined, nome: undefined, possuiManga: false, temporada: undefined });\r\n\r\n    const toast = useRef(null);\r\n\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        if (animeSelectedRedux) {\r\n            setAnime({ id: animeSelectedRedux.id, nome: animeSelectedRedux.nome, possuiManga: animeSelectedRedux.possuiManga, temporada: animeSelectedRedux.temporada });\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    function _save() {\r\n        const anime = { id: animeSelectedRedux.id, nome: nome, possuiManga: possuiManga, temporada: Number(temporada) };\r\n        if (!anime.id) {\r\n            AnimeDataService._post(anime).then(response => {\r\n                toast.current.show({ severity: 'success', summary: 'Sucesso', detail: 'Registro criado com sucesso!', life: 3000 });\r\n                setTimeout(() => {\r\n                    console.log('EXECUTADO POST');\r\n                    router.push('/anime');\r\n                }, 3000);\r\n            })\r\n        } else {\r\n            AnimeDataService._put(anime).then(response => {\r\n                toast.current.show({ severity: 'success', summary: 'Sucesso', detail: 'Registro alterado com sucesso!', life: 3000 });\r\n                setTimeout(() => {\r\n                    console.log('EXECUTADO PUT');\r\n                    router.push('/anime');\r\n                }, 3000);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    function onChangeNome(nome) {\r\n        console.log(nome);\r\n        let animeAux = { ...anime };\r\n        animeAux.nome = nome;\r\n        setAnime(anime);\r\n    }\r\n\r\n    function onChangeTemporada(temporada) {\r\n        let animeAux = { ...anime };\r\n        animeAux.temporada = temporada;\r\n        setAnime(anime);\r\n    }\r\n\r\n    function onChangePossuiManga(possuiManga) {\r\n        let animeAux = { ...anime };\r\n        animeAux.possuiManga = possuiManga;\r\n        setAnime(anime);\r\n    }\r\n\r\n    const { handleSubmit, control, reset } = useForm({\r\n        defaultValues: {\r\n            checkbox: false,\r\n        }\r\n    });\r\n\r\n    const onSubmit = data => {\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={toast} />\r\n            <Fieldset legend=\"Anime Form\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                    <label htmlFor=\"nome\" className=\"p-col-12 p-md-2\">Nome: </label>\r\n                    <Controller\r\n                        name=\"nome\"\r\n                        control={control}\r\n                        rules={{ required: false }}\r\n                        render={({ field }) => <InputText {...field} />}\r\n                    />\r\n\r\n                    <label htmlFor=\"temporada\" className=\"p-col-12 p-md-2\">Temporada:</label>\r\n                    <Controller\r\n                        name=\"temporada\"\r\n                        control={control}\r\n                        rules={{ required: false }}\r\n                        render={({ field }) => <InputText {...field} />}\r\n                    /> \r\n\r\n\r\n                    <Controller\r\n                        name=\"possuiManga\"\r\n                        control={control}\r\n                        rules={{ required: false }}\r\n                        render={({ field }) => <Checkbox {...field} />}\r\n                    />\r\n                    <label htmlFor=\"possuiManga\">Possui mangá ?</label>\r\n                </form>\r\n\r\n                <div className=\"p-fluid\">\r\n                    <div className=\"p-field p-grid\">\r\n                        <label htmlFor=\"nome\" className=\"p-col-12 p-md-2\">Nome: </label>\r\n                        <div className=\"p-col-12 p-md-10\">\r\n                            <InputText id=\"nome\" type=\"text\" value={anime.nome} onChange={(e) => onChangeNome(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-field p-grid\">\r\n                        <label htmlFor=\"temporada\" className=\"p-col-12 p-md-2\">Temporada:</label>\r\n                        <div className=\"p-col-12 p-md-10\">\r\n                            <InputText id=\"temporada\" type=\"text\" value={anime.temporada} onChange={(e) => onChangeTemporada(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-field-checkbox\">\r\n                        <div className=\"p-field-checkbox\">\r\n                            <Checkbox inputId=\"possuiManga\" onChange={e => onChangePossuiManga(e.checked)} checked={anime.possuiManga} />\r\n                            <label htmlFor=\"possuiManga\">Possui mangá ?</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <Link href=\"/anime\">\r\n                    <Button id='back-button' style={{ marginRight: '15px' }} label=\"Voltar\" />\r\n                </Link>\r\n\r\n                <Button label=\"Salvar\" onClick={() => _save()} />\r\n\r\n            </Fieldset>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default withAuth(AnimeForm);"]},"metadata":{},"sourceType":"module"}