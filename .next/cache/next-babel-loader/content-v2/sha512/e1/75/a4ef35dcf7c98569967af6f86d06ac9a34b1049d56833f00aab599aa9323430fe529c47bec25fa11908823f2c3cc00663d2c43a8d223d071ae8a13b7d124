{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\userEntity\\\\form.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { Fieldset } from \"primereact/fieldset\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Checkbox } from \"primereact/checkbox\";\nimport { Button } from \"primereact/button\";\nimport { Toast } from \"primereact/toast\";\nimport { Password } from 'primereact/password';\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport withAuth from \"../../components/withAuth\";\nimport \"primeflex/primeflex.css\";\nimport { UserEntityDataService } from \"../../services/UserEntityDataService\";\nimport { AccessProfileDataService } from \"../../services/AccessProfileDataService\";\n\nfunction UserEntityForm(props) {\n  const userEntitySelectedRedux = useState(useSelector(state => state.userEntitySelectedReducer.userEntitySelected));\n  const {\n    0: selectedLocalData,\n    1: setSelectedLocalData\n  } = useState(null);\n  const {\n    0: comboBoxAccessProfiles,\n    1: setComboBoxAccessProfiles\n  } = useState([]);\n  const {\n    0: selectedAccessProfilesList,\n    1: setSelectedAccessProfileList\n  } = useState([]);\n  const toast = useRef(null);\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    control,\n    register,\n    handleSubmit,\n    setValue,\n    errors,\n    getValues\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: {\n      \"name\": userEntitySelectedRedux ? userEntitySelectedRedux.name : \"\",\n      \"email\": userEntitySelectedRedux ? userEntitySelectedRedux.email : \"\",\n      \"password\": userEntitySelectedRedux ? userEntitySelectedRedux.password : \"\"\n    }\n  });\n\n  const onSubmit = data => {\n    const bcrypt = require('bcryptjs');\n\n    const salt = bcrypt.genSaltSync(10);\n    const hash = bcrypt.hashSync(data.password, salt);\n  };\n\n  useEffect(() => {\n    AccessProfileDataService._comboBoxAccessProfiles().then(response => {\n      setComboBoxAccessProfiles(response.data);\n      setValue(\"accessProfile\", response.data[0].value);\n    });\n  }, []); // useEffect(() => {\n  //     if(userEntitySelectedRedux){\n  //         console.log(\"CAIU\", userEntitySelectedRedux);\n  //         setValue(\"name\", userEntitySelectedRedux.name);\n  //         setValue(\"email\", userEntitySelectedRedux.email);\n  //         setValue(\"password\", userEntitySelectedRedux.password);\n  //     }\n  // }, [userEntitySelectedRedux]);\n\n  function _save() {\n    if (!selectedLocalData.id) {\n      UserEntityDataService._post(selectedLocalData).then(response => {\n        toast.current.show({\n          severity: \"success\",\n          summary: \"Sucesso\",\n          detail: \"Registro criado com sucesso!\",\n          life: 3000\n        });\n        setTimeout(() => {\n          console.log(\"EXECUTADO POST\");\n          router.push(\"/userEntity\");\n        }, 3000);\n      });\n    } else {\n      UserEntityDataService._put(selectedLocalData).then(response => {\n        toast.current.show({\n          severity: \"success\",\n          summary: \"Sucesso\",\n          detail: \"Registro alterado com sucesso!\",\n          life: 3000\n        });\n        setTimeout(() => {\n          console.log(\"EXECUTADO PUT\");\n          router.push(\"/userEntity\");\n        }, 3000);\n      });\n    }\n  }\n\n  const addAccessProfile = () => {\n    let selectedAccessProfilesListAux = selectedAccessProfilesList;\n    const ap = comboBoxAccessProfiles.find(item => item.value === getValues(\"accessProfile\"));\n    selectedAccessProfilesListAux.push(ap);\n    let comboBoxAccessProfileAux = comboBoxAccessProfiles.filter(item => item.value !== getValues(\"accessProfile\")); //atualiza combobox das funcionalidade deixando apenas a funcionalidades não adicionadas no combobox\n\n    setComboBoxAccessProfiles(comboBoxAccessProfileAux); //atualiza a funcionalidade selecionada após a atualização do array de funcioalidades\n\n    if (comboBoxAccessProfileAux && comboBoxAccessProfileAux.length > 0) {\n      setValue(\"accessProfile\", comboBoxAccessProfileAux[0].value);\n    } //atualiza a tabela com os dados da funcionalidade e as permissões da mesma\n\n\n    setSelectedAccessProfileList(selectedAccessProfilesListAux);\n  };\n\n  const removeAccessProfile = rowData => {\n    let selectedAccessProfilesListAux = selectedAccessProfilesList.filter(function (item) {\n      return item.value !== rowData.value;\n    });\n    setSelectedAccessProfileList(selectedAccessProfilesListAux);\n    let comboBoxAccessProfileAux = comboBoxAccessProfiles;\n    comboBoxAccessProfileAux.push(rowData);\n    setComboBoxAccessProfiles(comboBoxAccessProfileAux);\n    setValue(\"accessProfile\", comboBoxAccessProfileAux[0].value);\n  };\n\n  function idButtonRemoveListGenerate(rowData) {\n    return \"buttonRemoveFromList\" + rowData.value;\n  }\n\n  const actionBodyTemplate = rowData => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        id: idButtonRemoveListGenerate(rowData),\n        icon: \"pi pi-trash\",\n        className: \"p-button-rounded p-button-warning\",\n        onClick: () => removeAccessProfile(rowData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        ref: toast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n        style: {\n          marginTop: \"15px\"\n        },\n        legend: \"Cadastro de Usu\\xE1rios\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Nome: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            defaultValue: \"\",\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(InputText, _objectSpread(_objectSpread({}, field), {}, {\n              id: \"name\",\n              name: \"name\",\n              placeholder: \"Nome\",\n              field: userEntitySelectedRedux.name,\n              className: \"inputfield w-full\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"E-mail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"email\",\n            control: control,\n            defaultValue: \"\",\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(InputText, _objectSpread(_objectSpread({}, field), {}, {\n              id: \"email\",\n              name: \"email\",\n              placeholder: \"E-mail\",\n              className: \"inputfield w-full\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"password\",\n            control: control,\n            defaultValue: \"\",\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(Password, _objectSpread(_objectSpread({}, field), {}, {\n              id: \"password\",\n              name: \"password\",\n              placeholder: \"Senha\",\n              toggleMask: true,\n              autoComplete: \"new-password\",\n              weakLabel: \"Fraca\",\n              mediumLabel: \"M\\xE9dia\",\n              strongLabel: \"Forte\",\n              promptLabel: \"Por favor entre com a senha\",\n              className: \"inputfield w-full\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formgrid grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"accessProfiles\",\n              children: \"Perfis de Acesso:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"accessProfile\",\n              control: control,\n              defaultValue: undefined,\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(Dropdown, _objectSpread(_objectSpread({}, field), {}, {\n                id: \"accessProfile\",\n                name: \"accessProfile\",\n                options: comboBoxAccessProfiles,\n                className: \"inputfield w-full\",\n                emptyMessage: \"Nenhum Perfil Dispon\\xEDvel\"\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field col-12 md:col-6\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              id: \"buttonAddList\",\n              label: \"Adicionar\",\n              onClick: addAccessProfile,\n              disabled: comboBoxAccessProfiles.length < 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            scrollHeight: \"300px\",\n            scrollable: true,\n            value: selectedAccessProfilesList,\n            responsiveLayout: \"scroll\",\n            children: [/*#__PURE__*/_jsxDEV(Column, {\n              header: \"Selecionado\",\n              selectionMode: \"single\",\n              headerStyle: {\n                width: \"3em\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              field: \"label\",\n              header: \"Perfil de Acesso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              body: actionBodyTemplate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/userEntity\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            id: \"buttonBack\",\n            style: {\n              marginRight: \"15px\"\n            },\n            label: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          id: \"buttonSave\",\n          label: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\nexport default withAuth(UserEntityForm);","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/userEntity/form.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","useForm","Controller","Link","useRouter","Fieldset","InputText","Checkbox","Button","Toast","Password","Dropdown","DataTable","Column","withAuth","UserEntityDataService","AccessProfileDataService","UserEntityForm","props","userEntitySelectedRedux","state","userEntitySelectedReducer","userEntitySelected","selectedLocalData","setSelectedLocalData","comboBoxAccessProfiles","setComboBoxAccessProfiles","selectedAccessProfilesList","setSelectedAccessProfileList","toast","router","dispatch","control","register","handleSubmit","setValue","errors","getValues","mode","defaultValues","name","email","password","onSubmit","data","bcrypt","require","salt","genSaltSync","hash","hashSync","_comboBoxAccessProfiles","then","response","value","_save","id","_post","current","show","severity","summary","detail","life","setTimeout","console","log","push","_put","addAccessProfile","selectedAccessProfilesListAux","ap","find","item","comboBoxAccessProfileAux","filter","length","removeAccessProfile","rowData","idButtonRemoveListGenerate","actionBodyTemplate","marginTop","field","undefined","width","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Link from \"next/link\"\r\nimport { useRouter } from \"next/router\"\r\n\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Checkbox } from \"primereact/checkbox\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Toast } from \"primereact/toast\";\r\nimport { Password } from 'primereact/password';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\n\r\n\r\nimport withAuth from \"../../components/withAuth\";\r\n\r\nimport \"primeflex/primeflex.css\";\r\n\r\nimport { UserEntityDataService } from \"../../services/UserEntityDataService\";\r\nimport { AccessProfileDataService } from \"../../services/AccessProfileDataService\";\r\n\r\n\r\n\r\n\r\nfunction UserEntityForm(props) {\r\n\r\n    const userEntitySelectedRedux = useState(useSelector((state) => state.userEntitySelectedReducer.userEntitySelected));\r\n\r\n    const [selectedLocalData, setSelectedLocalData] = useState(null);\r\n\r\n    const [comboBoxAccessProfiles, setComboBoxAccessProfiles] = useState([]);\r\n    const [selectedAccessProfilesList, setSelectedAccessProfileList] = useState([]);\r\n\r\n\r\n    const toast = useRef(null);\r\n    const router = useRouter();\r\n    const dispatch = useDispatch();\r\n\r\n    const { control, register, handleSubmit, setValue, errors, getValues } = useForm({ \r\n        mode: 'onChange',\r\n        defaultValues:{\r\n            \"name\": userEntitySelectedRedux ? userEntitySelectedRedux.name: \"\",\r\n            \"email\": userEntitySelectedRedux ? userEntitySelectedRedux.email : \"\",\r\n            \"password\": userEntitySelectedRedux ? userEntitySelectedRedux.password : \"\"\r\n        }\r\n    });\r\n\r\n    const onSubmit = data => {\r\n        const bcrypt = require('bcryptjs');\r\n        const salt = bcrypt.genSaltSync(10);\r\n        const hash = bcrypt.hashSync(data.password, salt);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        AccessProfileDataService._comboBoxAccessProfiles().then(response => {\r\n            setComboBoxAccessProfiles(response.data);\r\n            setValue(\"accessProfile\", response.data[0].value);\r\n        })\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     if(userEntitySelectedRedux){\r\n    //         console.log(\"CAIU\", userEntitySelectedRedux);\r\n    //         setValue(\"name\", userEntitySelectedRedux.name);\r\n    //         setValue(\"email\", userEntitySelectedRedux.email);\r\n    //         setValue(\"password\", userEntitySelectedRedux.password);\r\n    //     }\r\n    // }, [userEntitySelectedRedux]);\r\n    \r\n\r\n    function _save() {\r\n\r\n        if (!selectedLocalData.id) {\r\n            UserEntityDataService._post(selectedLocalData).then(response => {\r\n                toast.current.show({ severity: \"success\", summary: \"Sucesso\", detail: \"Registro criado com sucesso!\", life: 3000 });\r\n                setTimeout(() => {\r\n                    console.log(\"EXECUTADO POST\");\r\n                    router.push(\"/userEntity\");\r\n                }, 3000);\r\n            })\r\n        } else {\r\n            UserEntityDataService._put(selectedLocalData).then(response => {\r\n                toast.current.show({ severity: \"success\", summary: \"Sucesso\", detail: \"Registro alterado com sucesso!\", life: 3000 });\r\n                setTimeout(() => {\r\n                    console.log(\"EXECUTADO PUT\");\r\n                    router.push(\"/userEntity\");\r\n                }, 3000);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    const addAccessProfile = () => {\r\n        let selectedAccessProfilesListAux = selectedAccessProfilesList;\r\n        const ap = comboBoxAccessProfiles.find(item => item.value === getValues(\"accessProfile\"));\r\n        selectedAccessProfilesListAux.push(ap);\r\n        let comboBoxAccessProfileAux = comboBoxAccessProfiles.filter(item => item.value !== getValues(\"accessProfile\"));\r\n\r\n        //atualiza combobox das funcionalidade deixando apenas a funcionalidades não adicionadas no combobox\r\n        setComboBoxAccessProfiles(comboBoxAccessProfileAux);\r\n        //atualiza a funcionalidade selecionada após a atualização do array de funcioalidades\r\n        if (comboBoxAccessProfileAux && comboBoxAccessProfileAux.length > 0) {\r\n            setValue(\"accessProfile\", comboBoxAccessProfileAux[0].value);\r\n        }\r\n        //atualiza a tabela com os dados da funcionalidade e as permissões da mesma\r\n        setSelectedAccessProfileList(selectedAccessProfilesListAux);\r\n    }\r\n\r\n    const removeAccessProfile = (rowData) => {\r\n        let selectedAccessProfilesListAux = selectedAccessProfilesList.filter(function (item) { return item.value !== rowData.value });\r\n        setSelectedAccessProfileList(selectedAccessProfilesListAux);\r\n\r\n        let comboBoxAccessProfileAux = comboBoxAccessProfiles;\r\n        comboBoxAccessProfileAux.push(rowData);\r\n        setComboBoxAccessProfiles(comboBoxAccessProfileAux);\r\n        setValue(\"accessProfile\", comboBoxAccessProfileAux[0].value);\r\n    }\r\n\r\n    function idButtonRemoveListGenerate(rowData) {\r\n        return \"buttonRemoveFromList\" + rowData.value;\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <Button type=\"button\" id={idButtonRemoveListGenerate(rowData)} icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => removeAccessProfile(rowData)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n                <Toast ref={toast} />\r\n                <Fieldset style={{ marginTop: \"15px\" }} legend=\"Cadastro de Usuários\">\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome: </label>\r\n                        <Controller\r\n                            name=\"name\"\r\n                            control={control}\r\n                            defaultValue={\"\"}\r\n                            render={({ field }) =>\r\n                                <InputText\r\n                                    {...field}\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Nome\"\r\n                                    field={userEntitySelectedRedux.name}\r\n                                    className=\"inputfield w-full\"\r\n                                />}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"email\">E-mail:</label>\r\n                        <Controller\r\n                            name=\"email\"\r\n                            control={control}\r\n                            defaultValue={\"\"}\r\n                            render={({ field }) =>\r\n                                <InputText\r\n                                    {...field}\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"E-mail\"\r\n                                    className=\"inputfield w-full\"\r\n                                />}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <Controller\r\n                            name=\"password\"\r\n                            control={control}\r\n                            defaultValue={\"\"}\r\n                            render={({ field }) =>\r\n                                <Password\r\n                                    {...field}\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Senha\"\r\n                                    toggleMask\r\n                                    autoComplete=\"new-password\"\r\n                                    weakLabel=\"Fraca\"\r\n                                    mediumLabel=\"Média\"\r\n                                    strongLabel=\"Forte\"\r\n                                    promptLabel=\"Por favor entre com a senha\"\r\n                                    className=\"inputfield w-full\"\r\n                                />}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"formgrid grid\">\r\n                        <div className=\"field col-12\">\r\n                            <label htmlFor=\"accessProfiles\">Perfis de Acesso:</label>\r\n                            <Controller\r\n                                name=\"accessProfile\"\r\n                                control={control}\r\n                                defaultValue={undefined}\r\n                                render={({ field }) =>\r\n                                    <Dropdown\r\n                                        {...field}\r\n                                        id=\"accessProfile\"\r\n                                        name=\"accessProfile\"\r\n                                        options={comboBoxAccessProfiles}\r\n                                        className=\"inputfield w-full\"\r\n                                        emptyMessage=\"Nenhum Perfil Disponível\"\r\n                                    />}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field col-12 md:col-6\">\r\n                            <Button type=\"button\" id=\"buttonAddList\" label=\"Adicionar\" onClick={addAccessProfile} disabled={comboBoxAccessProfiles.length < 1} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <DataTable\r\n                            scrollHeight=\"300px\"\r\n                            scrollable\r\n                            value={selectedAccessProfilesList}\r\n                            responsiveLayout=\"scroll\">\r\n                            <Column header=\"Selecionado\" selectionMode=\"single\" headerStyle={{ width: \"3em\" }}></Column>\r\n                            <Column field=\"label\" header=\"Perfil de Acesso\"></Column>\r\n                            <Column body={actionBodyTemplate}></Column>\r\n                        </DataTable>\r\n                    </div>\r\n\r\n                    <Link href=\"/userEntity\">\r\n                        <Button type=\"button\" id=\"buttonBack\" style={{ marginRight: \"15px\" }} label=\"Voltar\" />\r\n                    </Link>\r\n\r\n                    <Button type=\"submit\" id=\"buttonSave\" label=\"Salvar\" />\r\n\r\n                </Fieldset>\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default withAuth(UserEntityForm);"]},"metadata":{},"sourceType":"module"}