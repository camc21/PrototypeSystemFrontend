{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\PROJETOS\\\\PrototypeSystemFrontend\\\\pages\\\\anime\\\\index.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Link from 'next/link';\nimport { Toast } from 'primereact/toast';\nimport { Button } from 'primereact/button';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Fieldset } from 'primereact/fieldset';\nimport { Dropdown } from 'primereact/dropdown';\nimport { AnimeDataService } from '../../services/AnimeDataService';\nimport withAuth from '../../components/withAuth';\nimport { loadSelectedDataAction, loadAnimeListAction } from '../../store/actions/anime';\n\nfunction Anime(props) {\n  const {\n    0: animeDataPage,\n    1: setAnimeDataPage\n  } = useState(useSelector(state => state.animeListReducer.animeDataPage));\n  const {\n    0: animeSelected,\n    1: setAnimeSelected\n  } = useState(useSelector(state => state.animeSelectedReducer.animeSelected));\n  const {\n    0: first,\n    1: setfirst\n  } = useState(0);\n  const {\n    0: rows,\n    1: setRows\n  } = useState(10);\n  const {\n    0: sortBy,\n    1: setSortBy\n  } = useState(\"nome\");\n  const {\n    0: itensPerPage,\n    1: setItensPage\n  } = useState([{\n    value: 10,\n    label: 10\n  }, {\n    value: 20,\n    label: 20\n  }, {\n    value: 50,\n    label: 50\n  }]);\n  const {\n    0: itemPerPage,\n    1: setItemPerPage\n  } = useState(itensPerPage[0]);\n  const toast = useRef(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    page(first, rows, sortBy);\n  }, []);\n\n  function page(pageNo, pageSize, sortBy) {\n    AnimeDataService._page(pageNo, pageSize, sortBy).then(response => {\n      console.log(response.data);\n      const responseAux = {\n        content: response.data.content,\n        empty: response.data.empty,\n        first: response.data.first,\n        last: response.data.last,\n        number: response.data.number,\n        numberOfElements: response.data.numberOfElements,\n        size: response.data.size,\n        totalElements: response.data.totalElements,\n        totalPages: response.data.totalPages\n      };\n      dispatch(loadAnimeListAction(responseAux));\n      setAnimeDataPage(responseAux);\n    }).catch(error => {\n      toast.current.show({\n        severity: 'warn',\n        summary: 'Aviso',\n        detail: error.response.data.message,\n        life: 3000\n      });\n    });\n  }\n\n  const novo = () => {\n    dispatch(loadSelectedDataAction(null));\n  };\n\n  const editar = rowData => {\n    dispatch(loadSelectedDataAction(rowData));\n    setAnimeSelected(rowData);\n  };\n\n  const _delete = rowData => {\n    const index = paginator.content.indexOf(rowData);\n\n    AnimeDataService._delete(rowData.id).then(response => {\n      toast.current.show({\n        severity: 'error',\n        summary: 'Erro',\n        detail: 'Anime ' + rowData.nome + ' excluído com sucesso!',\n        life: 3000\n      });\n      list();\n    }).catch(error => {\n      toast.current.show({\n        severity: 'warn',\n        summary: 'Aviso',\n        detail: error.response.data.message,\n        life: 3000\n      });\n    });\n  };\n\n  const actionBodyTemplate = rowData => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime/form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: '10px'\n          },\n          icon: \"pi pi-pencil\",\n          className: \"p-button-rounded p-button-success p-mr-2\",\n          onClick: () => editar(rowData),\n          disabled: !animeSelected || !animeSelected.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: \"pi pi-trash\",\n        className: \"p-button-rounded p-button-warning\",\n        onClick: () => _delete(rowData),\n        disabled: !animeSelected || !animeSelected.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const possuiManga = atributte => {\n    if (atributte) {\n      return 'Possui Mangá';\n    }\n\n    return 'Não Possui Mangá';\n  };\n\n  function onCustomPage(e) {\n    setfirst(e.first);\n    setRows(e.rows);\n  }\n\n  function selectAnime(e) {\n    if (e.value) {\n      dispatch(loadSelectedDataAction(e.value));\n      setAnimeSelected(e.value);\n    } else {\n      dispatch(loadSelectedDataAction(null));\n      setAnimeSelected(null);\n    }\n  }\n\n  const template = {\n    layout: 'RowsPerPageDropdown CurrentPageReport PrevPageLink NextPageLink',\n    'RowsPerPageDropdown': options => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mx-1\",\n          style: {\n            color: 'var(--text-color)',\n            userSelect: 'none'\n          },\n          children: \"Items per page: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          value: itemPerPage,\n          value: \"value\",\n          label: \"label\",\n          options: itensPerPage,\n          onChange: e => console.log(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this);\n    },\n    'CurrentPageReport': () => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'var(--text-color)',\n          userSelect: 'none',\n          width: '120px',\n          textAlign: 'center'\n        },\n        children: [animeDataPage && animeDataPage.number, \" - \", animeDataPage && animeDataPage.numberOfElements, \" of \", animeDataPage && animeDataPage.totalElements]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fieldset, {\n      legend: \"Anime\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/anime/form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"new-button\",\n          label: \"Novo\",\n          onClick: () => novo({})\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        header: \"Animes Cadastrados\",\n        value: animeDataPage && animeDataPage.content,\n        selection: animeSelected,\n        onSelectionChange: e => selectAnime(e),\n        dataKey: \"id\",\n        paginator: true,\n        paginatorTemplate: template,\n        first: first,\n        rows: rows,\n        onPage: onCustomPage,\n        paginatorClassName: \"justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          selectionMode: \"single\",\n          headerStyle: {\n            width: '3em'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"nome\",\n          header: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"temporada\",\n          header: \"Temporada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: e => possuiManga(e.possuiManga),\n          header: \"Possui mang\\xE1 ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          body: actionBodyTemplate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"back-button\",\n          label: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default withAuth(Anime);","map":{"version":3,"sources":["D:/PROJETOS/PrototypeSystemFrontend/pages/anime/index.jsx"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","Link","Toast","Button","DataTable","Column","Fieldset","Dropdown","AnimeDataService","withAuth","loadSelectedDataAction","loadAnimeListAction","Anime","props","animeDataPage","setAnimeDataPage","state","animeListReducer","animeSelected","setAnimeSelected","animeSelectedReducer","first","setfirst","rows","setRows","sortBy","setSortBy","itensPerPage","setItensPage","value","label","itemPerPage","setItemPerPage","toast","dispatch","page","pageNo","pageSize","_page","then","response","console","log","data","responseAux","content","empty","last","number","numberOfElements","size","totalElements","totalPages","catch","error","current","show","severity","summary","detail","message","life","novo","editar","rowData","_delete","index","paginator","indexOf","id","nome","list","actionBodyTemplate","marginRight","possuiManga","atributte","onCustomPage","e","selectAnime","template","layout","options","color","userSelect","width","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Link from 'next/link'\r\n\r\nimport { Toast } from 'primereact/toast';\r\nimport { Button } from 'primereact/button';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Fieldset } from 'primereact/fieldset';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nimport { AnimeDataService } from '../../services/AnimeDataService';\r\nimport withAuth from '../../components/withAuth';\r\nimport { loadSelectedDataAction, loadAnimeListAction } from '../../store/actions/anime';\r\n\r\n\r\nfunction Anime(props) {\r\n\r\n    const [animeDataPage, setAnimeDataPage] = useState(useSelector((state) => state.animeListReducer.animeDataPage));\r\n\r\n    const [animeSelected, setAnimeSelected] = useState(useSelector((state) => state.animeSelectedReducer.animeSelected));\r\n\r\n\r\n    const [first, setfirst] = useState(0);\r\n    const [rows, setRows] = useState(10);\r\n    const [sortBy, setSortBy] = useState(\"nome\");\r\n\r\n    const [itensPerPage, setItensPage] = useState([\r\n        { value: 10, label: 10 },\r\n        { value: 20, label: 20 },\r\n        { value: 50, label: 50 }\r\n    ]);\r\n    const [itemPerPage, setItemPerPage] = useState(itensPerPage[0])\r\n\r\n    const toast = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        page(first, rows, sortBy);\r\n    }, [])\r\n\r\n    function page(pageNo, pageSize, sortBy) {\r\n        AnimeDataService._page(pageNo, pageSize, sortBy).then(response => {\r\n            console.log(response.data);\r\n            const responseAux = {\r\n                content: response.data.content,\r\n                empty: response.data.empty,\r\n                first: response.data.first,\r\n                last: response.data.last,\r\n                number: response.data.number,\r\n                numberOfElements: response.data.numberOfElements,\r\n                size: response.data.size,\r\n                totalElements: response.data.totalElements,\r\n                totalPages: response.data.totalPages\r\n            }\r\n            dispatch(loadAnimeListAction(responseAux));\r\n            setAnimeDataPage(responseAux);\r\n        }).catch(error => {\r\n            toast.current.show({ severity: 'warn', summary: 'Aviso', detail: error.response.data.message, life: 3000 });\r\n        })\r\n    }\r\n\r\n    const novo = () => {\r\n        dispatch(loadSelectedDataAction(null));\r\n    }\r\n\r\n    const editar = (rowData) => {\r\n        dispatch(loadSelectedDataAction(rowData));\r\n        setAnimeSelected(rowData)\r\n    }\r\n\r\n    const _delete = (rowData) => {\r\n        const index = paginator.content.indexOf(rowData);\r\n        AnimeDataService._delete(rowData.id).then(response => {\r\n            toast.current.show({ severity: 'error', summary: 'Erro', detail: 'Anime ' + rowData.nome + ' excluído com sucesso!', life: 3000 });\r\n            list();\r\n        }).catch(error => {\r\n            toast.current.show({ severity: 'warn', summary: 'Aviso', detail: error.response.data.message, life: 3000 });\r\n        })\r\n    }\r\n\r\n    const actionBodyTemplate = (rowData) => {\r\n        return (\r\n            <>\r\n                <Link href=\"/anime/form\">\r\n                    <Button style={{ marginRight: '10px' }} icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-success p-mr-2\" onClick={() => editar(rowData)} disabled={!animeSelected || !animeSelected.id} />\r\n                </Link>\r\n\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-warning\" onClick={() => _delete(rowData)} disabled={!animeSelected || !animeSelected.id} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    const possuiManga = (atributte) => {\r\n        if (atributte) {\r\n            return 'Possui Mangá';\r\n        } return 'Não Possui Mangá';\r\n    }\r\n\r\n    function onCustomPage(e) {\r\n        setfirst(e.first);\r\n        setRows(e.rows);\r\n    }\r\n\r\n    function selectAnime(e) {\r\n        if(e.value){\r\n            dispatch(loadSelectedDataAction(e.value))\r\n            setAnimeSelected(e.value)\r\n        }else {\r\n            dispatch(loadSelectedDataAction(null))\r\n            setAnimeSelected(null)\r\n        }\r\n        \r\n    }\r\n\r\n    const template = {\r\n        layout: 'RowsPerPageDropdown CurrentPageReport PrevPageLink NextPageLink',\r\n        'RowsPerPageDropdown': (options) => {\r\n            return (\r\n                <React.Fragment>\r\n                    <span className=\"mx-1\" style={{ color: 'var(--text-color)', userSelect: 'none' }}>Items per page: </span>\r\n                    <Dropdown value={itemPerPage} value=\"value\" label=\"label\" options={itensPerPage} onChange={(e) => console.log(e)} />\r\n                </React.Fragment>\r\n            );\r\n        },\r\n        'CurrentPageReport': () => {\r\n            return (\r\n                <span style={{ color: 'var(--text-color)', userSelect: 'none', width: '120px', textAlign: 'center' }}>\r\n                    {animeDataPage && animeDataPage.number} - {animeDataPage && animeDataPage.numberOfElements} of {animeDataPage && animeDataPage.totalElements}\r\n                </span>\r\n            )\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Toast ref={toast} />\r\n            <Fieldset legend=\"Anime\">\r\n\r\n                <Link href=\"/anime/form\">\r\n                    <Button id='new-button' label=\"Novo\" onClick={() => novo({})} />\r\n                </Link>\r\n\r\n                <DataTable\r\n                    header=\"Animes Cadastrados\"\r\n                    value={ animeDataPage && animeDataPage.content }\r\n                    selection={animeSelected}\r\n                    onSelectionChange={e => selectAnime(e)}\r\n                    dataKey=\"id\"\r\n                    paginator\r\n                    paginatorTemplate={template}\r\n                    first={first}\r\n                    rows={rows}\r\n                    onPage={onCustomPage}\r\n                    paginatorClassName=\"justify-content-end\"\r\n                >\r\n                    <Column selectionMode=\"single\" headerStyle={{width: '3em'}}></Column>\r\n                    <Column field=\"nome\" header=\"Nome\"></Column>\r\n                    <Column field=\"temporada\" header=\"Temporada\"></Column>\r\n                    <Column field={e => possuiManga(e.possuiManga)} header=\"Possui mangá ?\"></Column>\r\n                    <Column body={actionBodyTemplate}></Column>\r\n                </DataTable>\r\n\r\n                <Link href=\"/\">\r\n                    <Button id='back-button' label=\"Voltar\" />\r\n                </Link>\r\n\r\n            </Fieldset>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withAuth(Anime);"]},"metadata":{},"sourceType":"module"}